// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium_3_HH_
#define _pqcrystals_dilithium_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pqcrystals_dilithlbW.h"

namespace ap_rtl {

struct pqcrystals_dilithium_3 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;
    sc_out< sc_lv<10> > v_vec_coeffs_address1;
    sc_out< sc_logic > v_vec_coeffs_ce1;
    sc_out< sc_logic > v_vec_coeffs_we1;
    sc_out< sc_lv<32> > v_vec_coeffs_d1;


    // Module declarations
    pqcrystals_dilithium_3(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium_3);

    ~pqcrystals_dilithium_3();

    sc_trace_file* mVcdFile;

    pqcrystals_dilithlbW<1,1,9,24,32,32>* pqcrystals_dilithlbW_U64;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten_reg_75;
    sc_signal< sc_lv<3> > i_0_reg_86;
    sc_signal< sc_lv<9> > i_0_i_reg_97;
    sc_signal< sc_lv<1> > icmp_ln187_fu_108_p2;
    sc_signal< sc_lv<1> > icmp_ln187_reg_208;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln187_reg_208_pp0_iter1_reg;
    sc_signal< sc_lv<11> > add_ln187_fu_114_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > select_ln188_1_fu_140_p3;
    sc_signal< sc_lv<3> > select_ln188_1_reg_217;
    sc_signal< sc_lv<10> > v_vec_coeffs_addr_reg_222;
    sc_signal< sc_lv<10> > v_vec_coeffs_addr_reg_222_pp0_iter1_reg;
    sc_signal< sc_lv<9> > i_8_fu_175_p2;
    sc_signal< sc_lv<32> > v_vec_coeffs_load_reg_233;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<9> > trunc_ln_reg_238;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<3> > ap_phi_mux_i_0_phi_fu_90_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln33_2_fu_170_p1;
    sc_signal< sc_lv<32> > grp_fu_200_p3;
    sc_signal< sc_lv<1> > icmp_ln32_fu_126_p2;
    sc_signal< sc_lv<3> > i_fu_120_p2;
    sc_signal< sc_lv<11> > tmp_fu_148_p3;
    sc_signal< sc_lv<9> > select_ln188_fu_132_p3;
    sc_signal< sc_lv<12> > zext_ln33_1_fu_160_p1;
    sc_signal< sc_lv<12> > zext_ln33_fu_156_p1;
    sc_signal< sc_lv<12> > add_ln33_fu_164_p2;
    sc_signal< sc_lv<32> > add_ln36_fu_181_p2;
    sc_signal< sc_lv<24> > grp_fu_200_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_400000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FF801FFF;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln187_fu_114_p2();
    void thread_add_ln33_fu_164_p2();
    void thread_add_ln36_fu_181_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_90_p4();
    void thread_ap_ready();
    void thread_grp_fu_200_p1();
    void thread_i_8_fu_175_p2();
    void thread_i_fu_120_p2();
    void thread_icmp_ln187_fu_108_p2();
    void thread_icmp_ln32_fu_126_p2();
    void thread_select_ln188_1_fu_140_p3();
    void thread_select_ln188_fu_132_p3();
    void thread_tmp_fu_148_p3();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_address1();
    void thread_v_vec_coeffs_ce0();
    void thread_v_vec_coeffs_ce1();
    void thread_v_vec_coeffs_d1();
    void thread_v_vec_coeffs_we1();
    void thread_zext_ln33_1_fu_160_p1();
    void thread_zext_ln33_2_fu_170_p1();
    void thread_zext_ln33_fu_156_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
