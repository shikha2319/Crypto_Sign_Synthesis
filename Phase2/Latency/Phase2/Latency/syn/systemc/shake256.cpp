// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "shake256.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic shake256::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic shake256::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> shake256::ap_ST_fsm_state1 = "1";
const sc_lv<15> shake256::ap_ST_fsm_state2 = "10";
const sc_lv<15> shake256::ap_ST_fsm_state3 = "100";
const sc_lv<15> shake256::ap_ST_fsm_state4 = "1000";
const sc_lv<15> shake256::ap_ST_fsm_state5 = "10000";
const sc_lv<15> shake256::ap_ST_fsm_state6 = "100000";
const sc_lv<15> shake256::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> shake256::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> shake256::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> shake256::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> shake256::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> shake256::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> shake256::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> shake256::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> shake256::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> shake256::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> shake256::ap_const_lv32_1 = "1";
const sc_lv<32> shake256::ap_const_lv32_2 = "10";
const sc_lv<1> shake256::ap_const_lv1_0 = "0";
const sc_lv<1> shake256::ap_const_lv1_1 = "1";
const sc_lv<32> shake256::ap_const_lv32_3 = "11";
const sc_lv<32> shake256::ap_const_lv32_4 = "100";
const sc_lv<32> shake256::ap_const_lv32_5 = "101";
const sc_lv<32> shake256::ap_const_lv32_A = "1010";
const sc_lv<32> shake256::ap_const_lv32_B = "1011";
const sc_lv<5> shake256::ap_const_lv5_0 = "00000";
const sc_lv<32> shake256::ap_const_lv32_6 = "110";
const sc_lv<4> shake256::ap_const_lv4_0 = "0000";
const sc_lv<3> shake256::ap_const_lv3_0 = "000";
const sc_lv<32> shake256::ap_const_lv32_9 = "1001";
const sc_lv<32> shake256::ap_const_lv32_E = "1110";
const sc_lv<32> shake256::ap_const_lv32_8 = "1000";
const sc_lv<64> shake256::ap_const_lv64_A = "1010";
const sc_lv<64> shake256::ap_const_lv64_10 = "10000";
const sc_lv<32> shake256::ap_const_lv32_C = "1100";
const sc_lv<32> shake256::ap_const_lv32_D = "1101";
const sc_lv<64> shake256::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> shake256::ap_const_lv32_7 = "111";
const sc_lv<5> shake256::ap_const_lv5_19 = "11001";
const sc_lv<5> shake256::ap_const_lv5_1 = "1";
const sc_lv<4> shake256::ap_const_lv4_A = "1010";
const sc_lv<4> shake256::ap_const_lv4_1 = "1";
const sc_lv<8> shake256::ap_const_lv8_50 = "1010000";
const sc_lv<8> shake256::ap_const_lv8_51 = "1010001";
const sc_lv<8> shake256::ap_const_lv8_52 = "1010010";
const sc_lv<8> shake256::ap_const_lv8_53 = "1010011";
const sc_lv<8> shake256::ap_const_lv8_54 = "1010100";
const sc_lv<8> shake256::ap_const_lv8_55 = "1010101";
const sc_lv<8> shake256::ap_const_lv8_56 = "1010110";
const sc_lv<8> shake256::ap_const_lv8_57 = "1010111";
const sc_lv<64> shake256::ap_const_lv64_1F = "11111";
const sc_lv<64> shake256::ap_const_lv64_8000000000000000 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> shake256::ap_const_lv3_6 = "110";
const sc_lv<3> shake256::ap_const_lv3_1 = "1";
const sc_lv<8> shake256::ap_const_lv8_A0 = "10100000";
const sc_lv<32> shake256::ap_const_lv32_F = "1111";
const sc_lv<6> shake256::ap_const_lv6_1 = "1";
const sc_lv<32> shake256::ap_const_lv32_10 = "10000";
const sc_lv<32> shake256::ap_const_lv32_17 = "10111";
const sc_lv<32> shake256::ap_const_lv32_18 = "11000";
const sc_lv<32> shake256::ap_const_lv32_1F = "11111";
const sc_lv<32> shake256::ap_const_lv32_20 = "100000";
const sc_lv<32> shake256::ap_const_lv32_27 = "100111";
const sc_lv<32> shake256::ap_const_lv32_28 = "101000";
const sc_lv<32> shake256::ap_const_lv32_2F = "101111";
const sc_lv<32> shake256::ap_const_lv32_30 = "110000";
const sc_lv<32> shake256::ap_const_lv32_37 = "110111";
const sc_lv<32> shake256::ap_const_lv32_38 = "111000";
const sc_lv<32> shake256::ap_const_lv32_3F = "111111";
const sc_lv<6> shake256::ap_const_lv6_2 = "10";
const sc_lv<6> shake256::ap_const_lv6_3 = "11";
const sc_lv<6> shake256::ap_const_lv6_4 = "100";
const sc_lv<6> shake256::ap_const_lv6_5 = "101";
const sc_lv<6> shake256::ap_const_lv6_6 = "110";
const sc_lv<6> shake256::ap_const_lv6_7 = "111";
const bool shake256::ap_const_boolean_1 = true;

shake256::shake256(sc_module_name name) : sc_module(name), mVcdFile(0) {
    state_0_s_U = new shake256_state_0_s("state_0_s_U");
    state_0_s_U->clk(ap_clk);
    state_0_s_U->reset(ap_rst);
    state_0_s_U->address0(state_0_s_address0);
    state_0_s_U->ce0(state_0_s_ce0);
    state_0_s_U->we0(state_0_s_we0);
    state_0_s_U->d0(state_0_s_d0);
    state_0_s_U->q0(state_0_s_q0);
    state_0_s_U->address1(state_0_s_address1);
    state_0_s_U->ce1(state_0_s_ce1);
    state_0_s_U->we1(state_0_s_we1);
    state_0_s_U->d1(state_0_s_d1);
    state_0_s_U->q1(state_0_s_q1);
    grp_KeccakF1600_StatePer_fu_331 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_331");
    grp_KeccakF1600_StatePer_fu_331->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_331->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_331->ap_start(grp_KeccakF1600_StatePer_fu_331_ap_start);
    grp_KeccakF1600_StatePer_fu_331->ap_done(grp_KeccakF1600_StatePer_fu_331_ap_done);
    grp_KeccakF1600_StatePer_fu_331->ap_idle(grp_KeccakF1600_StatePer_fu_331_ap_idle);
    grp_KeccakF1600_StatePer_fu_331->ap_ready(grp_KeccakF1600_StatePer_fu_331_ap_ready);
    grp_KeccakF1600_StatePer_fu_331->state_0_address0(grp_KeccakF1600_StatePer_fu_331_state_0_address0);
    grp_KeccakF1600_StatePer_fu_331->state_0_ce0(grp_KeccakF1600_StatePer_fu_331_state_0_ce0);
    grp_KeccakF1600_StatePer_fu_331->state_0_we0(grp_KeccakF1600_StatePer_fu_331_state_0_we0);
    grp_KeccakF1600_StatePer_fu_331->state_0_d0(grp_KeccakF1600_StatePer_fu_331_state_0_d0);
    grp_KeccakF1600_StatePer_fu_331->state_0_q0(state_0_s_q0);
    grp_KeccakF1600_StatePer_fu_331->state_0_address1(grp_KeccakF1600_StatePer_fu_331_state_0_address1);
    grp_KeccakF1600_StatePer_fu_331->state_0_ce1(grp_KeccakF1600_StatePer_fu_331_state_0_ce1);
    grp_KeccakF1600_StatePer_fu_331->state_0_we1(grp_KeccakF1600_StatePer_fu_331_state_0_we1);
    grp_KeccakF1600_StatePer_fu_331->state_0_d1(grp_KeccakF1600_StatePer_fu_331_state_0_d1);
    grp_KeccakF1600_StatePer_fu_331->state_0_q1(state_0_s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln31_1_fu_406_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_2_fu_416_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_3_fu_426_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_4_fu_436_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_5_fu_446_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_6_fu_456_p2);
    sensitive << ( zext_ln417_reg_774 );

    SC_METHOD(thread_add_ln31_fu_395_p2);
    sensitive << ( zext_ln417_fu_380_p1 );

    SC_METHOD(thread_add_ln416_fu_366_p2);
    sensitive << ( i_3_i_i_reg_308 );

    SC_METHOD(thread_add_ln417_fu_384_p2);
    sensitive << ( zext_ln417_fu_380_p1 );

    SC_METHOD(thread_add_ln540_fu_512_p2);
    sensitive << ( i_3_i_reg_319 );

    SC_METHOD(thread_add_ln541_fu_535_p2);
    sensitive << ( zext_ln541_fu_531_p1 );

    SC_METHOD(thread_add_ln542_fu_567_p2);
    sensitive << ( zext_ln542_fu_563_p1 );

    SC_METHOD(thread_add_ln543_fu_647_p2);
    sensitive << ( zext_ln543_fu_643_p1 );

    SC_METHOD(thread_add_ln544_fu_667_p2);
    sensitive << ( zext_ln544_fu_663_p1 );

    SC_METHOD(thread_add_ln545_fu_687_p2);
    sensitive << ( zext_ln545_fu_683_p1 );

    SC_METHOD(thread_add_ln546_fu_707_p2);
    sensitive << ( zext_ln546_fu_703_p1 );

    SC_METHOD(thread_add_ln547_fu_727_p2);
    sensitive << ( zext_ln547_fu_723_p1 );

    SC_METHOD(thread_add_ln548_fu_747_p2);
    sensitive << ( zext_ln548_fu_743_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln540_fu_506_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln540_fu_506_p2 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_331_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_ap_start_reg );

    SC_METHOD(thread_i_fu_344_p2);
    sensitive << ( i_0_i_i_reg_297 );

    SC_METHOD(thread_icmp_ln362_fu_338_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_i_reg_297 );

    SC_METHOD(thread_icmp_ln416_fu_360_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_3_i_i_reg_308 );

    SC_METHOD(thread_icmp_ln540_fu_506_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_3_i_reg_319 );

    SC_METHOD(thread_or_ln542_fu_557_p2);
    sensitive << ( shl_ln1_fu_523_p3 );

    SC_METHOD(thread_or_ln543_fu_638_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_or_ln544_fu_658_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_or_ln545_fu_678_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_or_ln546_fu_698_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_or_ln547_fu_718_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_or_ln548_fu_738_p2);
    sensitive << ( shl_ln1_reg_885 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln417_1_fu_390_p1 );
    sensitive << ( zext_ln31_1_fu_411_p1 );
    sensitive << ( zext_ln31_3_fu_431_p1 );
    sensitive << ( zext_ln31_5_fu_451_p1 );
    sensitive << ( zext_ln541_1_fu_541_p1 );
    sensitive << ( zext_ln543_1_fu_653_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln545_1_fu_693_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln547_1_fu_733_p1 );

    SC_METHOD(thread_out_r_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln31_fu_401_p1 );
    sensitive << ( zext_ln31_2_fu_421_p1 );
    sensitive << ( zext_ln31_4_fu_441_p1 );
    sensitive << ( zext_ln31_6_fu_461_p1 );
    sensitive << ( zext_ln542_1_fu_573_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln544_1_fu_673_p1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln546_1_fu_713_p1 );
    sensitive << ( zext_ln548_1_fu_753_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln1_reg_895 );
    sensitive << ( trunc_ln3_reg_905 );
    sensitive << ( trunc_ln5_reg_915 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( trunc_ln541_fu_518_p1 );

    SC_METHOD(thread_out_r_d1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln2_reg_900 );
    sensitive << ( trunc_ln4_reg_910 );
    sensitive << ( trunc_ln6_reg_920 );
    sensitive << ( state_0_s_q1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_r_we1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_r_7_i_fu_466_p9);
    sensitive << ( out_r_q0 );
    sensitive << ( out_r_q1 );
    sensitive << ( in_load_reg_812 );
    sensitive << ( in_load_1_reg_817 );
    sensitive << ( in_load_2_reg_832 );
    sensitive << ( in_load_3_reg_837 );
    sensitive << ( in_load_4_reg_852 );
    sensitive << ( in_load_5_reg_857 );

    SC_METHOD(thread_shl_ln1_fu_523_p3);
    sensitive << ( i_3_i_reg_319 );

    SC_METHOD(thread_shl_ln_fu_372_p3);
    sensitive << ( i_3_i_i_reg_308 );

    SC_METHOD(thread_state_0_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_0_s_addr_3_reg_794 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln363_fu_350_p1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_0_s_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_0_s_addr_3_reg_794 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_address1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln540_fu_501_p1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_0_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_0_s_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_ce1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_0_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( xor_ln417_fu_480_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( xor_ln451_fu_494_p2 );

    SC_METHOD(thread_state_0_s_d1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_d1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( xor_ln450_fu_487_p2 );

    SC_METHOD(thread_state_0_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_we0 );
    sensitive << ( icmp_ln362_fu_338_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_0_s_we1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_state_0_we1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_trunc_ln541_fu_518_p1);
    sensitive << ( state_0_s_q1 );

    SC_METHOD(thread_xor_ln417_fu_480_p2);
    sensitive << ( state_0_s_q1 );
    sensitive << ( r_7_i_fu_466_p9 );

    SC_METHOD(thread_xor_ln450_fu_487_p2);
    sensitive << ( state_0_s_q0 );

    SC_METHOD(thread_xor_ln451_fu_494_p2);
    sensitive << ( state_0_s_q1 );

    SC_METHOD(thread_zext_ln31_1_fu_411_p1);
    sensitive << ( add_ln31_1_fu_406_p2 );

    SC_METHOD(thread_zext_ln31_2_fu_421_p1);
    sensitive << ( add_ln31_2_fu_416_p2 );

    SC_METHOD(thread_zext_ln31_3_fu_431_p1);
    sensitive << ( add_ln31_3_fu_426_p2 );

    SC_METHOD(thread_zext_ln31_4_fu_441_p1);
    sensitive << ( add_ln31_4_fu_436_p2 );

    SC_METHOD(thread_zext_ln31_5_fu_451_p1);
    sensitive << ( add_ln31_5_fu_446_p2 );

    SC_METHOD(thread_zext_ln31_6_fu_461_p1);
    sensitive << ( add_ln31_6_fu_456_p2 );

    SC_METHOD(thread_zext_ln31_fu_401_p1);
    sensitive << ( add_ln31_fu_395_p2 );

    SC_METHOD(thread_zext_ln363_fu_350_p1);
    sensitive << ( i_0_i_i_reg_297 );

    SC_METHOD(thread_zext_ln416_fu_355_p1);
    sensitive << ( i_3_i_i_reg_308 );

    SC_METHOD(thread_zext_ln417_1_fu_390_p1);
    sensitive << ( add_ln417_fu_384_p2 );

    SC_METHOD(thread_zext_ln417_fu_380_p1);
    sensitive << ( shl_ln_fu_372_p3 );

    SC_METHOD(thread_zext_ln540_fu_501_p1);
    sensitive << ( i_3_i_reg_319 );

    SC_METHOD(thread_zext_ln541_1_fu_541_p1);
    sensitive << ( add_ln541_fu_535_p2 );

    SC_METHOD(thread_zext_ln541_fu_531_p1);
    sensitive << ( shl_ln1_fu_523_p3 );

    SC_METHOD(thread_zext_ln542_1_fu_573_p1);
    sensitive << ( add_ln542_fu_567_p2 );

    SC_METHOD(thread_zext_ln542_fu_563_p1);
    sensitive << ( or_ln542_fu_557_p2 );

    SC_METHOD(thread_zext_ln543_1_fu_653_p1);
    sensitive << ( add_ln543_fu_647_p2 );

    SC_METHOD(thread_zext_ln543_fu_643_p1);
    sensitive << ( or_ln543_fu_638_p2 );

    SC_METHOD(thread_zext_ln544_1_fu_673_p1);
    sensitive << ( add_ln544_fu_667_p2 );

    SC_METHOD(thread_zext_ln544_fu_663_p1);
    sensitive << ( or_ln544_fu_658_p2 );

    SC_METHOD(thread_zext_ln545_1_fu_693_p1);
    sensitive << ( add_ln545_fu_687_p2 );

    SC_METHOD(thread_zext_ln545_fu_683_p1);
    sensitive << ( or_ln545_fu_678_p2 );

    SC_METHOD(thread_zext_ln546_1_fu_713_p1);
    sensitive << ( add_ln546_fu_707_p2 );

    SC_METHOD(thread_zext_ln546_fu_703_p1);
    sensitive << ( or_ln546_fu_698_p2 );

    SC_METHOD(thread_zext_ln547_1_fu_733_p1);
    sensitive << ( add_ln547_fu_727_p2 );

    SC_METHOD(thread_zext_ln547_fu_723_p1);
    sensitive << ( or_ln547_fu_718_p2 );

    SC_METHOD(thread_zext_ln548_1_fu_753_p1);
    sensitive << ( add_ln548_fu_747_p2 );

    SC_METHOD(thread_zext_ln548_fu_743_p1);
    sensitive << ( or_ln548_fu_738_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln416_fu_360_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln540_fu_506_p2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_331_ap_done );
    sensitive << ( icmp_ln362_fu_338_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    ap_CS_fsm = "000000000000001";
    grp_KeccakF1600_StatePer_fu_331_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "shake256_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_q0, "(port)out_r_q0");
    sc_trace(mVcdFile, out_r_address1, "(port)out_r_address1");
    sc_trace(mVcdFile, out_r_ce1, "(port)out_r_ce1");
    sc_trace(mVcdFile, out_r_we1, "(port)out_r_we1");
    sc_trace(mVcdFile, out_r_d1, "(port)out_r_d1");
    sc_trace(mVcdFile, out_r_q1, "(port)out_r_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_344_p2, "i_fu_344_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln416_fu_366_p2, "add_ln416_fu_366_p2");
    sc_trace(mVcdFile, add_ln416_reg_769, "add_ln416_reg_769");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln417_fu_380_p1, "zext_ln417_fu_380_p1");
    sc_trace(mVcdFile, zext_ln417_reg_774, "zext_ln417_reg_774");
    sc_trace(mVcdFile, icmp_ln416_fu_360_p2, "icmp_ln416_fu_360_p2");
    sc_trace(mVcdFile, state_0_s_addr_3_reg_794, "state_0_s_addr_3_reg_794");
    sc_trace(mVcdFile, in_load_reg_812, "in_load_reg_812");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, in_load_1_reg_817, "in_load_1_reg_817");
    sc_trace(mVcdFile, in_load_2_reg_832, "in_load_2_reg_832");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in_load_3_reg_837, "in_load_3_reg_837");
    sc_trace(mVcdFile, in_load_4_reg_852, "in_load_4_reg_852");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, in_load_5_reg_857, "in_load_5_reg_857");
    sc_trace(mVcdFile, add_ln540_fu_512_p2, "add_ln540_fu_512_p2");
    sc_trace(mVcdFile, add_ln540_reg_875, "add_ln540_reg_875");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln540_fu_506_p2, "icmp_ln540_fu_506_p2");
    sc_trace(mVcdFile, shl_ln1_fu_523_p3, "shl_ln1_fu_523_p3");
    sc_trace(mVcdFile, shl_ln1_reg_885, "shl_ln1_reg_885");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, trunc_ln1_reg_895, "trunc_ln1_reg_895");
    sc_trace(mVcdFile, trunc_ln2_reg_900, "trunc_ln2_reg_900");
    sc_trace(mVcdFile, trunc_ln3_reg_905, "trunc_ln3_reg_905");
    sc_trace(mVcdFile, trunc_ln4_reg_910, "trunc_ln4_reg_910");
    sc_trace(mVcdFile, trunc_ln5_reg_915, "trunc_ln5_reg_915");
    sc_trace(mVcdFile, trunc_ln6_reg_920, "trunc_ln6_reg_920");
    sc_trace(mVcdFile, state_0_s_address0, "state_0_s_address0");
    sc_trace(mVcdFile, state_0_s_ce0, "state_0_s_ce0");
    sc_trace(mVcdFile, state_0_s_we0, "state_0_s_we0");
    sc_trace(mVcdFile, state_0_s_d0, "state_0_s_d0");
    sc_trace(mVcdFile, state_0_s_q0, "state_0_s_q0");
    sc_trace(mVcdFile, state_0_s_address1, "state_0_s_address1");
    sc_trace(mVcdFile, state_0_s_ce1, "state_0_s_ce1");
    sc_trace(mVcdFile, state_0_s_we1, "state_0_s_we1");
    sc_trace(mVcdFile, state_0_s_d1, "state_0_s_d1");
    sc_trace(mVcdFile, state_0_s_q1, "state_0_s_q1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_ap_start, "grp_KeccakF1600_StatePer_fu_331_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_ap_done, "grp_KeccakF1600_StatePer_fu_331_ap_done");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_ap_idle, "grp_KeccakF1600_StatePer_fu_331_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_ap_ready, "grp_KeccakF1600_StatePer_fu_331_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_address0, "grp_KeccakF1600_StatePer_fu_331_state_0_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_ce0, "grp_KeccakF1600_StatePer_fu_331_state_0_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_we0, "grp_KeccakF1600_StatePer_fu_331_state_0_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_d0, "grp_KeccakF1600_StatePer_fu_331_state_0_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_address1, "grp_KeccakF1600_StatePer_fu_331_state_0_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_ce1, "grp_KeccakF1600_StatePer_fu_331_state_0_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_we1, "grp_KeccakF1600_StatePer_fu_331_state_0_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_state_0_d1, "grp_KeccakF1600_StatePer_fu_331_state_0_d1");
    sc_trace(mVcdFile, i_0_i_i_reg_297, "i_0_i_i_reg_297");
    sc_trace(mVcdFile, icmp_ln362_fu_338_p2, "icmp_ln362_fu_338_p2");
    sc_trace(mVcdFile, i_3_i_i_reg_308, "i_3_i_i_reg_308");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_3_i_reg_319, "i_3_i_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_331_ap_start_reg, "grp_KeccakF1600_StatePer_fu_331_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln363_fu_350_p1, "zext_ln363_fu_350_p1");
    sc_trace(mVcdFile, zext_ln417_1_fu_390_p1, "zext_ln417_1_fu_390_p1");
    sc_trace(mVcdFile, zext_ln31_fu_401_p1, "zext_ln31_fu_401_p1");
    sc_trace(mVcdFile, zext_ln416_fu_355_p1, "zext_ln416_fu_355_p1");
    sc_trace(mVcdFile, zext_ln31_1_fu_411_p1, "zext_ln31_1_fu_411_p1");
    sc_trace(mVcdFile, zext_ln31_2_fu_421_p1, "zext_ln31_2_fu_421_p1");
    sc_trace(mVcdFile, zext_ln31_3_fu_431_p1, "zext_ln31_3_fu_431_p1");
    sc_trace(mVcdFile, zext_ln31_4_fu_441_p1, "zext_ln31_4_fu_441_p1");
    sc_trace(mVcdFile, zext_ln31_5_fu_451_p1, "zext_ln31_5_fu_451_p1");
    sc_trace(mVcdFile, zext_ln31_6_fu_461_p1, "zext_ln31_6_fu_461_p1");
    sc_trace(mVcdFile, zext_ln540_fu_501_p1, "zext_ln540_fu_501_p1");
    sc_trace(mVcdFile, zext_ln541_1_fu_541_p1, "zext_ln541_1_fu_541_p1");
    sc_trace(mVcdFile, zext_ln542_1_fu_573_p1, "zext_ln542_1_fu_573_p1");
    sc_trace(mVcdFile, zext_ln543_1_fu_653_p1, "zext_ln543_1_fu_653_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, zext_ln544_1_fu_673_p1, "zext_ln544_1_fu_673_p1");
    sc_trace(mVcdFile, zext_ln545_1_fu_693_p1, "zext_ln545_1_fu_693_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, zext_ln546_1_fu_713_p1, "zext_ln546_1_fu_713_p1");
    sc_trace(mVcdFile, zext_ln547_1_fu_733_p1, "zext_ln547_1_fu_733_p1");
    sc_trace(mVcdFile, zext_ln548_1_fu_753_p1, "zext_ln548_1_fu_753_p1");
    sc_trace(mVcdFile, xor_ln417_fu_480_p2, "xor_ln417_fu_480_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, xor_ln450_fu_487_p2, "xor_ln450_fu_487_p2");
    sc_trace(mVcdFile, xor_ln451_fu_494_p2, "xor_ln451_fu_494_p2");
    sc_trace(mVcdFile, trunc_ln541_fu_518_p1, "trunc_ln541_fu_518_p1");
    sc_trace(mVcdFile, shl_ln_fu_372_p3, "shl_ln_fu_372_p3");
    sc_trace(mVcdFile, add_ln417_fu_384_p2, "add_ln417_fu_384_p2");
    sc_trace(mVcdFile, add_ln31_fu_395_p2, "add_ln31_fu_395_p2");
    sc_trace(mVcdFile, add_ln31_1_fu_406_p2, "add_ln31_1_fu_406_p2");
    sc_trace(mVcdFile, add_ln31_2_fu_416_p2, "add_ln31_2_fu_416_p2");
    sc_trace(mVcdFile, add_ln31_3_fu_426_p2, "add_ln31_3_fu_426_p2");
    sc_trace(mVcdFile, add_ln31_4_fu_436_p2, "add_ln31_4_fu_436_p2");
    sc_trace(mVcdFile, add_ln31_5_fu_446_p2, "add_ln31_5_fu_446_p2");
    sc_trace(mVcdFile, add_ln31_6_fu_456_p2, "add_ln31_6_fu_456_p2");
    sc_trace(mVcdFile, r_7_i_fu_466_p9, "r_7_i_fu_466_p9");
    sc_trace(mVcdFile, zext_ln541_fu_531_p1, "zext_ln541_fu_531_p1");
    sc_trace(mVcdFile, add_ln541_fu_535_p2, "add_ln541_fu_535_p2");
    sc_trace(mVcdFile, or_ln542_fu_557_p2, "or_ln542_fu_557_p2");
    sc_trace(mVcdFile, zext_ln542_fu_563_p1, "zext_ln542_fu_563_p1");
    sc_trace(mVcdFile, add_ln542_fu_567_p2, "add_ln542_fu_567_p2");
    sc_trace(mVcdFile, or_ln543_fu_638_p2, "or_ln543_fu_638_p2");
    sc_trace(mVcdFile, zext_ln543_fu_643_p1, "zext_ln543_fu_643_p1");
    sc_trace(mVcdFile, add_ln543_fu_647_p2, "add_ln543_fu_647_p2");
    sc_trace(mVcdFile, or_ln544_fu_658_p2, "or_ln544_fu_658_p2");
    sc_trace(mVcdFile, zext_ln544_fu_663_p1, "zext_ln544_fu_663_p1");
    sc_trace(mVcdFile, add_ln544_fu_667_p2, "add_ln544_fu_667_p2");
    sc_trace(mVcdFile, or_ln545_fu_678_p2, "or_ln545_fu_678_p2");
    sc_trace(mVcdFile, zext_ln545_fu_683_p1, "zext_ln545_fu_683_p1");
    sc_trace(mVcdFile, add_ln545_fu_687_p2, "add_ln545_fu_687_p2");
    sc_trace(mVcdFile, or_ln546_fu_698_p2, "or_ln546_fu_698_p2");
    sc_trace(mVcdFile, zext_ln546_fu_703_p1, "zext_ln546_fu_703_p1");
    sc_trace(mVcdFile, add_ln546_fu_707_p2, "add_ln546_fu_707_p2");
    sc_trace(mVcdFile, or_ln547_fu_718_p2, "or_ln547_fu_718_p2");
    sc_trace(mVcdFile, zext_ln547_fu_723_p1, "zext_ln547_fu_723_p1");
    sc_trace(mVcdFile, add_ln547_fu_727_p2, "add_ln547_fu_727_p2");
    sc_trace(mVcdFile, or_ln548_fu_738_p2, "or_ln548_fu_738_p2");
    sc_trace(mVcdFile, zext_ln548_fu_743_p1, "zext_ln548_fu_743_p1");
    sc_trace(mVcdFile, add_ln548_fu_747_p2, "add_ln548_fu_747_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

shake256::~shake256() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete state_0_s_U;
    delete grp_KeccakF1600_StatePer_fu_331;
}

void shake256::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_331_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_KeccakF1600_StatePer_fu_331_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_331_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_331_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln362_fu_338_p2.read()))) {
        i_0_i_i_reg_297 = i_fu_344_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_i_reg_297 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln362_fu_338_p2.read()))) {
        i_3_i_i_reg_308 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_3_i_i_reg_308 = add_ln416_reg_769.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_3_i_reg_319 = add_ln540_reg_875.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_331_ap_done.read(), ap_const_logic_1))) {
        i_3_i_reg_319 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln416_reg_769 = add_ln416_fu_366_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        add_ln540_reg_875 = add_ln540_fu_512_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_load_1_reg_817 = out_r_q1.read();
        in_load_reg_812 = out_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_load_2_reg_832 = out_r_q0.read();
        in_load_3_reg_837 = out_r_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_load_4_reg_852 = out_r_q0.read();
        in_load_5_reg_857 = out_r_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        shl_ln1_reg_885 = shl_ln1_fu_523_p3.read();
        trunc_ln1_reg_895 = state_0_s_q1.read().range(23, 16);
        trunc_ln2_reg_900 = state_0_s_q1.read().range(31, 24);
        trunc_ln3_reg_905 = state_0_s_q1.read().range(39, 32);
        trunc_ln4_reg_910 = state_0_s_q1.read().range(47, 40);
        trunc_ln5_reg_915 = state_0_s_q1.read().range(55, 48);
        trunc_ln6_reg_920 = state_0_s_q1.read().range(63, 56);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln416_fu_360_p2.read(), ap_const_lv1_0))) {
        state_0_s_addr_3_reg_794 =  (sc_lv<5>) (zext_ln416_fu_355_p1.read());
        zext_ln417_reg_774 = zext_ln417_fu_380_p1.read();
    }
}

void shake256::thread_add_ln31_1_fu_406_p2() {
    add_ln31_1_fu_406_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_52.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_52));
}

void shake256::thread_add_ln31_2_fu_416_p2() {
    add_ln31_2_fu_416_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_53.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_53));
}

void shake256::thread_add_ln31_3_fu_426_p2() {
    add_ln31_3_fu_426_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_54.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_54));
}

void shake256::thread_add_ln31_4_fu_436_p2() {
    add_ln31_4_fu_436_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_55.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_55));
}

void shake256::thread_add_ln31_5_fu_446_p2() {
    add_ln31_5_fu_446_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_56.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_56));
}

void shake256::thread_add_ln31_6_fu_456_p2() {
    add_ln31_6_fu_456_p2 = (!zext_ln417_reg_774.read().is_01() || !ap_const_lv8_57.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_reg_774.read()) + sc_biguint<8>(ap_const_lv8_57));
}

void shake256::thread_add_ln31_fu_395_p2() {
    add_ln31_fu_395_p2 = (!zext_ln417_fu_380_p1.read().is_01() || !ap_const_lv8_51.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_fu_380_p1.read()) + sc_biguint<8>(ap_const_lv8_51));
}

void shake256::thread_add_ln416_fu_366_p2() {
    add_ln416_fu_366_p2 = (!i_3_i_i_reg_308.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_3_i_i_reg_308.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void shake256::thread_add_ln417_fu_384_p2() {
    add_ln417_fu_384_p2 = (!zext_ln417_fu_380_p1.read().is_01() || !ap_const_lv8_50.is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln417_fu_380_p1.read()) + sc_biguint<8>(ap_const_lv8_50));
}

void shake256::thread_add_ln540_fu_512_p2() {
    add_ln540_fu_512_p2 = (!i_3_i_reg_319.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_i_reg_319.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void shake256::thread_add_ln541_fu_535_p2() {
    add_ln541_fu_535_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln541_fu_531_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln541_fu_531_p1.read()));
}

void shake256::thread_add_ln542_fu_567_p2() {
    add_ln542_fu_567_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln542_fu_563_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln542_fu_563_p1.read()));
}

void shake256::thread_add_ln543_fu_647_p2() {
    add_ln543_fu_647_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln543_fu_643_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln543_fu_643_p1.read()));
}

void shake256::thread_add_ln544_fu_667_p2() {
    add_ln544_fu_667_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln544_fu_663_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln544_fu_663_p1.read()));
}

void shake256::thread_add_ln545_fu_687_p2() {
    add_ln545_fu_687_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln545_fu_683_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln545_fu_683_p1.read()));
}

void shake256::thread_add_ln546_fu_707_p2() {
    add_ln546_fu_707_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln546_fu_703_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln546_fu_703_p1.read()));
}

void shake256::thread_add_ln547_fu_727_p2() {
    add_ln547_fu_727_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln547_fu_723_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln547_fu_723_p1.read()));
}

void shake256::thread_add_ln548_fu_747_p2() {
    add_ln548_fu_747_p2 = (!ap_const_lv8_A0.is_01() || !zext_ln548_fu_743_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_A0) + sc_biguint<8>(zext_ln548_fu_743_p1.read()));
}

void shake256::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void shake256::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void shake256::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void shake256::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void shake256::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void shake256::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void shake256::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void shake256::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void shake256::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void shake256::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void shake256::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void shake256::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void shake256::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void shake256::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void shake256::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void shake256::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln540_fu_506_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void shake256::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void shake256::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln540_fu_506_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void shake256::thread_grp_KeccakF1600_StatePer_fu_331_ap_start() {
    grp_KeccakF1600_StatePer_fu_331_ap_start = grp_KeccakF1600_StatePer_fu_331_ap_start_reg.read();
}

void shake256::thread_i_fu_344_p2() {
    i_fu_344_p2 = (!i_0_i_i_reg_297.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_i_reg_297.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void shake256::thread_icmp_ln362_fu_338_p2() {
    icmp_ln362_fu_338_p2 = (!i_0_i_i_reg_297.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_reg_297.read() == ap_const_lv5_19);
}

void shake256::thread_icmp_ln416_fu_360_p2() {
    icmp_ln416_fu_360_p2 = (!i_3_i_i_reg_308.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_3_i_i_reg_308.read() == ap_const_lv4_A);
}

void shake256::thread_icmp_ln540_fu_506_p2() {
    icmp_ln540_fu_506_p2 = (!i_3_i_reg_319.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_3_i_reg_319.read() == ap_const_lv3_6);
}

void shake256::thread_or_ln542_fu_557_p2() {
    or_ln542_fu_557_p2 = (shl_ln1_fu_523_p3.read() | ap_const_lv6_1);
}

void shake256::thread_or_ln543_fu_638_p2() {
    or_ln543_fu_638_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_2);
}

void shake256::thread_or_ln544_fu_658_p2() {
    or_ln544_fu_658_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_3);
}

void shake256::thread_or_ln545_fu_678_p2() {
    or_ln545_fu_678_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_4);
}

void shake256::thread_or_ln546_fu_698_p2() {
    or_ln546_fu_698_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_5);
}

void shake256::thread_or_ln547_fu_718_p2() {
    or_ln547_fu_718_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_6);
}

void shake256::thread_or_ln548_fu_738_p2() {
    or_ln548_fu_738_p2 = (shl_ln1_reg_885.read() | ap_const_lv6_7);
}

void shake256::thread_out_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln547_1_fu_733_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln545_1_fu_693_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln543_1_fu_653_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln541_1_fu_541_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln31_5_fu_451_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln31_3_fu_431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln31_1_fu_411_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_r_address0 =  (sc_lv<8>) (zext_ln417_1_fu_390_p1.read());
    } else {
        out_r_address0 = "XXXXXXXX";
    }
}

void shake256::thread_out_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln548_1_fu_753_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln546_1_fu_713_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln544_1_fu_673_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln542_1_fu_573_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln31_6_fu_461_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln31_4_fu_441_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln31_2_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_r_address1 =  (sc_lv<8>) (zext_ln31_fu_401_p1.read());
    } else {
        out_r_address1 = "XXXXXXXX";
    }
}

void shake256::thread_out_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void shake256::thread_out_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_ce1 = ap_const_logic_1;
    } else {
        out_r_ce1 = ap_const_logic_0;
    }
}

void shake256::thread_out_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_r_d0 = trunc_ln5_reg_915.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_d0 = trunc_ln3_reg_905.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_d0 = trunc_ln1_reg_895.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_d0 = trunc_ln541_fu_518_p1.read();
    } else {
        out_r_d0 = "XXXXXXXX";
    }
}

void shake256::thread_out_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_r_d1 = trunc_ln6_reg_920.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_r_d1 = trunc_ln4_reg_910.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_r_d1 = trunc_ln2_reg_900.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_r_d1 = state_0_s_q1.read().range(15, 8);
    } else {
        out_r_d1 = "XXXXXXXX";
    }
}

void shake256::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void shake256::thread_out_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        out_r_we1 = ap_const_logic_1;
    } else {
        out_r_we1 = ap_const_logic_0;
    }
}

void shake256::thread_r_7_i_fu_466_p9() {
    r_7_i_fu_466_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(out_r_q1.read(), out_r_q0.read()), in_load_5_reg_857.read()), in_load_4_reg_852.read()), in_load_3_reg_837.read()), in_load_2_reg_832.read()), in_load_1_reg_817.read()), in_load_reg_812.read());
}

void shake256::thread_shl_ln1_fu_523_p3() {
    shl_ln1_fu_523_p3 = esl_concat<3,3>(i_3_i_reg_319.read(), ap_const_lv3_0);
}

void shake256::thread_shl_ln_fu_372_p3() {
    shl_ln_fu_372_p3 = esl_concat<4,3>(i_3_i_i_reg_308.read(), ap_const_lv3_0);
}

void shake256::thread_state_0_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_0_s_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_0_s_address0 = state_0_s_addr_3_reg_794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_0_s_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_0_s_address0 =  (sc_lv<5>) (zext_ln363_fu_350_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_address0 = grp_KeccakF1600_StatePer_fu_331_state_0_address0.read();
    } else {
        state_0_s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void shake256::thread_state_0_s_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_0_s_address1 =  (sc_lv<5>) (zext_ln540_fu_501_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_0_s_address1 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        state_0_s_address1 = state_0_s_addr_3_reg_794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_0_s_address1 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_address1 = grp_KeccakF1600_StatePer_fu_331_state_0_address1.read();
    } else {
        state_0_s_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void shake256::thread_state_0_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        state_0_s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_ce0 = grp_KeccakF1600_StatePer_fu_331_state_0_ce0.read();
    } else {
        state_0_s_ce0 = ap_const_logic_0;
    }
}

void shake256::thread_state_0_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        state_0_s_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_ce1 = grp_KeccakF1600_StatePer_fu_331_state_0_ce1.read();
    } else {
        state_0_s_ce1 = ap_const_logic_0;
    }
}

void shake256::thread_state_0_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_0_s_d0 = xor_ln451_fu_494_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_0_s_d0 = xor_ln417_fu_480_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        state_0_s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_d0 = grp_KeccakF1600_StatePer_fu_331_state_0_d0.read();
    } else {
        state_0_s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void shake256::thread_state_0_s_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_0_s_d1 = xor_ln450_fu_487_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_d1 = grp_KeccakF1600_StatePer_fu_331_state_0_d1.read();
    } else {
        state_0_s_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void shake256::thread_state_0_s_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln362_fu_338_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        state_0_s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_we0 = grp_KeccakF1600_StatePer_fu_331_state_0_we0.read();
    } else {
        state_0_s_we0 = ap_const_logic_0;
    }
}

void shake256::thread_state_0_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_0_s_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_0_s_we1 = grp_KeccakF1600_StatePer_fu_331_state_0_we1.read();
    } else {
        state_0_s_we1 = ap_const_logic_0;
    }
}

void shake256::thread_trunc_ln541_fu_518_p1() {
    trunc_ln541_fu_518_p1 = state_0_s_q1.read().range(8-1, 0);
}

void shake256::thread_xor_ln417_fu_480_p2() {
    xor_ln417_fu_480_p2 = (state_0_s_q1.read() ^ r_7_i_fu_466_p9.read());
}

void shake256::thread_xor_ln450_fu_487_p2() {
    xor_ln450_fu_487_p2 = (state_0_s_q0.read() ^ ap_const_lv64_1F);
}

void shake256::thread_xor_ln451_fu_494_p2() {
    xor_ln451_fu_494_p2 = (state_0_s_q1.read() ^ ap_const_lv64_8000000000000000);
}

void shake256::thread_zext_ln31_1_fu_411_p1() {
    zext_ln31_1_fu_411_p1 = esl_zext<64,8>(add_ln31_1_fu_406_p2.read());
}

void shake256::thread_zext_ln31_2_fu_421_p1() {
    zext_ln31_2_fu_421_p1 = esl_zext<64,8>(add_ln31_2_fu_416_p2.read());
}

void shake256::thread_zext_ln31_3_fu_431_p1() {
    zext_ln31_3_fu_431_p1 = esl_zext<64,8>(add_ln31_3_fu_426_p2.read());
}

void shake256::thread_zext_ln31_4_fu_441_p1() {
    zext_ln31_4_fu_441_p1 = esl_zext<64,8>(add_ln31_4_fu_436_p2.read());
}

void shake256::thread_zext_ln31_5_fu_451_p1() {
    zext_ln31_5_fu_451_p1 = esl_zext<64,8>(add_ln31_5_fu_446_p2.read());
}

void shake256::thread_zext_ln31_6_fu_461_p1() {
    zext_ln31_6_fu_461_p1 = esl_zext<64,8>(add_ln31_6_fu_456_p2.read());
}

void shake256::thread_zext_ln31_fu_401_p1() {
    zext_ln31_fu_401_p1 = esl_zext<64,8>(add_ln31_fu_395_p2.read());
}

void shake256::thread_zext_ln363_fu_350_p1() {
    zext_ln363_fu_350_p1 = esl_zext<64,5>(i_0_i_i_reg_297.read());
}

void shake256::thread_zext_ln416_fu_355_p1() {
    zext_ln416_fu_355_p1 = esl_zext<64,4>(i_3_i_i_reg_308.read());
}

void shake256::thread_zext_ln417_1_fu_390_p1() {
    zext_ln417_1_fu_390_p1 = esl_zext<64,8>(add_ln417_fu_384_p2.read());
}

void shake256::thread_zext_ln417_fu_380_p1() {
    zext_ln417_fu_380_p1 = esl_zext<8,7>(shl_ln_fu_372_p3.read());
}

void shake256::thread_zext_ln540_fu_501_p1() {
    zext_ln540_fu_501_p1 = esl_zext<64,3>(i_3_i_reg_319.read());
}

void shake256::thread_zext_ln541_1_fu_541_p1() {
    zext_ln541_1_fu_541_p1 = esl_zext<64,8>(add_ln541_fu_535_p2.read());
}

void shake256::thread_zext_ln541_fu_531_p1() {
    zext_ln541_fu_531_p1 = esl_zext<8,6>(shl_ln1_fu_523_p3.read());
}

void shake256::thread_zext_ln542_1_fu_573_p1() {
    zext_ln542_1_fu_573_p1 = esl_zext<64,8>(add_ln542_fu_567_p2.read());
}

void shake256::thread_zext_ln542_fu_563_p1() {
    zext_ln542_fu_563_p1 = esl_zext<8,6>(or_ln542_fu_557_p2.read());
}

void shake256::thread_zext_ln543_1_fu_653_p1() {
    zext_ln543_1_fu_653_p1 = esl_zext<64,8>(add_ln543_fu_647_p2.read());
}

void shake256::thread_zext_ln543_fu_643_p1() {
    zext_ln543_fu_643_p1 = esl_zext<8,6>(or_ln543_fu_638_p2.read());
}

void shake256::thread_zext_ln544_1_fu_673_p1() {
    zext_ln544_1_fu_673_p1 = esl_zext<64,8>(add_ln544_fu_667_p2.read());
}

void shake256::thread_zext_ln544_fu_663_p1() {
    zext_ln544_fu_663_p1 = esl_zext<8,6>(or_ln544_fu_658_p2.read());
}

void shake256::thread_zext_ln545_1_fu_693_p1() {
    zext_ln545_1_fu_693_p1 = esl_zext<64,8>(add_ln545_fu_687_p2.read());
}

void shake256::thread_zext_ln545_fu_683_p1() {
    zext_ln545_fu_683_p1 = esl_zext<8,6>(or_ln545_fu_678_p2.read());
}

void shake256::thread_zext_ln546_1_fu_713_p1() {
    zext_ln546_1_fu_713_p1 = esl_zext<64,8>(add_ln546_fu_707_p2.read());
}

void shake256::thread_zext_ln546_fu_703_p1() {
    zext_ln546_fu_703_p1 = esl_zext<8,6>(or_ln546_fu_698_p2.read());
}

void shake256::thread_zext_ln547_1_fu_733_p1() {
    zext_ln547_1_fu_733_p1 = esl_zext<64,8>(add_ln547_fu_727_p2.read());
}

void shake256::thread_zext_ln547_fu_723_p1() {
    zext_ln547_fu_723_p1 = esl_zext<8,6>(or_ln547_fu_718_p2.read());
}

void shake256::thread_zext_ln548_1_fu_753_p1() {
    zext_ln548_1_fu_753_p1 = esl_zext<64,8>(add_ln548_fu_747_p2.read());
}

void shake256::thread_zext_ln548_fu_743_p1() {
    zext_ln548_fu_743_p1 = esl_zext<8,6>(or_ln548_fu_738_p2.read());
}

void shake256::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln362_fu_338_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln416_fu_360_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_331_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln540_fu_506_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

