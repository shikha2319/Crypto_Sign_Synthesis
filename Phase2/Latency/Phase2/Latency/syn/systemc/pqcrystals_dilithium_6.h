// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium_6_HH_
#define _pqcrystals_dilithium_6_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pqcrystals_dilithium_21.h"

namespace ap_rtl {

struct pqcrystals_dilithium_6 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_out< sc_logic > v_vec_coeffs_we0;
    sc_out< sc_lv<32> > v_vec_coeffs_d0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;
    sc_out< sc_lv<10> > v_vec_coeffs_address1;
    sc_out< sc_logic > v_vec_coeffs_ce1;
    sc_in< sc_lv<32> > v_vec_coeffs_q1;


    // Module declarations
    pqcrystals_dilithium_6(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium_6);

    ~pqcrystals_dilithium_6();

    sc_trace_file* mVcdFile;

    pqcrystals_dilithium_21* grp_pqcrystals_dilithium_21_fu_28;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_44_p2;
    sc_signal< sc_lv<3> > i_reg_53;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_ap_start;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_ap_done;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_ap_idle;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_ap_ready;
    sc_signal< sc_lv<10> > grp_pqcrystals_dilithium_21_fu_28_a_address0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_a_ce0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_a_we0;
    sc_signal< sc_lv<32> > grp_pqcrystals_dilithium_21_fu_28_a_d0;
    sc_signal< sc_lv<10> > grp_pqcrystals_dilithium_21_fu_28_a_address1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_a_ce1;
    sc_signal< sc_lv<3> > i_0_reg_16;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_21_fu_28_ap_start_reg;
    sc_signal< sc_lv<1> > icmp_ln298_fu_38_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_pqcrystals_dilithium_21_fu_28_ap_start();
    void thread_i_fu_44_p2();
    void thread_icmp_ln298_fu_38_p2();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_address1();
    void thread_v_vec_coeffs_ce0();
    void thread_v_vec_coeffs_ce1();
    void thread_v_vec_coeffs_d0();
    void thread_v_vec_coeffs_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
