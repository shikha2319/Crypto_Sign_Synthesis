// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeccakF1600_StatePer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_0_address0,
        state_0_ce0,
        state_0_we0,
        state_0_d0,
        state_0_q0,
        state_0_address1,
        state_0_ce1,
        state_0_we1,
        state_0_d1,
        state_0_q1
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 28'd16384;
parameter    ap_ST_fsm_state17 = 28'd32768;
parameter    ap_ST_fsm_state18 = 28'd65536;
parameter    ap_ST_fsm_state19 = 28'd131072;
parameter    ap_ST_fsm_state20 = 28'd262144;
parameter    ap_ST_fsm_state21 = 28'd524288;
parameter    ap_ST_fsm_state22 = 28'd1048576;
parameter    ap_ST_fsm_state23 = 28'd2097152;
parameter    ap_ST_fsm_state24 = 28'd4194304;
parameter    ap_ST_fsm_state25 = 28'd8388608;
parameter    ap_ST_fsm_state26 = 28'd16777216;
parameter    ap_ST_fsm_state27 = 28'd33554432;
parameter    ap_ST_fsm_state28 = 28'd67108864;
parameter    ap_ST_fsm_state29 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] state_0_address0;
output   state_0_ce0;
output   state_0_we0;
output  [63:0] state_0_d0;
input  [63:0] state_0_q0;
output  [4:0] state_0_address1;
output   state_0_ce1;
output   state_0_we1;
output  [63:0] state_0_d1;
input  [63:0] state_0_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] state_0_address0;
reg state_0_ce0;
reg state_0_we0;
reg[63:0] state_0_d0;
reg[4:0] state_0_address1;
reg state_0_ce1;
reg state_0_we1;
reg[63:0] state_0_d1;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] KeccakF_RoundConstan_address0;
reg    KeccakF_RoundConstan_ce0;
wire   [63:0] KeccakF_RoundConstan_q0;
wire   [4:0] KeccakF_RoundConstan_address1;
reg    KeccakF_RoundConstan_ce1;
wire   [63:0] KeccakF_RoundConstan_q1;
reg   [63:0] Aso_0_reg_487;
reg   [63:0] Asi_0_reg_498;
reg   [63:0] Ase_0_reg_509;
reg   [63:0] Asa_0_reg_520;
reg   [63:0] Amu_0_reg_531;
reg   [63:0] Amo_0_reg_542;
reg   [63:0] Ami_0_reg_553;
reg   [63:0] Ame_0_reg_564;
reg   [63:0] Ama_0_reg_575;
reg   [63:0] Aku_0_reg_586;
reg   [63:0] Ako_0_reg_597;
reg   [63:0] Aki_0_reg_608;
reg   [63:0] Ake_0_reg_619;
reg   [63:0] Aka_0_reg_630;
reg   [63:0] Agu_0_reg_641;
reg   [63:0] Ago_0_reg_652;
reg   [63:0] Agi_0_reg_663;
reg   [63:0] Age_0_reg_674;
reg   [63:0] Aga_0_reg_685;
reg   [63:0] Abu_0_reg_696;
reg   [63:0] Abo_0_reg_707;
reg   [63:0] Abi_0_reg_718;
reg   [63:0] Abe_0_reg_729;
reg   [63:0] Aba_0_reg_740;
reg   [4:0] round_0_reg_751;
reg   [63:0] Asu_0_reg_762;
reg   [63:0] Aba_reg_3571;
wire    ap_CS_fsm_state2;
wire   [4:0] state_0_addr_reg_3576;
wire   [4:0] state_0_addr_1_reg_3581;
reg   [63:0] Abe_reg_3586;
wire    ap_CS_fsm_state3;
reg   [63:0] Abi_reg_3591;
reg   [63:0] Abo_reg_3608;
wire    ap_CS_fsm_state4;
reg   [63:0] Abu_reg_3613;
reg   [63:0] Aga_reg_3630;
wire    ap_CS_fsm_state5;
reg   [63:0] Age_reg_3635;
reg   [63:0] Agi_reg_3652;
wire    ap_CS_fsm_state6;
reg   [63:0] Ago_reg_3657;
reg   [63:0] Agu_reg_3674;
wire    ap_CS_fsm_state7;
reg   [63:0] Aka_reg_3679;
reg   [63:0] Ake_reg_3696;
wire    ap_CS_fsm_state8;
reg   [63:0] Aki_reg_3701;
reg   [63:0] Ako_reg_3718;
wire    ap_CS_fsm_state9;
reg   [63:0] Aku_reg_3723;
reg   [63:0] Ama_reg_3740;
wire    ap_CS_fsm_state10;
reg   [63:0] Ame_reg_3745;
reg   [63:0] Ami_reg_3762;
wire    ap_CS_fsm_state11;
reg   [63:0] Amo_reg_3767;
reg   [63:0] Amu_reg_3784;
wire    ap_CS_fsm_state12;
reg   [63:0] Asa_reg_3789;
reg   [63:0] Ase_reg_3806;
wire    ap_CS_fsm_state13;
reg   [63:0] Asi_reg_3811;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln131_fu_773_p2;
reg   [0:0] icmp_ln131_reg_3838;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] round_fu_795_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] Aba_5_fu_2569_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] Abe_4_fu_2587_p2;
wire   [63:0] Abi_4_fu_2605_p2;
wire   [63:0] Abo_4_fu_2623_p2;
wire   [63:0] Abu_4_fu_2641_p2;
wire   [63:0] Aga_4_fu_2799_p2;
wire   [63:0] Age_4_fu_2817_p2;
wire   [63:0] Agi_4_fu_2835_p2;
wire   [63:0] Ago_4_fu_2853_p2;
wire   [63:0] Agu_4_fu_2871_p2;
wire   [63:0] Aka_4_fu_3027_p2;
wire   [63:0] Ake_4_fu_3045_p2;
wire   [63:0] Aki_4_fu_3063_p2;
wire   [63:0] Ako_4_fu_3081_p2;
wire   [63:0] Aku_4_fu_3099_p2;
wire   [63:0] Ama_4_fu_3257_p2;
wire   [63:0] Ame_4_fu_3275_p2;
wire   [63:0] Ami_4_fu_3293_p2;
wire   [63:0] Amo_4_fu_3311_p2;
wire   [63:0] Amu_4_fu_3329_p2;
wire   [63:0] Asa_4_fu_3487_p2;
wire   [63:0] Ase_4_fu_3505_p2;
wire   [63:0] Asi_4_fu_3523_p2;
wire   [63:0] Aso_4_fu_3541_p2;
wire   [63:0] Asu_4_fu_3559_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln158_fu_779_p1;
wire   [63:0] zext_ln253_fu_790_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [4:0] or_ln253_fu_784_p2;
wire   [63:0] xor_ln134_1_fu_807_p2;
wire   [63:0] xor_ln134_2_fu_813_p2;
wire   [63:0] xor_ln134_fu_801_p2;
wire   [63:0] xor_ln135_1_fu_831_p2;
wire   [63:0] xor_ln135_2_fu_837_p2;
wire   [63:0] xor_ln135_fu_825_p2;
wire   [63:0] xor_ln136_1_fu_855_p2;
wire   [63:0] xor_ln136_2_fu_861_p2;
wire   [63:0] xor_ln136_fu_849_p2;
wire   [63:0] xor_ln137_1_fu_879_p2;
wire   [63:0] xor_ln137_2_fu_885_p2;
wire   [63:0] xor_ln137_fu_873_p2;
wire   [63:0] xor_ln138_1_fu_903_p2;
wire   [63:0] xor_ln138_2_fu_909_p2;
wire   [63:0] xor_ln138_fu_897_p2;
wire   [63:0] BCe_fu_843_p2;
wire   [62:0] trunc_ln141_fu_921_p1;
wire   [0:0] tmp_271_fu_925_p3;
wire   [63:0] BCu_fu_915_p2;
wire   [63:0] or_ln_fu_933_p3;
wire   [63:0] BCi_fu_867_p2;
wire   [62:0] trunc_ln142_fu_947_p1;
wire   [0:0] tmp_272_fu_951_p3;
wire   [63:0] BCa_fu_819_p2;
wire   [63:0] or_ln2_fu_959_p3;
wire   [63:0] BCo_fu_891_p2;
wire   [62:0] trunc_ln143_fu_973_p1;
wire   [0:0] tmp_273_fu_977_p3;
wire   [63:0] or_ln3_fu_985_p3;
wire   [62:0] trunc_ln144_fu_999_p1;
wire   [0:0] tmp_274_fu_1003_p3;
wire   [63:0] or_ln4_fu_1011_p3;
wire   [62:0] trunc_ln145_fu_1025_p1;
wire   [0:0] tmp_275_fu_1029_p3;
wire   [63:0] or_ln5_fu_1037_p3;
wire   [63:0] Da_fu_941_p2;
wire   [63:0] De_fu_967_p2;
wire   [63:0] Age_3_fu_1057_p2;
wire   [19:0] trunc_ln150_fu_1063_p1;
wire   [43:0] lshr_ln_fu_1067_p4;
wire   [63:0] Di_fu_993_p2;
wire   [63:0] Aki_3_fu_1085_p2;
wire   [20:0] trunc_ln152_fu_1091_p1;
wire   [42:0] lshr_ln46_fu_1095_p4;
wire   [63:0] Do_fu_1019_p2;
wire   [63:0] Amo_3_fu_1113_p2;
wire   [42:0] trunc_ln154_fu_1119_p1;
wire   [20:0] lshr_ln47_fu_1123_p4;
wire   [63:0] Du_fu_1045_p2;
wire   [63:0] Asu_3_fu_1141_p2;
wire   [49:0] trunc_ln156_fu_1147_p1;
wire   [13:0] lshr_ln48_fu_1151_p4;
wire   [63:0] BCe_1_fu_1077_p3;
wire   [63:0] BCi_1_fu_1105_p3;
wire   [63:0] xor_ln157_fu_1169_p2;
wire   [63:0] and_ln157_fu_1175_p2;
wire   [63:0] Aba_6_fu_1051_p2;
wire   [63:0] xor_ln158_fu_1181_p2;
wire   [63:0] BCo_1_fu_1133_p3;
wire   [63:0] xor_ln159_fu_1193_p2;
wire   [63:0] and_ln159_fu_1199_p2;
wire   [63:0] BCu_1_fu_1161_p3;
wire   [63:0] xor_ln160_fu_1211_p2;
wire   [63:0] and_ln160_fu_1217_p2;
wire   [63:0] xor_ln161_fu_1229_p2;
wire   [63:0] and_ln161_fu_1235_p2;
wire   [63:0] xor_ln162_fu_1247_p2;
wire   [63:0] and_ln162_fu_1253_p2;
wire   [63:0] Abo_3_fu_1265_p2;
wire   [35:0] trunc_ln165_fu_1271_p1;
wire   [27:0] lshr_ln49_fu_1275_p4;
wire   [63:0] Agu_3_fu_1293_p2;
wire   [43:0] trunc_ln167_fu_1299_p1;
wire   [19:0] lshr_ln50_fu_1303_p4;
wire   [63:0] Aka_3_fu_1321_p2;
wire   [60:0] trunc_ln169_fu_1327_p1;
wire   [2:0] lshr_ln51_fu_1331_p4;
wire   [63:0] Ame_3_fu_1349_p2;
wire   [18:0] trunc_ln171_fu_1355_p1;
wire   [44:0] lshr_ln52_fu_1359_p4;
wire   [63:0] Asi_3_fu_1377_p2;
wire   [2:0] trunc_ln173_fu_1383_p1;
wire   [60:0] lshr_ln53_fu_1387_p4;
wire   [63:0] BCe_2_fu_1313_p3;
wire   [63:0] BCi_2_fu_1341_p3;
wire   [63:0] xor_ln174_fu_1405_p2;
wire   [63:0] BCa_2_fu_1285_p3;
wire   [63:0] and_ln174_fu_1411_p2;
wire   [63:0] BCo_2_fu_1369_p3;
wire   [63:0] xor_ln175_fu_1423_p2;
wire   [63:0] and_ln175_fu_1429_p2;
wire   [63:0] BCu_2_fu_1397_p3;
wire   [63:0] xor_ln176_fu_1441_p2;
wire   [63:0] and_ln176_fu_1447_p2;
wire   [63:0] xor_ln177_fu_1459_p2;
wire   [63:0] and_ln177_fu_1465_p2;
wire   [63:0] xor_ln178_fu_1477_p2;
wire   [63:0] and_ln178_fu_1483_p2;
wire   [63:0] Abe_3_fu_1495_p2;
wire   [62:0] trunc_ln181_fu_1501_p1;
wire   [0:0] tmp_276_fu_1505_p3;
wire   [63:0] Agi_3_fu_1521_p2;
wire   [57:0] trunc_ln183_fu_1527_p1;
wire   [5:0] lshr_ln54_fu_1531_p4;
wire   [63:0] Ako_3_fu_1549_p2;
wire   [38:0] trunc_ln185_fu_1555_p1;
wire   [24:0] lshr_ln55_fu_1559_p4;
wire   [63:0] Amu_3_fu_1577_p2;
wire   [55:0] trunc_ln187_fu_1583_p1;
wire   [7:0] lshr_ln56_fu_1587_p4;
wire   [63:0] Asa_3_fu_1605_p2;
wire   [45:0] trunc_ln189_fu_1611_p1;
wire   [17:0] lshr_ln57_fu_1615_p4;
wire   [63:0] BCe_3_fu_1541_p3;
wire   [63:0] BCi_3_fu_1569_p3;
wire   [63:0] xor_ln190_fu_1633_p2;
wire   [63:0] and_ln190_fu_1639_p2;
wire   [63:0] BCa_3_fu_1513_p3;
wire   [63:0] BCo_3_fu_1597_p3;
wire   [63:0] xor_ln191_fu_1651_p2;
wire   [63:0] and_ln191_fu_1657_p2;
wire   [63:0] BCu_3_fu_1625_p3;
wire   [63:0] xor_ln192_fu_1669_p2;
wire   [63:0] and_ln192_fu_1675_p2;
wire   [63:0] xor_ln193_fu_1687_p2;
wire   [63:0] and_ln193_fu_1693_p2;
wire   [63:0] xor_ln194_fu_1705_p2;
wire   [63:0] and_ln194_fu_1711_p2;
wire   [63:0] Abu_3_fu_1723_p2;
wire   [36:0] trunc_ln197_fu_1729_p1;
wire   [26:0] lshr_ln58_fu_1733_p4;
wire   [63:0] Aga_3_fu_1751_p2;
wire   [27:0] trunc_ln199_fu_1757_p1;
wire   [35:0] lshr_ln59_fu_1761_p4;
wire   [63:0] Ake_3_fu_1779_p2;
wire   [53:0] trunc_ln201_fu_1785_p1;
wire   [9:0] lshr_ln60_fu_1789_p4;
wire   [63:0] Ami_3_fu_1807_p2;
wire   [48:0] trunc_ln203_fu_1813_p1;
wire   [14:0] lshr_ln61_fu_1817_p4;
wire   [63:0] Aso_3_fu_1835_p2;
wire   [7:0] trunc_ln205_fu_1841_p1;
wire   [55:0] lshr_ln62_fu_1845_p4;
wire   [63:0] BCe_4_fu_1771_p3;
wire   [63:0] BCi_4_fu_1799_p3;
wire   [63:0] xor_ln206_fu_1863_p2;
wire   [63:0] and_ln206_fu_1869_p2;
wire   [63:0] BCa_4_fu_1743_p3;
wire   [63:0] BCo_4_fu_1827_p3;
wire   [63:0] xor_ln207_fu_1881_p2;
wire   [63:0] and_ln207_fu_1887_p2;
wire   [63:0] BCu_4_fu_1855_p3;
wire   [63:0] xor_ln208_fu_1899_p2;
wire   [63:0] and_ln208_fu_1905_p2;
wire   [63:0] xor_ln209_fu_1917_p2;
wire   [63:0] and_ln209_fu_1923_p2;
wire   [63:0] xor_ln210_fu_1935_p2;
wire   [63:0] and_ln210_fu_1941_p2;
wire   [63:0] Abi_3_fu_1953_p2;
wire   [1:0] trunc_ln213_fu_1959_p1;
wire   [61:0] lshr_ln63_fu_1963_p4;
wire   [63:0] Ago_3_fu_1981_p2;
wire   [8:0] trunc_ln215_fu_1987_p1;
wire   [54:0] lshr_ln64_fu_1991_p4;
wire   [63:0] Aku_3_fu_2009_p2;
wire   [24:0] trunc_ln217_fu_2015_p1;
wire   [38:0] lshr_ln65_fu_2019_p4;
wire   [63:0] Ama_3_fu_2037_p2;
wire   [22:0] trunc_ln219_fu_2043_p1;
wire   [40:0] lshr_ln66_fu_2047_p4;
wire   [63:0] Ase_3_fu_2065_p2;
wire   [61:0] trunc_ln221_fu_2071_p1;
wire   [1:0] lshr_ln67_fu_2075_p4;
wire   [63:0] BCe_5_fu_2001_p3;
wire   [63:0] BCi_5_fu_2029_p3;
wire   [63:0] xor_ln222_fu_2093_p2;
wire   [63:0] and_ln222_fu_2099_p2;
wire   [63:0] BCa_5_fu_1973_p3;
wire   [63:0] BCo_5_fu_2057_p3;
wire   [63:0] xor_ln223_fu_2111_p2;
wire   [63:0] and_ln223_fu_2117_p2;
wire   [63:0] BCu_5_fu_2085_p3;
wire   [63:0] xor_ln224_fu_2129_p2;
wire   [63:0] and_ln224_fu_2135_p2;
wire   [63:0] xor_ln225_fu_2147_p2;
wire   [63:0] and_ln225_fu_2153_p2;
wire   [63:0] xor_ln226_fu_2165_p2;
wire   [63:0] and_ln226_fu_2171_p2;
wire   [63:0] Esa_fu_2105_p2;
wire   [63:0] Eka_fu_1645_p2;
wire   [63:0] Ega_fu_1417_p2;
wire   [63:0] Eba_fu_1187_p2;
wire   [63:0] xor_ln229_1_fu_2189_p2;
wire   [63:0] Ema_fu_1875_p2;
wire   [63:0] xor_ln229_2_fu_2195_p2;
wire   [63:0] xor_ln229_fu_2183_p2;
wire   [63:0] Ese_fu_2123_p2;
wire   [63:0] Eke_fu_1663_p2;
wire   [63:0] Ege_fu_1435_p2;
wire   [63:0] Ebe_fu_1205_p2;
wire   [63:0] xor_ln230_1_fu_2213_p2;
wire   [63:0] Eme_fu_1893_p2;
wire   [63:0] xor_ln230_2_fu_2219_p2;
wire   [63:0] xor_ln230_fu_2207_p2;
wire   [63:0] Eki_fu_1681_p2;
wire   [63:0] Emi_fu_1911_p2;
wire   [63:0] Esi_fu_2141_p2;
wire   [63:0] Ebi_fu_1223_p2;
wire   [63:0] xor_ln231_1_fu_2237_p2;
wire   [63:0] Egi_fu_1453_p2;
wire   [63:0] xor_ln231_2_fu_2243_p2;
wire   [63:0] xor_ln231_fu_2231_p2;
wire   [63:0] Ebo_fu_1241_p2;
wire   [63:0] Emo_fu_1929_p2;
wire   [63:0] Eko_fu_1699_p2;
wire   [63:0] Ego_fu_1471_p2;
wire   [63:0] xor_ln232_1_fu_2261_p2;
wire   [63:0] Eso_fu_2159_p2;
wire   [63:0] xor_ln232_2_fu_2267_p2;
wire   [63:0] xor_ln232_fu_2255_p2;
wire   [63:0] Emu_fu_1947_p2;
wire   [63:0] Egu_fu_1489_p2;
wire   [63:0] Ebu_fu_1259_p2;
wire   [63:0] Esu_fu_2177_p2;
wire   [63:0] xor_ln233_1_fu_2285_p2;
wire   [63:0] Eku_fu_1717_p2;
wire   [63:0] xor_ln233_2_fu_2291_p2;
wire   [63:0] xor_ln233_fu_2279_p2;
wire   [63:0] BCe_12_fu_2225_p2;
wire   [62:0] trunc_ln236_fu_2303_p1;
wire   [0:0] tmp_277_fu_2307_p3;
wire   [63:0] or_ln6_fu_2315_p3;
wire   [63:0] BCu_12_fu_2297_p2;
wire   [63:0] BCi_12_fu_2249_p2;
wire   [62:0] trunc_ln237_fu_2329_p1;
wire   [0:0] tmp_278_fu_2333_p3;
wire   [63:0] BCa_13_fu_2201_p2;
wire   [63:0] or_ln7_fu_2341_p3;
wire   [63:0] BCo_12_fu_2273_p2;
wire   [62:0] trunc_ln238_fu_2355_p1;
wire   [0:0] tmp_279_fu_2359_p3;
wire   [63:0] or_ln8_fu_2367_p3;
wire   [62:0] trunc_ln239_fu_2381_p1;
wire   [0:0] tmp_280_fu_2385_p3;
wire   [63:0] or_ln9_fu_2393_p3;
wire   [62:0] trunc_ln240_fu_2407_p1;
wire   [0:0] tmp_281_fu_2411_p3;
wire   [63:0] or_ln10_fu_2419_p3;
wire   [63:0] Da_2_fu_2323_p2;
wire   [63:0] De_2_fu_2349_p2;
wire   [63:0] Ege_2_fu_2439_p2;
wire   [19:0] trunc_ln245_fu_2445_p1;
wire   [43:0] lshr_ln68_fu_2449_p4;
wire   [63:0] Di_2_fu_2375_p2;
wire   [63:0] Eki_2_fu_2467_p2;
wire   [20:0] trunc_ln247_fu_2473_p1;
wire   [42:0] lshr_ln69_fu_2477_p4;
wire   [63:0] Do_2_fu_2401_p2;
wire   [63:0] Emo_2_fu_2495_p2;
wire   [42:0] trunc_ln249_fu_2501_p1;
wire   [20:0] lshr_ln70_fu_2505_p4;
wire   [63:0] Du_2_fu_2427_p2;
wire   [63:0] Esu_2_fu_2523_p2;
wire   [49:0] trunc_ln251_fu_2529_p1;
wire   [13:0] lshr_ln71_fu_2533_p4;
wire   [63:0] BCe_7_fu_2459_p3;
wire   [63:0] BCi_7_fu_2487_p3;
wire   [63:0] xor_ln252_fu_2551_p2;
wire   [63:0] Eba_4_fu_2433_p2;
wire   [63:0] and_ln252_fu_2557_p2;
wire   [63:0] xor_ln253_fu_2563_p2;
wire   [63:0] BCo_7_fu_2515_p3;
wire   [63:0] xor_ln254_fu_2575_p2;
wire   [63:0] and_ln254_fu_2581_p2;
wire   [63:0] BCu_7_fu_2543_p3;
wire   [63:0] xor_ln255_fu_2593_p2;
wire   [63:0] and_ln255_fu_2599_p2;
wire   [63:0] xor_ln256_fu_2611_p2;
wire   [63:0] and_ln256_fu_2617_p2;
wire   [63:0] xor_ln257_fu_2629_p2;
wire   [63:0] and_ln257_fu_2635_p2;
wire   [63:0] Ebo_2_fu_2647_p2;
wire   [35:0] trunc_ln260_fu_2653_p1;
wire   [27:0] lshr_ln72_fu_2657_p4;
wire   [63:0] Egu_2_fu_2675_p2;
wire   [43:0] trunc_ln262_fu_2681_p1;
wire   [19:0] lshr_ln73_fu_2685_p4;
wire   [63:0] Eka_2_fu_2703_p2;
wire   [60:0] trunc_ln264_fu_2709_p1;
wire   [2:0] lshr_ln74_fu_2713_p4;
wire   [63:0] Eme_2_fu_2731_p2;
wire   [18:0] trunc_ln266_fu_2737_p1;
wire   [44:0] lshr_ln75_fu_2741_p4;
wire   [63:0] Esi_2_fu_2759_p2;
wire   [2:0] trunc_ln268_fu_2765_p1;
wire   [60:0] lshr_ln76_fu_2769_p4;
wire   [63:0] BCe_8_fu_2695_p3;
wire   [63:0] BCi_8_fu_2723_p3;
wire   [63:0] xor_ln269_fu_2787_p2;
wire   [63:0] and_ln269_fu_2793_p2;
wire   [63:0] BCa_8_fu_2667_p3;
wire   [63:0] BCo_8_fu_2751_p3;
wire   [63:0] xor_ln270_fu_2805_p2;
wire   [63:0] and_ln270_fu_2811_p2;
wire   [63:0] BCu_8_fu_2779_p3;
wire   [63:0] xor_ln271_fu_2823_p2;
wire   [63:0] and_ln271_fu_2829_p2;
wire   [63:0] xor_ln272_fu_2841_p2;
wire   [63:0] and_ln272_fu_2847_p2;
wire   [63:0] xor_ln273_fu_2859_p2;
wire   [63:0] and_ln273_fu_2865_p2;
wire   [63:0] Ebe_2_fu_2877_p2;
wire   [62:0] trunc_ln276_fu_2883_p1;
wire   [0:0] tmp_282_fu_2887_p3;
wire   [63:0] Egi_2_fu_2903_p2;
wire   [57:0] trunc_ln278_fu_2909_p1;
wire   [5:0] lshr_ln77_fu_2913_p4;
wire   [63:0] Eko_2_fu_2931_p2;
wire   [38:0] trunc_ln280_fu_2937_p1;
wire   [24:0] lshr_ln78_fu_2941_p4;
wire   [63:0] Emu_2_fu_2959_p2;
wire   [55:0] trunc_ln282_fu_2965_p1;
wire   [7:0] lshr_ln79_fu_2969_p4;
wire   [63:0] Esa_2_fu_2987_p2;
wire   [45:0] trunc_ln284_fu_2993_p1;
wire   [17:0] lshr_ln80_fu_2997_p4;
wire   [63:0] BCe_9_fu_2923_p3;
wire   [63:0] BCi_9_fu_2951_p3;
wire   [63:0] xor_ln285_fu_3015_p2;
wire   [63:0] BCa_9_fu_2895_p3;
wire   [63:0] and_ln285_fu_3021_p2;
wire   [63:0] BCo_9_fu_2979_p3;
wire   [63:0] xor_ln286_fu_3033_p2;
wire   [63:0] and_ln286_fu_3039_p2;
wire   [63:0] BCu_9_fu_3007_p3;
wire   [63:0] xor_ln287_fu_3051_p2;
wire   [63:0] and_ln287_fu_3057_p2;
wire   [63:0] xor_ln288_fu_3069_p2;
wire   [63:0] and_ln288_fu_3075_p2;
wire   [63:0] xor_ln289_fu_3087_p2;
wire   [63:0] and_ln289_fu_3093_p2;
wire   [63:0] Ebu_2_fu_3105_p2;
wire   [36:0] trunc_ln292_fu_3111_p1;
wire   [26:0] lshr_ln81_fu_3115_p4;
wire   [63:0] Ega_2_fu_3133_p2;
wire   [27:0] trunc_ln294_fu_3139_p1;
wire   [35:0] lshr_ln82_fu_3143_p4;
wire   [63:0] Eke_2_fu_3161_p2;
wire   [53:0] trunc_ln296_fu_3167_p1;
wire   [9:0] lshr_ln83_fu_3171_p4;
wire   [63:0] Emi_2_fu_3189_p2;
wire   [48:0] trunc_ln298_fu_3195_p1;
wire   [14:0] lshr_ln84_fu_3199_p4;
wire   [63:0] Eso_2_fu_3217_p2;
wire   [7:0] trunc_ln300_fu_3223_p1;
wire   [55:0] lshr_ln85_fu_3227_p4;
wire   [63:0] BCe_13_fu_3153_p3;
wire   [63:0] BCi_13_fu_3181_p3;
wire   [63:0] xor_ln301_fu_3245_p2;
wire   [63:0] BCa_15_fu_3125_p3;
wire   [63:0] and_ln301_fu_3251_p2;
wire   [63:0] BCo_13_fu_3209_p3;
wire   [63:0] xor_ln302_fu_3263_p2;
wire   [63:0] and_ln302_fu_3269_p2;
wire   [63:0] BCu_13_fu_3237_p3;
wire   [63:0] xor_ln303_fu_3281_p2;
wire   [63:0] and_ln303_fu_3287_p2;
wire   [63:0] xor_ln304_fu_3299_p2;
wire   [63:0] and_ln304_fu_3305_p2;
wire   [63:0] xor_ln305_fu_3317_p2;
wire   [63:0] and_ln305_fu_3323_p2;
wire   [63:0] Ebi_2_fu_3335_p2;
wire   [1:0] trunc_ln308_fu_3341_p1;
wire   [61:0] lshr_ln86_fu_3345_p4;
wire   [63:0] Ego_2_fu_3363_p2;
wire   [8:0] trunc_ln310_fu_3369_p1;
wire   [54:0] lshr_ln87_fu_3373_p4;
wire   [63:0] Eku_2_fu_3391_p2;
wire   [24:0] trunc_ln312_fu_3397_p1;
wire   [38:0] lshr_ln88_fu_3401_p4;
wire   [63:0] Ema_2_fu_3419_p2;
wire   [22:0] trunc_ln314_fu_3425_p1;
wire   [40:0] lshr_ln89_fu_3429_p4;
wire   [63:0] Ese_2_fu_3447_p2;
wire   [61:0] trunc_ln316_fu_3453_p1;
wire   [1:0] lshr_ln90_fu_3457_p4;
wire   [63:0] BCe_14_fu_3383_p3;
wire   [63:0] BCi_14_fu_3411_p3;
wire   [63:0] xor_ln317_fu_3475_p2;
wire   [63:0] and_ln317_fu_3481_p2;
wire   [63:0] BCa_16_fu_3355_p3;
wire   [63:0] BCo_14_fu_3439_p3;
wire   [63:0] xor_ln318_fu_3493_p2;
wire   [63:0] and_ln318_fu_3499_p2;
wire   [63:0] BCu_14_fu_3467_p3;
wire   [63:0] xor_ln319_fu_3511_p2;
wire   [63:0] and_ln319_fu_3517_p2;
wire   [63:0] xor_ln320_fu_3529_p2;
wire   [63:0] and_ln320_fu_3535_p2;
wire   [63:0] xor_ln321_fu_3547_p2;
wire   [63:0] and_ln321_fu_3553_p2;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

KeccakF1600_Statebkb #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakF_RoundConstan_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakF_RoundConstan_address0),
    .ce0(KeccakF_RoundConstan_ce0),
    .q0(KeccakF_RoundConstan_q0),
    .address1(KeccakF_RoundConstan_address1),
    .ce1(KeccakF_RoundConstan_ce1),
    .q1(KeccakF_RoundConstan_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state15);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aba_0_reg_740 <= Aba_5_fu_2569_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aba_0_reg_740 <= Aba_reg_3571;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abe_0_reg_729 <= Abe_4_fu_2587_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Abe_0_reg_729 <= Abe_reg_3586;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abi_0_reg_718 <= Abi_4_fu_2605_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Abi_0_reg_718 <= Abi_reg_3591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abo_0_reg_707 <= Abo_4_fu_2623_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Abo_0_reg_707 <= Abo_reg_3608;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abu_0_reg_696 <= Abu_4_fu_2641_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Abu_0_reg_696 <= Abu_reg_3613;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aga_0_reg_685 <= Aga_4_fu_2799_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aga_0_reg_685 <= Aga_reg_3630;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Age_0_reg_674 <= Age_4_fu_2817_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Age_0_reg_674 <= Age_reg_3635;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agi_0_reg_663 <= Agi_4_fu_2835_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Agi_0_reg_663 <= Agi_reg_3652;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ago_0_reg_652 <= Ago_4_fu_2853_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ago_0_reg_652 <= Ago_reg_3657;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agu_0_reg_641 <= Agu_4_fu_2871_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Agu_0_reg_641 <= Agu_reg_3674;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aka_0_reg_630 <= Aka_4_fu_3027_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aka_0_reg_630 <= Aka_reg_3679;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ake_0_reg_619 <= Ake_4_fu_3045_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ake_0_reg_619 <= Ake_reg_3696;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aki_0_reg_608 <= Aki_4_fu_3063_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aki_0_reg_608 <= Aki_reg_3701;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ako_0_reg_597 <= Ako_4_fu_3081_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ako_0_reg_597 <= Ako_reg_3718;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aku_0_reg_586 <= Aku_4_fu_3099_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aku_0_reg_586 <= Aku_reg_3723;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ama_0_reg_575 <= Ama_4_fu_3257_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ama_0_reg_575 <= Ama_reg_3740;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ame_0_reg_564 <= Ame_4_fu_3275_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ame_0_reg_564 <= Ame_reg_3745;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ami_0_reg_553 <= Ami_4_fu_3293_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ami_0_reg_553 <= Ami_reg_3762;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amo_0_reg_542 <= Amo_4_fu_3311_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Amo_0_reg_542 <= Amo_reg_3767;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amu_0_reg_531 <= Amu_4_fu_3329_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Amu_0_reg_531 <= Amu_reg_3784;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asa_0_reg_520 <= Asa_4_fu_3487_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Asa_0_reg_520 <= Asa_reg_3789;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ase_0_reg_509 <= Ase_4_fu_3505_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Ase_0_reg_509 <= Ase_reg_3806;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asi_0_reg_498 <= Asi_4_fu_3523_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Asi_0_reg_498 <= Asi_reg_3811;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aso_0_reg_487 <= Aso_4_fu_3541_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Aso_0_reg_487 <= state_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_reg_3838 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asu_0_reg_762 <= Asu_4_fu_3559_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Asu_0_reg_762 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln131_fu_773_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        round_0_reg_751 <= round_fu_795_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        round_0_reg_751 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Aba_reg_3571 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Abe_reg_3586 <= state_0_q0;
        Abi_reg_3591 <= state_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Abo_reg_3608 <= state_0_q1;
        Abu_reg_3613 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Aga_reg_3630 <= state_0_q1;
        Age_reg_3635 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Agi_reg_3652 <= state_0_q1;
        Ago_reg_3657 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Agu_reg_3674 <= state_0_q1;
        Aka_reg_3679 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Ake_reg_3696 <= state_0_q1;
        Aki_reg_3701 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Ako_reg_3718 <= state_0_q1;
        Aku_reg_3723 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Ama_reg_3740 <= state_0_q1;
        Ame_reg_3745 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Ami_reg_3762 <= state_0_q1;
        Amo_reg_3767 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Amu_reg_3784 <= state_0_q1;
        Asa_reg_3789 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Ase_reg_3806 <= state_0_q1;
        Asi_reg_3811 <= state_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln131_reg_3838 <= icmp_ln131_fu_773_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstan_ce0 = 1'b1;
    end else begin
        KeccakF_RoundConstan_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstan_ce1 = 1'b1;
    end else begin
        KeccakF_RoundConstan_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln131_fu_773_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        state_0_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_0_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_0_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_0_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        state_0_address0 = state_0_addr_reg_3576;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_0_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_0_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_0_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_0_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_0_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_0_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_0_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_0_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_0_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_0_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_0_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        state_0_address0 = 64'd0;
    end else begin
        state_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        state_0_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        state_0_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_0_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_0_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_0_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_address1 = state_0_addr_1_reg_3581;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        state_0_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_0_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_0_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_0_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_0_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_0_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_0_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_0_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_0_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_0_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_0_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_0_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_0_address1 = 64'd2;
    end else begin
        state_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        state_0_ce0 = 1'b1;
    end else begin
        state_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        state_0_ce1 = 1'b1;
    end else begin
        state_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        state_0_d0 = Aso_0_reg_487;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_0_d0 = Ase_0_reg_509;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_0_d0 = Amu_0_reg_531;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_d0 = Ami_0_reg_553;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_0_d0 = Ama_0_reg_575;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_d0 = Ako_0_reg_597;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_d0 = Ake_0_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_0_d0 = Agu_0_reg_641;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_0_d0 = Agi_0_reg_663;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_d0 = Aga_0_reg_685;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_d0 = Abo_0_reg_707;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        state_0_d0 = Abe_0_reg_729;
    end else begin
        state_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        state_0_d1 = Asu_0_reg_762;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        state_0_d1 = Asi_0_reg_498;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_0_d1 = Asa_0_reg_520;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_0_d1 = Amo_0_reg_542;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_0_d1 = Ame_0_reg_564;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_0_d1 = Aku_0_reg_586;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_0_d1 = Aki_0_reg_608;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_0_d1 = Aka_0_reg_630;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_0_d1 = Ago_0_reg_652;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_0_d1 = Age_0_reg_674;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_0_d1 = Abu_0_reg_696;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_0_d1 = Abi_0_reg_718;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        state_0_d1 = Aba_0_reg_740;
    end else begin
        state_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        state_0_we0 = 1'b1;
    end else begin
        state_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        state_0_we1 = 1'b1;
    end else begin
        state_0_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln131_fu_773_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln131_fu_773_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_5_fu_2569_p2 = (xor_ln253_fu_2563_p2 ^ KeccakF_RoundConstan_q1);

assign Aba_6_fu_1051_p2 = (Da_fu_941_p2 ^ Aba_0_reg_740);

assign Abe_3_fu_1495_p2 = (De_fu_967_p2 ^ Abe_0_reg_729);

assign Abe_4_fu_2587_p2 = (and_ln254_fu_2581_p2 ^ BCe_7_fu_2459_p3);

assign Abi_3_fu_1953_p2 = (Di_fu_993_p2 ^ Abi_0_reg_718);

assign Abi_4_fu_2605_p2 = (and_ln255_fu_2599_p2 ^ BCi_7_fu_2487_p3);

assign Abo_3_fu_1265_p2 = (Do_fu_1019_p2 ^ Abo_0_reg_707);

assign Abo_4_fu_2623_p2 = (and_ln256_fu_2617_p2 ^ BCo_7_fu_2515_p3);

assign Abu_3_fu_1723_p2 = (Du_fu_1045_p2 ^ Abu_0_reg_696);

assign Abu_4_fu_2641_p2 = (and_ln257_fu_2635_p2 ^ BCu_7_fu_2543_p3);

assign Aga_3_fu_1751_p2 = (Da_fu_941_p2 ^ Aga_0_reg_685);

assign Aga_4_fu_2799_p2 = (and_ln269_fu_2793_p2 ^ BCa_8_fu_2667_p3);

assign Age_3_fu_1057_p2 = (De_fu_967_p2 ^ Age_0_reg_674);

assign Age_4_fu_2817_p2 = (and_ln270_fu_2811_p2 ^ BCe_8_fu_2695_p3);

assign Agi_3_fu_1521_p2 = (Di_fu_993_p2 ^ Agi_0_reg_663);

assign Agi_4_fu_2835_p2 = (and_ln271_fu_2829_p2 ^ BCi_8_fu_2723_p3);

assign Ago_3_fu_1981_p2 = (Do_fu_1019_p2 ^ Ago_0_reg_652);

assign Ago_4_fu_2853_p2 = (and_ln272_fu_2847_p2 ^ BCo_8_fu_2751_p3);

assign Agu_3_fu_1293_p2 = (Du_fu_1045_p2 ^ Agu_0_reg_641);

assign Agu_4_fu_2871_p2 = (and_ln273_fu_2865_p2 ^ BCu_8_fu_2779_p3);

assign Aka_3_fu_1321_p2 = (Da_fu_941_p2 ^ Aka_0_reg_630);

assign Aka_4_fu_3027_p2 = (and_ln285_fu_3021_p2 ^ BCa_9_fu_2895_p3);

assign Ake_3_fu_1779_p2 = (De_fu_967_p2 ^ Ake_0_reg_619);

assign Ake_4_fu_3045_p2 = (and_ln286_fu_3039_p2 ^ BCe_9_fu_2923_p3);

assign Aki_3_fu_1085_p2 = (Di_fu_993_p2 ^ Aki_0_reg_608);

assign Aki_4_fu_3063_p2 = (and_ln287_fu_3057_p2 ^ BCi_9_fu_2951_p3);

assign Ako_3_fu_1549_p2 = (Do_fu_1019_p2 ^ Ako_0_reg_597);

assign Ako_4_fu_3081_p2 = (and_ln288_fu_3075_p2 ^ BCo_9_fu_2979_p3);

assign Aku_3_fu_2009_p2 = (Du_fu_1045_p2 ^ Aku_0_reg_586);

assign Aku_4_fu_3099_p2 = (and_ln289_fu_3093_p2 ^ BCu_9_fu_3007_p3);

assign Ama_3_fu_2037_p2 = (Da_fu_941_p2 ^ Ama_0_reg_575);

assign Ama_4_fu_3257_p2 = (and_ln301_fu_3251_p2 ^ BCa_15_fu_3125_p3);

assign Ame_3_fu_1349_p2 = (De_fu_967_p2 ^ Ame_0_reg_564);

assign Ame_4_fu_3275_p2 = (and_ln302_fu_3269_p2 ^ BCe_13_fu_3153_p3);

assign Ami_3_fu_1807_p2 = (Di_fu_993_p2 ^ Ami_0_reg_553);

assign Ami_4_fu_3293_p2 = (and_ln303_fu_3287_p2 ^ BCi_13_fu_3181_p3);

assign Amo_3_fu_1113_p2 = (Do_fu_1019_p2 ^ Amo_0_reg_542);

assign Amo_4_fu_3311_p2 = (and_ln304_fu_3305_p2 ^ BCo_13_fu_3209_p3);

assign Amu_3_fu_1577_p2 = (Du_fu_1045_p2 ^ Amu_0_reg_531);

assign Amu_4_fu_3329_p2 = (and_ln305_fu_3323_p2 ^ BCu_13_fu_3237_p3);

assign Asa_3_fu_1605_p2 = (Da_fu_941_p2 ^ Asa_0_reg_520);

assign Asa_4_fu_3487_p2 = (and_ln317_fu_3481_p2 ^ BCa_16_fu_3355_p3);

assign Ase_3_fu_2065_p2 = (De_fu_967_p2 ^ Ase_0_reg_509);

assign Ase_4_fu_3505_p2 = (and_ln318_fu_3499_p2 ^ BCe_14_fu_3383_p3);

assign Asi_3_fu_1377_p2 = (Di_fu_993_p2 ^ Asi_0_reg_498);

assign Asi_4_fu_3523_p2 = (and_ln319_fu_3517_p2 ^ BCi_14_fu_3411_p3);

assign Aso_3_fu_1835_p2 = (Do_fu_1019_p2 ^ Aso_0_reg_487);

assign Aso_4_fu_3541_p2 = (and_ln320_fu_3535_p2 ^ BCo_14_fu_3439_p3);

assign Asu_3_fu_1141_p2 = (Du_fu_1045_p2 ^ Asu_0_reg_762);

assign Asu_4_fu_3559_p2 = (and_ln321_fu_3553_p2 ^ BCu_14_fu_3467_p3);

assign BCa_13_fu_2201_p2 = (xor_ln229_fu_2183_p2 ^ xor_ln229_2_fu_2195_p2);

assign BCa_15_fu_3125_p3 = {{trunc_ln292_fu_3111_p1}, {lshr_ln81_fu_3115_p4}};

assign BCa_16_fu_3355_p3 = {{trunc_ln308_fu_3341_p1}, {lshr_ln86_fu_3345_p4}};

assign BCa_2_fu_1285_p3 = {{trunc_ln165_fu_1271_p1}, {lshr_ln49_fu_1275_p4}};

assign BCa_3_fu_1513_p3 = {{trunc_ln181_fu_1501_p1}, {tmp_276_fu_1505_p3}};

assign BCa_4_fu_1743_p3 = {{trunc_ln197_fu_1729_p1}, {lshr_ln58_fu_1733_p4}};

assign BCa_5_fu_1973_p3 = {{trunc_ln213_fu_1959_p1}, {lshr_ln63_fu_1963_p4}};

assign BCa_8_fu_2667_p3 = {{trunc_ln260_fu_2653_p1}, {lshr_ln72_fu_2657_p4}};

assign BCa_9_fu_2895_p3 = {{trunc_ln276_fu_2883_p1}, {tmp_282_fu_2887_p3}};

assign BCa_fu_819_p2 = (xor_ln134_fu_801_p2 ^ xor_ln134_2_fu_813_p2);

assign BCe_12_fu_2225_p2 = (xor_ln230_fu_2207_p2 ^ xor_ln230_2_fu_2219_p2);

assign BCe_13_fu_3153_p3 = {{trunc_ln294_fu_3139_p1}, {lshr_ln82_fu_3143_p4}};

assign BCe_14_fu_3383_p3 = {{trunc_ln310_fu_3369_p1}, {lshr_ln87_fu_3373_p4}};

assign BCe_1_fu_1077_p3 = {{trunc_ln150_fu_1063_p1}, {lshr_ln_fu_1067_p4}};

assign BCe_2_fu_1313_p3 = {{trunc_ln167_fu_1299_p1}, {lshr_ln50_fu_1303_p4}};

assign BCe_3_fu_1541_p3 = {{trunc_ln183_fu_1527_p1}, {lshr_ln54_fu_1531_p4}};

assign BCe_4_fu_1771_p3 = {{trunc_ln199_fu_1757_p1}, {lshr_ln59_fu_1761_p4}};

assign BCe_5_fu_2001_p3 = {{trunc_ln215_fu_1987_p1}, {lshr_ln64_fu_1991_p4}};

assign BCe_7_fu_2459_p3 = {{trunc_ln245_fu_2445_p1}, {lshr_ln68_fu_2449_p4}};

assign BCe_8_fu_2695_p3 = {{trunc_ln262_fu_2681_p1}, {lshr_ln73_fu_2685_p4}};

assign BCe_9_fu_2923_p3 = {{trunc_ln278_fu_2909_p1}, {lshr_ln77_fu_2913_p4}};

assign BCe_fu_843_p2 = (xor_ln135_fu_825_p2 ^ xor_ln135_2_fu_837_p2);

assign BCi_12_fu_2249_p2 = (xor_ln231_fu_2231_p2 ^ xor_ln231_2_fu_2243_p2);

assign BCi_13_fu_3181_p3 = {{trunc_ln296_fu_3167_p1}, {lshr_ln83_fu_3171_p4}};

assign BCi_14_fu_3411_p3 = {{trunc_ln312_fu_3397_p1}, {lshr_ln88_fu_3401_p4}};

assign BCi_1_fu_1105_p3 = {{trunc_ln152_fu_1091_p1}, {lshr_ln46_fu_1095_p4}};

assign BCi_2_fu_1341_p3 = {{trunc_ln169_fu_1327_p1}, {lshr_ln51_fu_1331_p4}};

assign BCi_3_fu_1569_p3 = {{trunc_ln185_fu_1555_p1}, {lshr_ln55_fu_1559_p4}};

assign BCi_4_fu_1799_p3 = {{trunc_ln201_fu_1785_p1}, {lshr_ln60_fu_1789_p4}};

assign BCi_5_fu_2029_p3 = {{trunc_ln217_fu_2015_p1}, {lshr_ln65_fu_2019_p4}};

assign BCi_7_fu_2487_p3 = {{trunc_ln247_fu_2473_p1}, {lshr_ln69_fu_2477_p4}};

assign BCi_8_fu_2723_p3 = {{trunc_ln264_fu_2709_p1}, {lshr_ln74_fu_2713_p4}};

assign BCi_9_fu_2951_p3 = {{trunc_ln280_fu_2937_p1}, {lshr_ln78_fu_2941_p4}};

assign BCi_fu_867_p2 = (xor_ln136_fu_849_p2 ^ xor_ln136_2_fu_861_p2);

assign BCo_12_fu_2273_p2 = (xor_ln232_fu_2255_p2 ^ xor_ln232_2_fu_2267_p2);

assign BCo_13_fu_3209_p3 = {{trunc_ln298_fu_3195_p1}, {lshr_ln84_fu_3199_p4}};

assign BCo_14_fu_3439_p3 = {{trunc_ln314_fu_3425_p1}, {lshr_ln89_fu_3429_p4}};

assign BCo_1_fu_1133_p3 = {{trunc_ln154_fu_1119_p1}, {lshr_ln47_fu_1123_p4}};

assign BCo_2_fu_1369_p3 = {{trunc_ln171_fu_1355_p1}, {lshr_ln52_fu_1359_p4}};

assign BCo_3_fu_1597_p3 = {{trunc_ln187_fu_1583_p1}, {lshr_ln56_fu_1587_p4}};

assign BCo_4_fu_1827_p3 = {{trunc_ln203_fu_1813_p1}, {lshr_ln61_fu_1817_p4}};

assign BCo_5_fu_2057_p3 = {{trunc_ln219_fu_2043_p1}, {lshr_ln66_fu_2047_p4}};

assign BCo_7_fu_2515_p3 = {{trunc_ln249_fu_2501_p1}, {lshr_ln70_fu_2505_p4}};

assign BCo_8_fu_2751_p3 = {{trunc_ln266_fu_2737_p1}, {lshr_ln75_fu_2741_p4}};

assign BCo_9_fu_2979_p3 = {{trunc_ln282_fu_2965_p1}, {lshr_ln79_fu_2969_p4}};

assign BCo_fu_891_p2 = (xor_ln137_fu_873_p2 ^ xor_ln137_2_fu_885_p2);

assign BCu_12_fu_2297_p2 = (xor_ln233_fu_2279_p2 ^ xor_ln233_2_fu_2291_p2);

assign BCu_13_fu_3237_p3 = {{trunc_ln300_fu_3223_p1}, {lshr_ln85_fu_3227_p4}};

assign BCu_14_fu_3467_p3 = {{trunc_ln316_fu_3453_p1}, {lshr_ln90_fu_3457_p4}};

assign BCu_1_fu_1161_p3 = {{trunc_ln156_fu_1147_p1}, {lshr_ln48_fu_1151_p4}};

assign BCu_2_fu_1397_p3 = {{trunc_ln173_fu_1383_p1}, {lshr_ln53_fu_1387_p4}};

assign BCu_3_fu_1625_p3 = {{trunc_ln189_fu_1611_p1}, {lshr_ln57_fu_1615_p4}};

assign BCu_4_fu_1855_p3 = {{trunc_ln205_fu_1841_p1}, {lshr_ln62_fu_1845_p4}};

assign BCu_5_fu_2085_p3 = {{trunc_ln221_fu_2071_p1}, {lshr_ln67_fu_2075_p4}};

assign BCu_7_fu_2543_p3 = {{trunc_ln251_fu_2529_p1}, {lshr_ln71_fu_2533_p4}};

assign BCu_8_fu_2779_p3 = {{trunc_ln268_fu_2765_p1}, {lshr_ln76_fu_2769_p4}};

assign BCu_9_fu_3007_p3 = {{trunc_ln284_fu_2993_p1}, {lshr_ln80_fu_2997_p4}};

assign BCu_fu_915_p2 = (xor_ln138_fu_897_p2 ^ xor_ln138_2_fu_909_p2);

assign Da_2_fu_2323_p2 = (or_ln6_fu_2315_p3 ^ BCu_12_fu_2297_p2);

assign Da_fu_941_p2 = (or_ln_fu_933_p3 ^ BCu_fu_915_p2);

assign De_2_fu_2349_p2 = (or_ln7_fu_2341_p3 ^ BCa_13_fu_2201_p2);

assign De_fu_967_p2 = (or_ln2_fu_959_p3 ^ BCa_fu_819_p2);

assign Di_2_fu_2375_p2 = (or_ln8_fu_2367_p3 ^ BCe_12_fu_2225_p2);

assign Di_fu_993_p2 = (or_ln3_fu_985_p3 ^ BCe_fu_843_p2);

assign Do_2_fu_2401_p2 = (or_ln9_fu_2393_p3 ^ BCi_12_fu_2249_p2);

assign Do_fu_1019_p2 = (or_ln4_fu_1011_p3 ^ BCi_fu_867_p2);

assign Du_2_fu_2427_p2 = (or_ln10_fu_2419_p3 ^ BCo_12_fu_2273_p2);

assign Du_fu_1045_p2 = (or_ln5_fu_1037_p3 ^ BCo_fu_891_p2);

assign Eba_4_fu_2433_p2 = (Eba_fu_1187_p2 ^ Da_2_fu_2323_p2);

assign Eba_fu_1187_p2 = (xor_ln158_fu_1181_p2 ^ KeccakF_RoundConstan_q0);

assign Ebe_2_fu_2877_p2 = (Ebe_fu_1205_p2 ^ De_2_fu_2349_p2);

assign Ebe_fu_1205_p2 = (and_ln159_fu_1199_p2 ^ BCe_1_fu_1077_p3);

assign Ebi_2_fu_3335_p2 = (Ebi_fu_1223_p2 ^ Di_2_fu_2375_p2);

assign Ebi_fu_1223_p2 = (and_ln160_fu_1217_p2 ^ BCi_1_fu_1105_p3);

assign Ebo_2_fu_2647_p2 = (Ebo_fu_1241_p2 ^ Do_2_fu_2401_p2);

assign Ebo_fu_1241_p2 = (and_ln161_fu_1235_p2 ^ BCo_1_fu_1133_p3);

assign Ebu_2_fu_3105_p2 = (Ebu_fu_1259_p2 ^ Du_2_fu_2427_p2);

assign Ebu_fu_1259_p2 = (and_ln162_fu_1253_p2 ^ BCu_1_fu_1161_p3);

assign Ega_2_fu_3133_p2 = (Ega_fu_1417_p2 ^ Da_2_fu_2323_p2);

assign Ega_fu_1417_p2 = (and_ln174_fu_1411_p2 ^ BCa_2_fu_1285_p3);

assign Ege_2_fu_2439_p2 = (Ege_fu_1435_p2 ^ De_2_fu_2349_p2);

assign Ege_fu_1435_p2 = (and_ln175_fu_1429_p2 ^ BCe_2_fu_1313_p3);

assign Egi_2_fu_2903_p2 = (Egi_fu_1453_p2 ^ Di_2_fu_2375_p2);

assign Egi_fu_1453_p2 = (and_ln176_fu_1447_p2 ^ BCi_2_fu_1341_p3);

assign Ego_2_fu_3363_p2 = (Ego_fu_1471_p2 ^ Do_2_fu_2401_p2);

assign Ego_fu_1471_p2 = (and_ln177_fu_1465_p2 ^ BCo_2_fu_1369_p3);

assign Egu_2_fu_2675_p2 = (Egu_fu_1489_p2 ^ Du_2_fu_2427_p2);

assign Egu_fu_1489_p2 = (and_ln178_fu_1483_p2 ^ BCu_2_fu_1397_p3);

assign Eka_2_fu_2703_p2 = (Eka_fu_1645_p2 ^ Da_2_fu_2323_p2);

assign Eka_fu_1645_p2 = (and_ln190_fu_1639_p2 ^ BCa_3_fu_1513_p3);

assign Eke_2_fu_3161_p2 = (Eke_fu_1663_p2 ^ De_2_fu_2349_p2);

assign Eke_fu_1663_p2 = (and_ln191_fu_1657_p2 ^ BCe_3_fu_1541_p3);

assign Eki_2_fu_2467_p2 = (Eki_fu_1681_p2 ^ Di_2_fu_2375_p2);

assign Eki_fu_1681_p2 = (and_ln192_fu_1675_p2 ^ BCi_3_fu_1569_p3);

assign Eko_2_fu_2931_p2 = (Eko_fu_1699_p2 ^ Do_2_fu_2401_p2);

assign Eko_fu_1699_p2 = (and_ln193_fu_1693_p2 ^ BCo_3_fu_1597_p3);

assign Eku_2_fu_3391_p2 = (Eku_fu_1717_p2 ^ Du_2_fu_2427_p2);

assign Eku_fu_1717_p2 = (and_ln194_fu_1711_p2 ^ BCu_3_fu_1625_p3);

assign Ema_2_fu_3419_p2 = (Ema_fu_1875_p2 ^ Da_2_fu_2323_p2);

assign Ema_fu_1875_p2 = (and_ln206_fu_1869_p2 ^ BCa_4_fu_1743_p3);

assign Eme_2_fu_2731_p2 = (Eme_fu_1893_p2 ^ De_2_fu_2349_p2);

assign Eme_fu_1893_p2 = (and_ln207_fu_1887_p2 ^ BCe_4_fu_1771_p3);

assign Emi_2_fu_3189_p2 = (Emi_fu_1911_p2 ^ Di_2_fu_2375_p2);

assign Emi_fu_1911_p2 = (and_ln208_fu_1905_p2 ^ BCi_4_fu_1799_p3);

assign Emo_2_fu_2495_p2 = (Emo_fu_1929_p2 ^ Do_2_fu_2401_p2);

assign Emo_fu_1929_p2 = (and_ln209_fu_1923_p2 ^ BCo_4_fu_1827_p3);

assign Emu_2_fu_2959_p2 = (Emu_fu_1947_p2 ^ Du_2_fu_2427_p2);

assign Emu_fu_1947_p2 = (and_ln210_fu_1941_p2 ^ BCu_4_fu_1855_p3);

assign Esa_2_fu_2987_p2 = (Esa_fu_2105_p2 ^ Da_2_fu_2323_p2);

assign Esa_fu_2105_p2 = (and_ln222_fu_2099_p2 ^ BCa_5_fu_1973_p3);

assign Ese_2_fu_3447_p2 = (Ese_fu_2123_p2 ^ De_2_fu_2349_p2);

assign Ese_fu_2123_p2 = (and_ln223_fu_2117_p2 ^ BCe_5_fu_2001_p3);

assign Esi_2_fu_2759_p2 = (Esi_fu_2141_p2 ^ Di_2_fu_2375_p2);

assign Esi_fu_2141_p2 = (and_ln224_fu_2135_p2 ^ BCi_5_fu_2029_p3);

assign Eso_2_fu_3217_p2 = (Eso_fu_2159_p2 ^ Do_2_fu_2401_p2);

assign Eso_fu_2159_p2 = (and_ln225_fu_2153_p2 ^ BCo_5_fu_2057_p3);

assign Esu_2_fu_2523_p2 = (Esu_fu_2177_p2 ^ Du_2_fu_2427_p2);

assign Esu_fu_2177_p2 = (and_ln226_fu_2171_p2 ^ BCu_5_fu_2085_p3);

assign KeccakF_RoundConstan_address0 = zext_ln158_fu_779_p1;

assign KeccakF_RoundConstan_address1 = zext_ln253_fu_790_p1;

assign and_ln157_fu_1175_p2 = (xor_ln157_fu_1169_p2 & BCi_1_fu_1105_p3);

assign and_ln159_fu_1199_p2 = (xor_ln159_fu_1193_p2 & BCo_1_fu_1133_p3);

assign and_ln160_fu_1217_p2 = (xor_ln160_fu_1211_p2 & BCu_1_fu_1161_p3);

assign and_ln161_fu_1235_p2 = (xor_ln161_fu_1229_p2 & Aba_6_fu_1051_p2);

assign and_ln162_fu_1253_p2 = (xor_ln162_fu_1247_p2 & BCe_1_fu_1077_p3);

assign and_ln174_fu_1411_p2 = (xor_ln174_fu_1405_p2 & BCi_2_fu_1341_p3);

assign and_ln175_fu_1429_p2 = (xor_ln175_fu_1423_p2 & BCo_2_fu_1369_p3);

assign and_ln176_fu_1447_p2 = (xor_ln176_fu_1441_p2 & BCu_2_fu_1397_p3);

assign and_ln177_fu_1465_p2 = (xor_ln177_fu_1459_p2 & BCa_2_fu_1285_p3);

assign and_ln178_fu_1483_p2 = (xor_ln178_fu_1477_p2 & BCe_2_fu_1313_p3);

assign and_ln190_fu_1639_p2 = (xor_ln190_fu_1633_p2 & BCi_3_fu_1569_p3);

assign and_ln191_fu_1657_p2 = (xor_ln191_fu_1651_p2 & BCo_3_fu_1597_p3);

assign and_ln192_fu_1675_p2 = (xor_ln192_fu_1669_p2 & BCu_3_fu_1625_p3);

assign and_ln193_fu_1693_p2 = (xor_ln193_fu_1687_p2 & BCa_3_fu_1513_p3);

assign and_ln194_fu_1711_p2 = (xor_ln194_fu_1705_p2 & BCe_3_fu_1541_p3);

assign and_ln206_fu_1869_p2 = (xor_ln206_fu_1863_p2 & BCi_4_fu_1799_p3);

assign and_ln207_fu_1887_p2 = (xor_ln207_fu_1881_p2 & BCo_4_fu_1827_p3);

assign and_ln208_fu_1905_p2 = (xor_ln208_fu_1899_p2 & BCu_4_fu_1855_p3);

assign and_ln209_fu_1923_p2 = (xor_ln209_fu_1917_p2 & BCa_4_fu_1743_p3);

assign and_ln210_fu_1941_p2 = (xor_ln210_fu_1935_p2 & BCe_4_fu_1771_p3);

assign and_ln222_fu_2099_p2 = (xor_ln222_fu_2093_p2 & BCi_5_fu_2029_p3);

assign and_ln223_fu_2117_p2 = (xor_ln223_fu_2111_p2 & BCo_5_fu_2057_p3);

assign and_ln224_fu_2135_p2 = (xor_ln224_fu_2129_p2 & BCu_5_fu_2085_p3);

assign and_ln225_fu_2153_p2 = (xor_ln225_fu_2147_p2 & BCa_5_fu_1973_p3);

assign and_ln226_fu_2171_p2 = (xor_ln226_fu_2165_p2 & BCe_5_fu_2001_p3);

assign and_ln252_fu_2557_p2 = (xor_ln252_fu_2551_p2 & BCi_7_fu_2487_p3);

assign and_ln254_fu_2581_p2 = (xor_ln254_fu_2575_p2 & BCo_7_fu_2515_p3);

assign and_ln255_fu_2599_p2 = (xor_ln255_fu_2593_p2 & BCu_7_fu_2543_p3);

assign and_ln256_fu_2617_p2 = (xor_ln256_fu_2611_p2 & Eba_4_fu_2433_p2);

assign and_ln257_fu_2635_p2 = (xor_ln257_fu_2629_p2 & BCe_7_fu_2459_p3);

assign and_ln269_fu_2793_p2 = (xor_ln269_fu_2787_p2 & BCi_8_fu_2723_p3);

assign and_ln270_fu_2811_p2 = (xor_ln270_fu_2805_p2 & BCo_8_fu_2751_p3);

assign and_ln271_fu_2829_p2 = (xor_ln271_fu_2823_p2 & BCu_8_fu_2779_p3);

assign and_ln272_fu_2847_p2 = (xor_ln272_fu_2841_p2 & BCa_8_fu_2667_p3);

assign and_ln273_fu_2865_p2 = (xor_ln273_fu_2859_p2 & BCe_8_fu_2695_p3);

assign and_ln285_fu_3021_p2 = (xor_ln285_fu_3015_p2 & BCi_9_fu_2951_p3);

assign and_ln286_fu_3039_p2 = (xor_ln286_fu_3033_p2 & BCo_9_fu_2979_p3);

assign and_ln287_fu_3057_p2 = (xor_ln287_fu_3051_p2 & BCu_9_fu_3007_p3);

assign and_ln288_fu_3075_p2 = (xor_ln288_fu_3069_p2 & BCa_9_fu_2895_p3);

assign and_ln289_fu_3093_p2 = (xor_ln289_fu_3087_p2 & BCe_9_fu_2923_p3);

assign and_ln301_fu_3251_p2 = (xor_ln301_fu_3245_p2 & BCi_13_fu_3181_p3);

assign and_ln302_fu_3269_p2 = (xor_ln302_fu_3263_p2 & BCo_13_fu_3209_p3);

assign and_ln303_fu_3287_p2 = (xor_ln303_fu_3281_p2 & BCu_13_fu_3237_p3);

assign and_ln304_fu_3305_p2 = (xor_ln304_fu_3299_p2 & BCa_15_fu_3125_p3);

assign and_ln305_fu_3323_p2 = (xor_ln305_fu_3317_p2 & BCe_13_fu_3153_p3);

assign and_ln317_fu_3481_p2 = (xor_ln317_fu_3475_p2 & BCi_14_fu_3411_p3);

assign and_ln318_fu_3499_p2 = (xor_ln318_fu_3493_p2 & BCo_14_fu_3439_p3);

assign and_ln319_fu_3517_p2 = (xor_ln319_fu_3511_p2 & BCu_14_fu_3467_p3);

assign and_ln320_fu_3535_p2 = (xor_ln320_fu_3529_p2 & BCa_16_fu_3355_p3);

assign and_ln321_fu_3553_p2 = (xor_ln321_fu_3547_p2 & BCe_14_fu_3383_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign icmp_ln131_fu_773_p2 = ((round_0_reg_751 < 5'd24) ? 1'b1 : 1'b0);

assign lshr_ln46_fu_1095_p4 = {{Aki_3_fu_1085_p2[63:21]}};

assign lshr_ln47_fu_1123_p4 = {{Amo_3_fu_1113_p2[63:43]}};

assign lshr_ln48_fu_1151_p4 = {{Asu_3_fu_1141_p2[63:50]}};

assign lshr_ln49_fu_1275_p4 = {{Abo_3_fu_1265_p2[63:36]}};

assign lshr_ln50_fu_1303_p4 = {{Agu_3_fu_1293_p2[63:44]}};

assign lshr_ln51_fu_1331_p4 = {{Aka_3_fu_1321_p2[63:61]}};

assign lshr_ln52_fu_1359_p4 = {{Ame_3_fu_1349_p2[63:19]}};

assign lshr_ln53_fu_1387_p4 = {{Asi_3_fu_1377_p2[63:3]}};

assign lshr_ln54_fu_1531_p4 = {{Agi_3_fu_1521_p2[63:58]}};

assign lshr_ln55_fu_1559_p4 = {{Ako_3_fu_1549_p2[63:39]}};

assign lshr_ln56_fu_1587_p4 = {{Amu_3_fu_1577_p2[63:56]}};

assign lshr_ln57_fu_1615_p4 = {{Asa_3_fu_1605_p2[63:46]}};

assign lshr_ln58_fu_1733_p4 = {{Abu_3_fu_1723_p2[63:37]}};

assign lshr_ln59_fu_1761_p4 = {{Aga_3_fu_1751_p2[63:28]}};

assign lshr_ln60_fu_1789_p4 = {{Ake_3_fu_1779_p2[63:54]}};

assign lshr_ln61_fu_1817_p4 = {{Ami_3_fu_1807_p2[63:49]}};

assign lshr_ln62_fu_1845_p4 = {{Aso_3_fu_1835_p2[63:8]}};

assign lshr_ln63_fu_1963_p4 = {{Abi_3_fu_1953_p2[63:2]}};

assign lshr_ln64_fu_1991_p4 = {{Ago_3_fu_1981_p2[63:9]}};

assign lshr_ln65_fu_2019_p4 = {{Aku_3_fu_2009_p2[63:25]}};

assign lshr_ln66_fu_2047_p4 = {{Ama_3_fu_2037_p2[63:23]}};

assign lshr_ln67_fu_2075_p4 = {{Ase_3_fu_2065_p2[63:62]}};

assign lshr_ln68_fu_2449_p4 = {{Ege_2_fu_2439_p2[63:20]}};

assign lshr_ln69_fu_2477_p4 = {{Eki_2_fu_2467_p2[63:21]}};

assign lshr_ln70_fu_2505_p4 = {{Emo_2_fu_2495_p2[63:43]}};

assign lshr_ln71_fu_2533_p4 = {{Esu_2_fu_2523_p2[63:50]}};

assign lshr_ln72_fu_2657_p4 = {{Ebo_2_fu_2647_p2[63:36]}};

assign lshr_ln73_fu_2685_p4 = {{Egu_2_fu_2675_p2[63:44]}};

assign lshr_ln74_fu_2713_p4 = {{Eka_2_fu_2703_p2[63:61]}};

assign lshr_ln75_fu_2741_p4 = {{Eme_2_fu_2731_p2[63:19]}};

assign lshr_ln76_fu_2769_p4 = {{Esi_2_fu_2759_p2[63:3]}};

assign lshr_ln77_fu_2913_p4 = {{Egi_2_fu_2903_p2[63:58]}};

assign lshr_ln78_fu_2941_p4 = {{Eko_2_fu_2931_p2[63:39]}};

assign lshr_ln79_fu_2969_p4 = {{Emu_2_fu_2959_p2[63:56]}};

assign lshr_ln80_fu_2997_p4 = {{Esa_2_fu_2987_p2[63:46]}};

assign lshr_ln81_fu_3115_p4 = {{Ebu_2_fu_3105_p2[63:37]}};

assign lshr_ln82_fu_3143_p4 = {{Ega_2_fu_3133_p2[63:28]}};

assign lshr_ln83_fu_3171_p4 = {{Eke_2_fu_3161_p2[63:54]}};

assign lshr_ln84_fu_3199_p4 = {{Emi_2_fu_3189_p2[63:49]}};

assign lshr_ln85_fu_3227_p4 = {{Eso_2_fu_3217_p2[63:8]}};

assign lshr_ln86_fu_3345_p4 = {{Ebi_2_fu_3335_p2[63:2]}};

assign lshr_ln87_fu_3373_p4 = {{Ego_2_fu_3363_p2[63:9]}};

assign lshr_ln88_fu_3401_p4 = {{Eku_2_fu_3391_p2[63:25]}};

assign lshr_ln89_fu_3429_p4 = {{Ema_2_fu_3419_p2[63:23]}};

assign lshr_ln90_fu_3457_p4 = {{Ese_2_fu_3447_p2[63:62]}};

assign lshr_ln_fu_1067_p4 = {{Age_3_fu_1057_p2[63:20]}};

assign or_ln10_fu_2419_p3 = {{trunc_ln240_fu_2407_p1}, {tmp_281_fu_2411_p3}};

assign or_ln253_fu_784_p2 = (round_0_reg_751 | 5'd1);

assign or_ln2_fu_959_p3 = {{trunc_ln142_fu_947_p1}, {tmp_272_fu_951_p3}};

assign or_ln3_fu_985_p3 = {{trunc_ln143_fu_973_p1}, {tmp_273_fu_977_p3}};

assign or_ln4_fu_1011_p3 = {{trunc_ln144_fu_999_p1}, {tmp_274_fu_1003_p3}};

assign or_ln5_fu_1037_p3 = {{trunc_ln145_fu_1025_p1}, {tmp_275_fu_1029_p3}};

assign or_ln6_fu_2315_p3 = {{trunc_ln236_fu_2303_p1}, {tmp_277_fu_2307_p3}};

assign or_ln7_fu_2341_p3 = {{trunc_ln237_fu_2329_p1}, {tmp_278_fu_2333_p3}};

assign or_ln8_fu_2367_p3 = {{trunc_ln238_fu_2355_p1}, {tmp_279_fu_2359_p3}};

assign or_ln9_fu_2393_p3 = {{trunc_ln239_fu_2381_p1}, {tmp_280_fu_2385_p3}};

assign or_ln_fu_933_p3 = {{trunc_ln141_fu_921_p1}, {tmp_271_fu_925_p3}};

assign round_fu_795_p2 = (5'd2 + round_0_reg_751);

assign state_0_addr_1_reg_3581 = 64'd2;

assign state_0_addr_reg_3576 = 64'd1;

assign tmp_271_fu_925_p3 = BCe_fu_843_p2[32'd63];

assign tmp_272_fu_951_p3 = BCi_fu_867_p2[32'd63];

assign tmp_273_fu_977_p3 = BCo_fu_891_p2[32'd63];

assign tmp_274_fu_1003_p3 = BCu_fu_915_p2[32'd63];

assign tmp_275_fu_1029_p3 = BCa_fu_819_p2[32'd63];

assign tmp_276_fu_1505_p3 = Abe_3_fu_1495_p2[32'd63];

assign tmp_277_fu_2307_p3 = BCe_12_fu_2225_p2[32'd63];

assign tmp_278_fu_2333_p3 = BCi_12_fu_2249_p2[32'd63];

assign tmp_279_fu_2359_p3 = BCo_12_fu_2273_p2[32'd63];

assign tmp_280_fu_2385_p3 = BCu_12_fu_2297_p2[32'd63];

assign tmp_281_fu_2411_p3 = BCa_13_fu_2201_p2[32'd63];

assign tmp_282_fu_2887_p3 = Ebe_2_fu_2877_p2[32'd63];

assign trunc_ln141_fu_921_p1 = BCe_fu_843_p2[62:0];

assign trunc_ln142_fu_947_p1 = BCi_fu_867_p2[62:0];

assign trunc_ln143_fu_973_p1 = BCo_fu_891_p2[62:0];

assign trunc_ln144_fu_999_p1 = BCu_fu_915_p2[62:0];

assign trunc_ln145_fu_1025_p1 = BCa_fu_819_p2[62:0];

assign trunc_ln150_fu_1063_p1 = Age_3_fu_1057_p2[19:0];

assign trunc_ln152_fu_1091_p1 = Aki_3_fu_1085_p2[20:0];

assign trunc_ln154_fu_1119_p1 = Amo_3_fu_1113_p2[42:0];

assign trunc_ln156_fu_1147_p1 = Asu_3_fu_1141_p2[49:0];

assign trunc_ln165_fu_1271_p1 = Abo_3_fu_1265_p2[35:0];

assign trunc_ln167_fu_1299_p1 = Agu_3_fu_1293_p2[43:0];

assign trunc_ln169_fu_1327_p1 = Aka_3_fu_1321_p2[60:0];

assign trunc_ln171_fu_1355_p1 = Ame_3_fu_1349_p2[18:0];

assign trunc_ln173_fu_1383_p1 = Asi_3_fu_1377_p2[2:0];

assign trunc_ln181_fu_1501_p1 = Abe_3_fu_1495_p2[62:0];

assign trunc_ln183_fu_1527_p1 = Agi_3_fu_1521_p2[57:0];

assign trunc_ln185_fu_1555_p1 = Ako_3_fu_1549_p2[38:0];

assign trunc_ln187_fu_1583_p1 = Amu_3_fu_1577_p2[55:0];

assign trunc_ln189_fu_1611_p1 = Asa_3_fu_1605_p2[45:0];

assign trunc_ln197_fu_1729_p1 = Abu_3_fu_1723_p2[36:0];

assign trunc_ln199_fu_1757_p1 = Aga_3_fu_1751_p2[27:0];

assign trunc_ln201_fu_1785_p1 = Ake_3_fu_1779_p2[53:0];

assign trunc_ln203_fu_1813_p1 = Ami_3_fu_1807_p2[48:0];

assign trunc_ln205_fu_1841_p1 = Aso_3_fu_1835_p2[7:0];

assign trunc_ln213_fu_1959_p1 = Abi_3_fu_1953_p2[1:0];

assign trunc_ln215_fu_1987_p1 = Ago_3_fu_1981_p2[8:0];

assign trunc_ln217_fu_2015_p1 = Aku_3_fu_2009_p2[24:0];

assign trunc_ln219_fu_2043_p1 = Ama_3_fu_2037_p2[22:0];

assign trunc_ln221_fu_2071_p1 = Ase_3_fu_2065_p2[61:0];

assign trunc_ln236_fu_2303_p1 = BCe_12_fu_2225_p2[62:0];

assign trunc_ln237_fu_2329_p1 = BCi_12_fu_2249_p2[62:0];

assign trunc_ln238_fu_2355_p1 = BCo_12_fu_2273_p2[62:0];

assign trunc_ln239_fu_2381_p1 = BCu_12_fu_2297_p2[62:0];

assign trunc_ln240_fu_2407_p1 = BCa_13_fu_2201_p2[62:0];

assign trunc_ln245_fu_2445_p1 = Ege_2_fu_2439_p2[19:0];

assign trunc_ln247_fu_2473_p1 = Eki_2_fu_2467_p2[20:0];

assign trunc_ln249_fu_2501_p1 = Emo_2_fu_2495_p2[42:0];

assign trunc_ln251_fu_2529_p1 = Esu_2_fu_2523_p2[49:0];

assign trunc_ln260_fu_2653_p1 = Ebo_2_fu_2647_p2[35:0];

assign trunc_ln262_fu_2681_p1 = Egu_2_fu_2675_p2[43:0];

assign trunc_ln264_fu_2709_p1 = Eka_2_fu_2703_p2[60:0];

assign trunc_ln266_fu_2737_p1 = Eme_2_fu_2731_p2[18:0];

assign trunc_ln268_fu_2765_p1 = Esi_2_fu_2759_p2[2:0];

assign trunc_ln276_fu_2883_p1 = Ebe_2_fu_2877_p2[62:0];

assign trunc_ln278_fu_2909_p1 = Egi_2_fu_2903_p2[57:0];

assign trunc_ln280_fu_2937_p1 = Eko_2_fu_2931_p2[38:0];

assign trunc_ln282_fu_2965_p1 = Emu_2_fu_2959_p2[55:0];

assign trunc_ln284_fu_2993_p1 = Esa_2_fu_2987_p2[45:0];

assign trunc_ln292_fu_3111_p1 = Ebu_2_fu_3105_p2[36:0];

assign trunc_ln294_fu_3139_p1 = Ega_2_fu_3133_p2[27:0];

assign trunc_ln296_fu_3167_p1 = Eke_2_fu_3161_p2[53:0];

assign trunc_ln298_fu_3195_p1 = Emi_2_fu_3189_p2[48:0];

assign trunc_ln300_fu_3223_p1 = Eso_2_fu_3217_p2[7:0];

assign trunc_ln308_fu_3341_p1 = Ebi_2_fu_3335_p2[1:0];

assign trunc_ln310_fu_3369_p1 = Ego_2_fu_3363_p2[8:0];

assign trunc_ln312_fu_3397_p1 = Eku_2_fu_3391_p2[24:0];

assign trunc_ln314_fu_3425_p1 = Ema_2_fu_3419_p2[22:0];

assign trunc_ln316_fu_3453_p1 = Ese_2_fu_3447_p2[61:0];

assign xor_ln134_1_fu_807_p2 = (Ama_0_reg_575 ^ Aba_0_reg_740);

assign xor_ln134_2_fu_813_p2 = (xor_ln134_1_fu_807_p2 ^ Asa_0_reg_520);

assign xor_ln134_fu_801_p2 = (Aka_0_reg_630 ^ Aga_0_reg_685);

assign xor_ln135_1_fu_831_p2 = (Ame_0_reg_564 ^ Abe_0_reg_729);

assign xor_ln135_2_fu_837_p2 = (xor_ln135_1_fu_831_p2 ^ Ase_0_reg_509);

assign xor_ln135_fu_825_p2 = (Ake_0_reg_619 ^ Age_0_reg_674);

assign xor_ln136_1_fu_855_p2 = (Ami_0_reg_553 ^ Abi_0_reg_718);

assign xor_ln136_2_fu_861_p2 = (xor_ln136_1_fu_855_p2 ^ Asi_0_reg_498);

assign xor_ln136_fu_849_p2 = (Aki_0_reg_608 ^ Agi_0_reg_663);

assign xor_ln137_1_fu_879_p2 = (Amo_0_reg_542 ^ Abo_0_reg_707);

assign xor_ln137_2_fu_885_p2 = (xor_ln137_1_fu_879_p2 ^ Aso_0_reg_487);

assign xor_ln137_fu_873_p2 = (Ako_0_reg_597 ^ Ago_0_reg_652);

assign xor_ln138_1_fu_903_p2 = (Asu_0_reg_762 ^ Aku_0_reg_586);

assign xor_ln138_2_fu_909_p2 = (xor_ln138_1_fu_903_p2 ^ Amu_0_reg_531);

assign xor_ln138_fu_897_p2 = (Agu_0_reg_641 ^ Abu_0_reg_696);

assign xor_ln157_fu_1169_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1077_p3);

assign xor_ln158_fu_1181_p2 = (and_ln157_fu_1175_p2 ^ Aba_6_fu_1051_p2);

assign xor_ln159_fu_1193_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1105_p3);

assign xor_ln160_fu_1211_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1133_p3);

assign xor_ln161_fu_1229_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1161_p3);

assign xor_ln162_fu_1247_p2 = (64'd18446744073709551615 ^ Aba_6_fu_1051_p2);

assign xor_ln174_fu_1405_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1313_p3);

assign xor_ln175_fu_1423_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1341_p3);

assign xor_ln176_fu_1441_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1369_p3);

assign xor_ln177_fu_1459_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1397_p3);

assign xor_ln178_fu_1477_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1285_p3);

assign xor_ln190_fu_1633_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1541_p3);

assign xor_ln191_fu_1651_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1569_p3);

assign xor_ln192_fu_1669_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1597_p3);

assign xor_ln193_fu_1687_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1625_p3);

assign xor_ln194_fu_1705_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1513_p3);

assign xor_ln206_fu_1863_p2 = (64'd18446744073709551615 ^ BCe_4_fu_1771_p3);

assign xor_ln207_fu_1881_p2 = (64'd18446744073709551615 ^ BCi_4_fu_1799_p3);

assign xor_ln208_fu_1899_p2 = (64'd18446744073709551615 ^ BCo_4_fu_1827_p3);

assign xor_ln209_fu_1917_p2 = (64'd18446744073709551615 ^ BCu_4_fu_1855_p3);

assign xor_ln210_fu_1935_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1743_p3);

assign xor_ln222_fu_2093_p2 = (64'd18446744073709551615 ^ BCe_5_fu_2001_p3);

assign xor_ln223_fu_2111_p2 = (64'd18446744073709551615 ^ BCi_5_fu_2029_p3);

assign xor_ln224_fu_2129_p2 = (64'd18446744073709551615 ^ BCo_5_fu_2057_p3);

assign xor_ln225_fu_2147_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2085_p3);

assign xor_ln226_fu_2165_p2 = (64'd18446744073709551615 ^ BCa_5_fu_1973_p3);

assign xor_ln229_1_fu_2189_p2 = (Ega_fu_1417_p2 ^ Eba_fu_1187_p2);

assign xor_ln229_2_fu_2195_p2 = (xor_ln229_1_fu_2189_p2 ^ Ema_fu_1875_p2);

assign xor_ln229_fu_2183_p2 = (Esa_fu_2105_p2 ^ Eka_fu_1645_p2);

assign xor_ln230_1_fu_2213_p2 = (Ege_fu_1435_p2 ^ Ebe_fu_1205_p2);

assign xor_ln230_2_fu_2219_p2 = (xor_ln230_1_fu_2213_p2 ^ Eme_fu_1893_p2);

assign xor_ln230_fu_2207_p2 = (Ese_fu_2123_p2 ^ Eke_fu_1663_p2);

assign xor_ln231_1_fu_2237_p2 = (Esi_fu_2141_p2 ^ Ebi_fu_1223_p2);

assign xor_ln231_2_fu_2243_p2 = (xor_ln231_1_fu_2237_p2 ^ Egi_fu_1453_p2);

assign xor_ln231_fu_2231_p2 = (Emi_fu_1911_p2 ^ Eki_fu_1681_p2);

assign xor_ln232_1_fu_2261_p2 = (Eko_fu_1699_p2 ^ Ego_fu_1471_p2);

assign xor_ln232_2_fu_2267_p2 = (xor_ln232_1_fu_2261_p2 ^ Eso_fu_2159_p2);

assign xor_ln232_fu_2255_p2 = (Emo_fu_1929_p2 ^ Ebo_fu_1241_p2);

assign xor_ln233_1_fu_2285_p2 = (Esu_fu_2177_p2 ^ Ebu_fu_1259_p2);

assign xor_ln233_2_fu_2291_p2 = (xor_ln233_1_fu_2285_p2 ^ Eku_fu_1717_p2);

assign xor_ln233_fu_2279_p2 = (Emu_fu_1947_p2 ^ Egu_fu_1489_p2);

assign xor_ln252_fu_2551_p2 = (64'd18446744073709551615 ^ BCe_7_fu_2459_p3);

assign xor_ln253_fu_2563_p2 = (and_ln252_fu_2557_p2 ^ Eba_4_fu_2433_p2);

assign xor_ln254_fu_2575_p2 = (64'd18446744073709551615 ^ BCi_7_fu_2487_p3);

assign xor_ln255_fu_2593_p2 = (64'd18446744073709551615 ^ BCo_7_fu_2515_p3);

assign xor_ln256_fu_2611_p2 = (64'd18446744073709551615 ^ BCu_7_fu_2543_p3);

assign xor_ln257_fu_2629_p2 = (64'd18446744073709551615 ^ Eba_4_fu_2433_p2);

assign xor_ln269_fu_2787_p2 = (64'd18446744073709551615 ^ BCe_8_fu_2695_p3);

assign xor_ln270_fu_2805_p2 = (64'd18446744073709551615 ^ BCi_8_fu_2723_p3);

assign xor_ln271_fu_2823_p2 = (64'd18446744073709551615 ^ BCo_8_fu_2751_p3);

assign xor_ln272_fu_2841_p2 = (64'd18446744073709551615 ^ BCu_8_fu_2779_p3);

assign xor_ln273_fu_2859_p2 = (64'd18446744073709551615 ^ BCa_8_fu_2667_p3);

assign xor_ln285_fu_3015_p2 = (64'd18446744073709551615 ^ BCe_9_fu_2923_p3);

assign xor_ln286_fu_3033_p2 = (64'd18446744073709551615 ^ BCi_9_fu_2951_p3);

assign xor_ln287_fu_3051_p2 = (64'd18446744073709551615 ^ BCo_9_fu_2979_p3);

assign xor_ln288_fu_3069_p2 = (64'd18446744073709551615 ^ BCu_9_fu_3007_p3);

assign xor_ln289_fu_3087_p2 = (64'd18446744073709551615 ^ BCa_9_fu_2895_p3);

assign xor_ln301_fu_3245_p2 = (64'd18446744073709551615 ^ BCe_13_fu_3153_p3);

assign xor_ln302_fu_3263_p2 = (64'd18446744073709551615 ^ BCi_13_fu_3181_p3);

assign xor_ln303_fu_3281_p2 = (64'd18446744073709551615 ^ BCo_13_fu_3209_p3);

assign xor_ln304_fu_3299_p2 = (64'd18446744073709551615 ^ BCu_13_fu_3237_p3);

assign xor_ln305_fu_3317_p2 = (64'd18446744073709551615 ^ BCa_15_fu_3125_p3);

assign xor_ln317_fu_3475_p2 = (64'd18446744073709551615 ^ BCe_14_fu_3383_p3);

assign xor_ln318_fu_3493_p2 = (64'd18446744073709551615 ^ BCi_14_fu_3411_p3);

assign xor_ln319_fu_3511_p2 = (64'd18446744073709551615 ^ BCo_14_fu_3439_p3);

assign xor_ln320_fu_3529_p2 = (64'd18446744073709551615 ^ BCu_14_fu_3467_p3);

assign xor_ln321_fu_3547_p2 = (64'd18446744073709551615 ^ BCa_16_fu_3355_p3);

assign zext_ln158_fu_779_p1 = round_0_reg_751;

assign zext_ln253_fu_790_p1 = or_ln253_fu_784_p2;

endmodule //KeccakF1600_StatePer
