// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_13 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_we0,
        a_coeffs_d0,
        a_coeffs_offset,
        a_coeffs_offset1,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1,
        nonce
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] a_coeffs_address0;
output   a_coeffs_ce0;
output   a_coeffs_we0;
output  [22:0] a_coeffs_d0;
input  [2:0] a_coeffs_offset;
input  [2:0] a_coeffs_offset1;
output  [7:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [7:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;
input  [9:0] nonce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_coeffs_ce0;
reg a_coeffs_we0;
reg[7:0] seed_address0;
reg seed_ce0;
reg[7:0] seed_address1;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_676;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state36;
reg   [7:0] reg_682;
reg   [7:0] reg_688;
reg   [7:0] reg_693;
reg   [7:0] reg_698;
wire   [7:0] t_0_fu_703_p1;
reg   [7:0] t_0_reg_1266;
reg   [1:0] tmp_s_reg_1271;
wire   [4:0] i_21_fu_723_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln416_fu_745_p2;
reg   [2:0] add_ln416_reg_1287;
wire    ap_CS_fsm_state3;
wire   [4:0] shl_ln_fu_755_p3;
reg   [4:0] shl_ln_reg_1292;
wire   [0:0] icmp_ln416_fu_739_p2;
reg   [4:0] state_s_addr_11_reg_1312;
reg   [7:0] seed_load_reg_1317;
wire    ap_CS_fsm_state4;
reg   [7:0] seed_load_1_reg_1322;
reg   [7:0] seed_load_2_reg_1337;
wire    ap_CS_fsm_state5;
reg   [7:0] seed_load_3_reg_1342;
reg   [7:0] seed_load_4_reg_1357;
wire    ap_CS_fsm_state6;
reg   [7:0] seed_load_5_reg_1362;
wire    ap_CS_fsm_state9;
wire   [1:0] trunc_ln375_fu_880_p1;
reg   [1:0] trunc_ln375_reg_1392;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln474_fu_874_p2;
wire   [1:0] trunc_ln375_1_fu_884_p1;
reg   [1:0] trunc_ln375_1_reg_1397;
wire   [4:0] i_fu_894_p2;
reg   [4:0] i_reg_1405;
wire    ap_CS_fsm_state13;
wire   [9:0] add_ln477_fu_912_p2;
reg   [9:0] add_ln477_reg_1410;
wire   [0:0] icmp_ln476_fu_888_p2;
wire   [9:0] add_ln478_fu_923_p2;
wire   [2:0] add_ln479_fu_929_p2;
reg   [7:0] trunc_ln48_11_reg_1437;
wire   [31:0] grp_rej_uniform_fu_581_ap_return;
wire    ap_CS_fsm_state18;
wire    grp_rej_uniform_fu_581_ap_ready;
wire    grp_rej_uniform_fu_581_ap_done;
wire   [10:0] zext_ln377_fu_1018_p1;
reg   [10:0] zext_ln377_reg_1447;
wire    ap_CS_fsm_state19;
wire   [7:0] trunc_ln378_fu_1044_p1;
reg   [7:0] trunc_ln378_reg_1455;
wire    ap_CS_fsm_state31;
wire   [1:0] trunc_ln378_1_fu_1048_p1;
reg   [1:0] trunc_ln378_1_reg_1461;
wire   [10:0] sub_ln380_fu_1056_p2;
reg   [10:0] sub_ln380_reg_1466;
wire   [1:0] i_22_fu_1070_p2;
reg   [1:0] i_22_reg_1474;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln379_fu_1065_p2;
wire   [4:0] add_ln476_fu_1101_p2;
reg   [4:0] add_ln476_reg_1487;
wire    ap_CS_fsm_state35;
wire   [7:0] or_ln477_fu_1115_p2;
reg   [7:0] or_ln477_reg_1492;
wire   [0:0] icmp_ln476_1_fu_1095_p2;
wire   [8:0] zext_ln383_fu_1130_p1;
reg   [8:0] zext_ln383_reg_1504;
wire   [9:0] sub_ln384_fu_1138_p2;
reg   [9:0] sub_ln384_reg_1509;
wire   [10:0] zext_ln384_fu_1145_p1;
reg   [10:0] zext_ln384_reg_1514;
reg   [7:0] trunc_ln48_s_reg_1519;
wire   [8:0] zext_ln477_6_fu_1185_p1;
reg   [8:0] zext_ln477_6_reg_1524;
wire    ap_CS_fsm_state37;
wire   [31:0] ctr_2_fu_1250_p2;
wire    ap_CS_fsm_state40;
reg   [9:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
reg   [7:0] buf_d0;
wire   [7:0] buf_q0;
reg   [9:0] buf_address1;
reg    buf_ce1;
reg    buf_we1;
reg   [7:0] buf_d1;
wire   [7:0] buf_q1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire   [63:0] state_s_q1;
wire    grp_KeccakF1600_StatePer_1_fu_574_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_574_ap_done;
wire    grp_KeccakF1600_StatePer_1_fu_574_ap_idle;
wire    grp_KeccakF1600_StatePer_1_fu_574_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_574_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_574_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_574_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_574_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_574_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_574_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_574_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_574_state_d1;
wire    grp_rej_uniform_fu_581_ap_start;
wire    grp_rej_uniform_fu_581_ap_idle;
wire   [11:0] grp_rej_uniform_fu_581_a_address0;
wire    grp_rej_uniform_fu_581_a_ce0;
wire    grp_rej_uniform_fu_581_a_we0;
wire   [22:0] grp_rej_uniform_fu_581_a_d0;
reg   [31:0] grp_rej_uniform_fu_581_a_offset2;
reg   [9:0] grp_rej_uniform_fu_581_len;
wire   [9:0] grp_rej_uniform_fu_581_buf_r_address0;
wire    grp_rej_uniform_fu_581_buf_r_ce0;
wire   [9:0] grp_rej_uniform_fu_581_buf_r_address1;
wire    grp_rej_uniform_fu_581_buf_r_ce1;
reg   [10:0] grp_rej_uniform_fu_581_buflen;
wire    grp_shake128_absorb_fu_597_ap_start;
wire    grp_shake128_absorb_fu_597_ap_done;
wire    grp_shake128_absorb_fu_597_ap_idle;
wire    grp_shake128_absorb_fu_597_ap_ready;
wire   [4:0] grp_shake128_absorb_fu_597_state_s_address0;
wire    grp_shake128_absorb_fu_597_state_s_ce0;
wire    grp_shake128_absorb_fu_597_state_s_we0;
wire   [63:0] grp_shake128_absorb_fu_597_state_s_d0;
reg   [4:0] i_0_i_i_i_reg_472;
wire   [0:0] icmp_ln362_fu_717_p2;
reg   [2:0] i_3_i_i_reg_483;
wire    ap_CS_fsm_state7;
reg   [2:0] p_01_i_i3_reg_494;
wire    ap_CS_fsm_state10;
reg   [9:0] p_0_rec_i_i4_reg_506;
reg   [4:0] i_0_i_i5_reg_518;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
reg   [31:0] ctr_0_reg_529;
reg  signed [8:0] buflen_0_reg_539;
reg   [1:0] i_0_reg_551;
wire    ap_CS_fsm_state33;
reg   [4:0] i_0_i_i_0_reg_563;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
reg    grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg;
reg    grp_rej_uniform_fu_581_ap_start_reg;
reg    grp_shake128_absorb_fu_597_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln363_fu_729_p1;
wire   [63:0] zext_ln417_fu_763_p1;
wire   [63:0] zext_ln31_fu_774_p1;
wire   [63:0] zext_ln416_fu_734_p1;
wire   [63:0] zext_ln31_19_fu_784_p1;
wire   [63:0] zext_ln31_20_fu_794_p1;
wire   [63:0] zext_ln31_21_fu_804_p1;
wire   [63:0] zext_ln31_22_fu_814_p1;
wire   [63:0] zext_ln31_23_fu_824_p1;
wire   [63:0] zext_ln31_24_fu_834_p1;
wire   [63:0] zext_ln477_2_fu_918_p1;
wire   [63:0] zext_ln477_4_fu_935_p1;
wire   [63:0] zext_ln48_fu_949_p1;
wire   [63:0] zext_ln48_7_fu_959_p1;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln48_8_fu_969_p1;
wire   [63:0] zext_ln48_9_fu_979_p1;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln48_10_fu_989_p1;
wire   [63:0] zext_ln48_11_fu_999_p1;
wire   [63:0] zext_ln48_12_fu_1009_p1;
wire   [63:0] zext_ln380_fu_1085_p1;
wire   [63:0] zext_ln380_1_fu_1090_p1;
wire   [63:0] zext_ln477_3_fu_1120_p1;
wire   [63:0] or_ln_fu_1153_p3;
wire   [63:0] zext_ln48_16_fu_1180_p1;
wire   [63:0] zext_ln48_13_fu_1194_p1;
wire   [63:0] zext_ln48_14_fu_1205_p1;
wire   [63:0] zext_ln48_15_fu_1215_p1;
wire    ap_CS_fsm_state38;
wire   [63:0] zext_ln48_17_fu_1225_p1;
wire   [63:0] zext_ln48_18_fu_1235_p1;
wire   [63:0] zext_ln48_19_fu_1245_p1;
wire   [63:0] xor_ln417_fu_853_p2;
wire   [63:0] xor_ln450_fu_860_p2;
wire   [63:0] xor_ln451_fu_867_p2;
wire   [7:0] trunc_ln48_fu_939_p1;
wire   [7:0] trunc_ln48_22_fu_1162_p1;
wire   [1:0] trunc_ln417_fu_751_p1;
wire   [4:0] or_ln31_fu_768_p2;
wire   [4:0] or_ln31_1_fu_779_p2;
wire   [4:0] or_ln31_2_fu_789_p2;
wire   [4:0] or_ln31_3_fu_799_p2;
wire   [4:0] or_ln31_4_fu_809_p2;
wire   [4:0] or_ln31_5_fu_819_p2;
wire   [4:0] or_ln31_6_fu_829_p2;
wire   [63:0] r_7_i_i_fu_839_p9;
wire   [7:0] shl_ln5_fu_900_p3;
wire   [9:0] zext_ln477_fu_908_p1;
wire   [9:0] or_ln48_fu_944_p2;
wire   [9:0] or_ln48_7_fu_954_p2;
wire   [9:0] or_ln48_8_fu_964_p2;
wire   [9:0] or_ln48_9_fu_974_p2;
wire   [9:0] or_ln48_10_fu_984_p2;
wire   [9:0] or_ln48_11_fu_994_p2;
wire   [9:0] or_ln48_12_fu_1004_p2;
wire  signed [9:0] sext_ln377_fu_1014_p1;
wire   [23:0] tmp_256_fu_1022_p4;
wire   [2:0] grp_fu_1038_p1;
wire   [8:0] grp_fu_1038_p2;
wire   [10:0] zext_ln378_fu_1052_p1;
wire   [10:0] zext_ln379_fu_1061_p1;
wire   [10:0] add_ln380_fu_1076_p2;
wire  signed [31:0] sext_ln380_fu_1081_p1;
wire   [7:0] shl_ln477_1_fu_1107_p3;
wire   [7:0] buflen_fu_1125_p2;
wire   [9:0] trunc_ln384_fu_1134_p1;
wire   [31:0] zext_ln477_5_fu_1150_p1;
wire   [7:0] or_ln48_14_fu_1167_p2;
wire   [10:0] or_ln48_s_fu_1172_p3;
wire   [8:0] add_ln48_fu_1188_p2;
wire   [8:0] add_ln48_1_fu_1199_p2;
wire   [8:0] add_ln48_2_fu_1210_p2;
wire   [8:0] add_ln48_3_fu_1220_p2;
wire   [8:0] add_ln48_4_fu_1230_p2;
wire   [8:0] add_ln48_5_fu_1240_p2;
wire   [0:0] icmp_ln377_fu_1032_p2;
reg    grp_fu_1038_ap_start;
wire    grp_fu_1038_ap_done;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg = 1'b0;
#0 grp_rej_uniform_fu_581_ap_start_reg = 1'b0;
#0 grp_shake128_absorb_fu_597_ap_start_reg = 1'b0;
end

pqcrystals_dilithdEe #(
    .DataWidth( 8 ),
    .AddressRange( 842 ),
    .AddressWidth( 10 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(buf_d0),
    .q0(buf_q0),
    .address1(buf_address1),
    .ce1(buf_ce1),
    .we1(buf_we1),
    .d1(buf_d1),
    .q1(buf_q1)
);

shake256_state_0_s #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_574(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_574_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_574_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_574_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_574_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_574_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_574_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_574_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_574_state_d0),
    .state_q0(state_s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_574_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_574_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_574_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_574_state_d1),
    .state_q1(state_s_q1)
);

rej_uniform grp_rej_uniform_fu_581(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rej_uniform_fu_581_ap_start),
    .ap_done(grp_rej_uniform_fu_581_ap_done),
    .ap_idle(grp_rej_uniform_fu_581_ap_idle),
    .ap_ready(grp_rej_uniform_fu_581_ap_ready),
    .a_address0(grp_rej_uniform_fu_581_a_address0),
    .a_ce0(grp_rej_uniform_fu_581_a_ce0),
    .a_we0(grp_rej_uniform_fu_581_a_we0),
    .a_d0(grp_rej_uniform_fu_581_a_d0),
    .a_offset(trunc_ln375_reg_1392),
    .a_offset1(trunc_ln375_1_reg_1397),
    .a_offset2(grp_rej_uniform_fu_581_a_offset2),
    .len(grp_rej_uniform_fu_581_len),
    .buf_r_address0(grp_rej_uniform_fu_581_buf_r_address0),
    .buf_r_ce0(grp_rej_uniform_fu_581_buf_r_ce0),
    .buf_r_q0(buf_q0),
    .buf_r_address1(grp_rej_uniform_fu_581_buf_r_address1),
    .buf_r_ce1(grp_rej_uniform_fu_581_buf_r_ce1),
    .buf_r_q1(buf_q1),
    .buflen(grp_rej_uniform_fu_581_buflen),
    .ap_return(grp_rej_uniform_fu_581_ap_return)
);

shake128_absorb grp_shake128_absorb_fu_597(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shake128_absorb_fu_597_ap_start),
    .ap_done(grp_shake128_absorb_fu_597_ap_done),
    .ap_idle(grp_shake128_absorb_fu_597_ap_idle),
    .ap_ready(grp_shake128_absorb_fu_597_ap_ready),
    .state_s_address0(grp_shake128_absorb_fu_597_state_s_address0),
    .state_s_ce0(grp_shake128_absorb_fu_597_state_s_ce0),
    .state_s_we0(grp_shake128_absorb_fu_597_state_s_we0),
    .state_s_d0(grp_shake128_absorb_fu_597_state_s_d0),
    .state_s_q0(state_s_q0),
    .in_0_read(t_0_reg_1266),
    .in_1_read(tmp_s_reg_1271)
);

pqcrystals_dilithfYi #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
pqcrystals_dilithfYi_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1038_ap_start),
    .done(grp_fu_1038_ap_done),
    .din0(buflen_0_reg_539),
    .din1(grp_fu_1038_p1),
    .ce(1'b1),
    .dout(grp_fu_1038_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state32) & (icmp_ln379_fu_1065_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln474_fu_874_p2 == 1'd0)))) begin
            grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_574_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rej_uniform_fu_581_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state35) & (icmp_ln476_1_fu_1095_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln474_fu_874_p2 == 1'd1)))) begin
            grp_rej_uniform_fu_581_ap_start_reg <= 1'b1;
        end else if ((grp_rej_uniform_fu_581_ap_ready == 1'b1)) begin
            grp_rej_uniform_fu_581_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_shake128_absorb_fu_597_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln416_fu_739_p2 == 1'd1))) begin
            grp_shake128_absorb_fu_597_ap_start_reg <= 1'b1;
        end else if ((grp_shake128_absorb_fu_597_ap_ready == 1'b1)) begin
            grp_shake128_absorb_fu_597_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_581_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
                        buflen_0_reg_539[2 : 0] <= zext_ln383_reg_1504[2 : 0];
            buflen_0_reg_539[8 : 4] <= zext_ln383_reg_1504[8 : 4];
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
                        buflen_0_reg_539[0] <= 1'b0;
            buflen_0_reg_539[1] <= 1'b0;
            buflen_0_reg_539[2] <= 1'b0;
            buflen_0_reg_539[4] <= 1'b0;
            buflen_0_reg_539[5] <= 1'b0;
            buflen_0_reg_539[6] <= 1'b1;
            buflen_0_reg_539[7] <= 1'b0;
            buflen_0_reg_539[8] <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_rej_uniform_fu_581_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            ctr_0_reg_529 <= ctr_2_fu_1250_p2;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ctr_0_reg_529 <= grp_rej_uniform_fu_581_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_i_i5_reg_518 <= i_reg_1405;
    end else if (((grp_KeccakF1600_StatePer_1_fu_574_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i_i5_reg_518 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_0_i_i_0_reg_563 <= add_ln476_reg_1487;
    end else if (((grp_KeccakF1600_StatePer_1_fu_574_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
        i_0_i_i_0_reg_563 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_717_p2 == 1'd0))) begin
        i_0_i_i_i_reg_472 <= i_21_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_i_reg_472 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_0_reg_551 <= i_22_reg_1474;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        i_0_reg_551 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_717_p2 == 1'd1))) begin
        i_3_i_i_reg_483 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_3_i_i_reg_483 <= add_ln416_reg_1287;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln476_fu_888_p2 == 1'd1))) begin
        p_01_i_i3_reg_494 <= add_ln479_fu_929_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_01_i_i3_reg_494 <= 3'd5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln476_fu_888_p2 == 1'd1))) begin
        p_0_rec_i_i4_reg_506 <= add_ln478_fu_923_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_0_rec_i_i4_reg_506 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln416_reg_1287 <= add_ln416_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln476_reg_1487 <= add_ln476_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln476_fu_888_p2 == 1'd0))) begin
        add_ln477_reg_1410 <= add_ln477_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_22_reg_1474 <= i_22_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_reg_1405 <= i_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln476_1_fu_1095_p2 == 1'd0))) begin
        or_ln477_reg_1492 <= or_ln477_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_676 <= {{state_s_q1[23:16]}};
        reg_682 <= {{state_s_q1[31:24]}};
        reg_688 <= {{state_s_q1[47:40]}};
        reg_693 <= {{state_s_q1[55:48]}};
        reg_698 <= {{state_s_q1[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_load_1_reg_1322 <= seed_q1;
        seed_load_reg_1317 <= seed_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_load_2_reg_1337 <= seed_q0;
        seed_load_3_reg_1342 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_load_4_reg_1357 <= seed_q0;
        seed_load_5_reg_1362 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln416_fu_739_p2 == 1'd0))) begin
        shl_ln_reg_1292[4 : 3] <= shl_ln_fu_755_p3[4 : 3];
        state_s_addr_11_reg_1312[2 : 0] <= zext_ln416_fu_734_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        sub_ln380_reg_1466 <= sub_ln380_fu_1056_p2;
        trunc_ln378_1_reg_1461 <= trunc_ln378_1_fu_1048_p1;
        trunc_ln378_reg_1455 <= trunc_ln378_fu_1044_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln476_1_fu_1095_p2 == 1'd1))) begin
        sub_ln384_reg_1509 <= sub_ln384_fu_1138_p2;
        zext_ln383_reg_1504[2 : 0] <= zext_ln383_fu_1130_p1[2 : 0];
zext_ln383_reg_1504[4] <= zext_ln383_fu_1130_p1[4];
zext_ln383_reg_1504[6] <= zext_ln383_fu_1130_p1[6];
        zext_ln384_reg_1514[2 : 0] <= zext_ln384_fu_1145_p1[2 : 0];
zext_ln384_reg_1514[4] <= zext_ln384_fu_1145_p1[4];
zext_ln384_reg_1514[6] <= zext_ln384_fu_1145_p1[6];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_0_reg_1266 <= t_0_fu_703_p1;
        tmp_s_reg_1271 <= {{nonce[9:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln474_fu_874_p2 == 1'd1))) begin
        trunc_ln375_1_reg_1397 <= trunc_ln375_1_fu_884_p1;
        trunc_ln375_reg_1392 <= trunc_ln375_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln48_11_reg_1437 <= {{state_s_q1[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        trunc_ln48_s_reg_1519 <= {{state_s_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        zext_ln377_reg_1447[2 : 0] <= zext_ln377_fu_1018_p1[2 : 0];
zext_ln377_reg_1447[9 : 4] <= zext_ln377_fu_1018_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        zext_ln477_6_reg_1524[7 : 0] <= zext_ln477_6_fu_1185_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        a_coeffs_ce0 = grp_rej_uniform_fu_581_a_ce0;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        a_coeffs_we0 = grp_rej_uniform_fu_581_a_we0;
    end else begin
        a_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln377_fu_1032_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln377_fu_1032_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        buf_address0 = zext_ln48_18_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        buf_address0 = zext_ln48_15_fu_1215_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_address0 = zext_ln48_13_fu_1194_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        buf_address0 = or_ln_fu_1153_p3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        buf_address0 = zext_ln380_fu_1085_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buf_address0 = zext_ln48_11_fu_999_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_address0 = zext_ln48_9_fu_979_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_address0 = zext_ln48_7_fu_959_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_address0 = zext_ln477_4_fu_935_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        buf_address0 = grp_rej_uniform_fu_581_buf_r_address0;
    end else begin
        buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        buf_address1 = zext_ln48_19_fu_1245_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        buf_address1 = zext_ln48_17_fu_1225_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_address1 = zext_ln48_14_fu_1205_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        buf_address1 = zext_ln48_16_fu_1180_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        buf_address1 = zext_ln380_1_fu_1090_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buf_address1 = zext_ln48_12_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_address1 = zext_ln48_10_fu_989_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_address1 = zext_ln48_8_fu_969_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_address1 = zext_ln48_fu_949_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        buf_address1 = grp_rej_uniform_fu_581_buf_r_address1;
    end else begin
        buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32))) begin
        buf_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        buf_ce0 = grp_rej_uniform_fu_581_buf_r_ce0;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37))) begin
        buf_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state18))) begin
        buf_ce1 = grp_rej_uniform_fu_581_buf_r_ce1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        buf_d0 = reg_682;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_d0 = trunc_ln48_s_reg_1519;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        buf_d0 = trunc_ln48_22_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state17))) begin
        buf_d0 = reg_693;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_d0 = trunc_ln48_11_reg_1437;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_d0 = reg_676;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_d0 = trunc_ln48_fu_939_p1;
    end else begin
        buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_d1 = reg_676;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        buf_d1 = {{state_s_q1[39:32]}};
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        buf_d1 = buf_q0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state17))) begin
        buf_d1 = reg_698;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16))) begin
        buf_d1 = reg_688;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_d1 = reg_682;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_d1 = {{state_s_q1[15:8]}};
    end else begin
        buf_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37))) begin
        buf_we0 = 1'b1;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37))) begin
        buf_we1 = 1'b1;
    end else begin
        buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln377_fu_1032_p2 == 1'd1))) begin
        grp_fu_1038_ap_start = 1'b1;
    end else begin
        grp_fu_1038_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_rej_uniform_fu_581_a_offset2 = ctr_0_reg_529;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_rej_uniform_fu_581_a_offset2 = 32'd0;
    end else begin
        grp_rej_uniform_fu_581_a_offset2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_rej_uniform_fu_581_buflen = zext_ln384_reg_1514;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_rej_uniform_fu_581_buflen = 11'd840;
    end else begin
        grp_rej_uniform_fu_581_buflen = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_rej_uniform_fu_581_len = sub_ln384_reg_1509;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_rej_uniform_fu_581_len = 10'd256;
    end else begin
        grp_rej_uniform_fu_581_len = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address0 = zext_ln31_23_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address0 = zext_ln31_21_fu_804_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address0 = zext_ln31_19_fu_784_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address0 = zext_ln417_fu_763_p1;
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address1 = zext_ln31_24_fu_834_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address1 = zext_ln31_22_fu_814_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address1 = zext_ln31_20_fu_794_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address1 = zext_ln31_fu_774_p1;
    end else begin
        seed_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        seed_ce0 = 1'b1;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        seed_ce1 = 1'b1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_s_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_address0 = state_s_addr_11_reg_1312;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address0 = zext_ln363_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address0 = grp_shake128_absorb_fu_597_state_s_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_address0 = grp_KeccakF1600_StatePer_1_fu_574_state_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        state_s_address1 = zext_ln477_3_fu_1120_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_s_address1 = zext_ln477_2_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_s_address1 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_address1 = grp_KeccakF1600_StatePer_1_fu_574_state_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        state_s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_ce0 = grp_shake128_absorb_fu_597_state_s_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_ce0 = grp_KeccakF1600_StatePer_1_fu_574_state_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        state_s_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_ce1 = grp_KeccakF1600_StatePer_1_fu_574_state_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_d0 = xor_ln451_fu_867_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_d0 = xor_ln417_fu_853_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d0 = grp_shake128_absorb_fu_597_state_s_d0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_d0 = grp_KeccakF1600_StatePer_1_fu_574_state_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_d1 = xor_ln450_fu_860_p2;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_d1 = grp_KeccakF1600_StatePer_1_fu_574_state_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_717_p2 == 1'd0)))) begin
        state_s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_we0 = grp_shake128_absorb_fu_597_state_s_we0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_we0 = grp_KeccakF1600_StatePer_1_fu_574_state_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        state_s_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state12))) begin
        state_s_we1 = grp_KeccakF1600_StatePer_1_fu_574_state_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln362_fu_717_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln416_fu_739_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_shake128_absorb_fu_597_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln474_fu_874_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_574_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln476_fu_888_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_rej_uniform_fu_581_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln377_fu_1032_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln379_fu_1065_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_574_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln476_1_fu_1095_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_rej_uniform_fu_581_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_coeffs_address0 = grp_rej_uniform_fu_581_a_address0;

assign a_coeffs_d0 = grp_rej_uniform_fu_581_a_d0;

assign add_ln380_fu_1076_p2 = (sub_ln380_reg_1466 + zext_ln379_fu_1061_p1);

assign add_ln416_fu_745_p2 = (i_3_i_i_reg_483 + 3'd1);

assign add_ln476_fu_1101_p2 = (i_0_i_i_0_reg_563 + 5'd1);

assign add_ln477_fu_912_p2 = (p_0_rec_i_i4_reg_506 + zext_ln477_fu_908_p1);

assign add_ln478_fu_923_p2 = (p_0_rec_i_i4_reg_506 + 10'd168);

assign add_ln479_fu_929_p2 = ($signed(p_01_i_i3_reg_494) + $signed(3'd7));

assign add_ln48_1_fu_1199_p2 = (9'd2 + zext_ln477_6_fu_1185_p1);

assign add_ln48_2_fu_1210_p2 = (9'd3 + zext_ln477_6_reg_1524);

assign add_ln48_3_fu_1220_p2 = (9'd5 + zext_ln477_6_reg_1524);

assign add_ln48_4_fu_1230_p2 = (9'd6 + zext_ln477_6_reg_1524);

assign add_ln48_5_fu_1240_p2 = (9'd7 + zext_ln477_6_reg_1524);

assign add_ln48_fu_1188_p2 = (9'd1 + zext_ln477_6_fu_1185_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buflen_fu_1125_p2 = (trunc_ln378_reg_1455 | 8'd168);

assign ctr_2_fu_1250_p2 = (grp_rej_uniform_fu_581_ap_return + ctr_0_reg_529);

assign grp_KeccakF1600_StatePer_1_fu_574_ap_start = grp_KeccakF1600_StatePer_1_fu_574_ap_start_reg;

assign grp_fu_1038_p1 = 9'd3;

assign grp_rej_uniform_fu_581_ap_start = grp_rej_uniform_fu_581_ap_start_reg;

assign grp_shake128_absorb_fu_597_ap_start = grp_shake128_absorb_fu_597_ap_start_reg;

assign i_21_fu_723_p2 = (i_0_i_i_i_reg_472 + 5'd1);

assign i_22_fu_1070_p2 = (i_0_reg_551 + 2'd1);

assign i_fu_894_p2 = (i_0_i_i5_reg_518 + 5'd1);

assign icmp_ln362_fu_717_p2 = ((i_0_i_i_i_reg_472 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln377_fu_1032_p2 = ((tmp_256_fu_1022_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_fu_1065_p2 = ((i_0_reg_551 == trunc_ln378_1_reg_1461) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_739_p2 = ((i_3_i_i_reg_483 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln474_fu_874_p2 = ((p_01_i_i3_reg_494 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln476_1_fu_1095_p2 = ((i_0_i_i_0_reg_563 == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln476_fu_888_p2 = ((i_0_i_i5_reg_518 == 5'd21) ? 1'b1 : 1'b0);

assign or_ln31_1_fu_779_p2 = (shl_ln_reg_1292 | 5'd2);

assign or_ln31_2_fu_789_p2 = (shl_ln_reg_1292 | 5'd3);

assign or_ln31_3_fu_799_p2 = (shl_ln_reg_1292 | 5'd4);

assign or_ln31_4_fu_809_p2 = (shl_ln_reg_1292 | 5'd5);

assign or_ln31_5_fu_819_p2 = (shl_ln_reg_1292 | 5'd6);

assign or_ln31_6_fu_829_p2 = (shl_ln_reg_1292 | 5'd7);

assign or_ln31_fu_768_p2 = (shl_ln_fu_755_p3 | 5'd1);

assign or_ln477_fu_1115_p2 = (trunc_ln378_reg_1455 | shl_ln477_1_fu_1107_p3);

assign or_ln48_10_fu_984_p2 = (10'd5 | add_ln477_reg_1410);

assign or_ln48_11_fu_994_p2 = (10'd6 | add_ln477_reg_1410);

assign or_ln48_12_fu_1004_p2 = (10'd7 | add_ln477_reg_1410);

assign or_ln48_14_fu_1167_p2 = (or_ln477_reg_1492 | 8'd4);

assign or_ln48_7_fu_954_p2 = (10'd2 | add_ln477_reg_1410);

assign or_ln48_8_fu_964_p2 = (10'd3 | add_ln477_reg_1410);

assign or_ln48_9_fu_974_p2 = (10'd4 | add_ln477_reg_1410);

assign or_ln48_fu_944_p2 = (10'd1 | add_ln477_reg_1410);

assign or_ln48_s_fu_1172_p3 = {{3'd0}, {or_ln48_14_fu_1167_p2}};

assign or_ln_fu_1153_p3 = {{32'd0}, {zext_ln477_5_fu_1150_p1}};

assign r_7_i_i_fu_839_p9 = {{{{{{{{seed_q1}, {seed_q0}}, {seed_load_5_reg_1362}}, {seed_load_4_reg_1357}}, {seed_load_3_reg_1342}}, {seed_load_2_reg_1337}}, {seed_load_1_reg_1322}}, {seed_load_reg_1317}};

assign sext_ln377_fu_1014_p1 = buflen_0_reg_539;

assign sext_ln380_fu_1081_p1 = $signed(add_ln380_fu_1076_p2);

assign shl_ln477_1_fu_1107_p3 = {{i_0_i_i_0_reg_563}, {3'd0}};

assign shl_ln5_fu_900_p3 = {{i_0_i_i5_reg_518}, {3'd0}};

assign shl_ln_fu_755_p3 = {{trunc_ln417_fu_751_p1}, {3'd0}};

assign sub_ln380_fu_1056_p2 = (zext_ln377_reg_1447 - zext_ln378_fu_1052_p1);

assign sub_ln384_fu_1138_p2 = (10'd256 - trunc_ln384_fu_1134_p1);

assign t_0_fu_703_p1 = nonce[7:0];

assign tmp_256_fu_1022_p4 = {{ctr_0_reg_529[31:8]}};

assign trunc_ln375_1_fu_884_p1 = a_coeffs_offset1[1:0];

assign trunc_ln375_fu_880_p1 = a_coeffs_offset[1:0];

assign trunc_ln378_1_fu_1048_p1 = grp_fu_1038_p2[1:0];

assign trunc_ln378_fu_1044_p1 = grp_fu_1038_p2[7:0];

assign trunc_ln384_fu_1134_p1 = ctr_0_reg_529[9:0];

assign trunc_ln417_fu_751_p1 = i_3_i_i_reg_483[1:0];

assign trunc_ln48_22_fu_1162_p1 = state_s_q1[7:0];

assign trunc_ln48_fu_939_p1 = state_s_q1[7:0];

assign xor_ln417_fu_853_p2 = (state_s_q0 ^ r_7_i_i_fu_839_p9);

assign xor_ln450_fu_860_p2 = (state_s_q0 ^ 64'd2031616);

assign xor_ln451_fu_867_p2 = (state_s_q1 ^ 64'd9223372036854775808);

assign zext_ln31_19_fu_784_p1 = or_ln31_1_fu_779_p2;

assign zext_ln31_20_fu_794_p1 = or_ln31_2_fu_789_p2;

assign zext_ln31_21_fu_804_p1 = or_ln31_3_fu_799_p2;

assign zext_ln31_22_fu_814_p1 = or_ln31_4_fu_809_p2;

assign zext_ln31_23_fu_824_p1 = or_ln31_5_fu_819_p2;

assign zext_ln31_24_fu_834_p1 = or_ln31_6_fu_829_p2;

assign zext_ln31_fu_774_p1 = or_ln31_fu_768_p2;

assign zext_ln363_fu_729_p1 = i_0_i_i_i_reg_472;

assign zext_ln377_fu_1018_p1 = $unsigned(sext_ln377_fu_1014_p1);

assign zext_ln378_fu_1052_p1 = grp_fu_1038_p2;

assign zext_ln379_fu_1061_p1 = i_0_reg_551;

assign zext_ln380_1_fu_1090_p1 = i_0_reg_551;

assign zext_ln380_fu_1085_p1 = $unsigned(sext_ln380_fu_1081_p1);

assign zext_ln383_fu_1130_p1 = buflen_fu_1125_p2;

assign zext_ln384_fu_1145_p1 = buflen_fu_1125_p2;

assign zext_ln416_fu_734_p1 = i_3_i_i_reg_483;

assign zext_ln417_fu_763_p1 = shl_ln_fu_755_p3;

assign zext_ln477_2_fu_918_p1 = i_0_i_i5_reg_518;

assign zext_ln477_3_fu_1120_p1 = i_0_i_i_0_reg_563;

assign zext_ln477_4_fu_935_p1 = add_ln477_reg_1410;

assign zext_ln477_5_fu_1150_p1 = or_ln477_reg_1492;

assign zext_ln477_6_fu_1185_p1 = or_ln477_reg_1492;

assign zext_ln477_fu_908_p1 = shl_ln5_fu_900_p3;

assign zext_ln48_10_fu_989_p1 = or_ln48_10_fu_984_p2;

assign zext_ln48_11_fu_999_p1 = or_ln48_11_fu_994_p2;

assign zext_ln48_12_fu_1009_p1 = or_ln48_12_fu_1004_p2;

assign zext_ln48_13_fu_1194_p1 = add_ln48_fu_1188_p2;

assign zext_ln48_14_fu_1205_p1 = add_ln48_1_fu_1199_p2;

assign zext_ln48_15_fu_1215_p1 = add_ln48_2_fu_1210_p2;

assign zext_ln48_16_fu_1180_p1 = or_ln48_s_fu_1172_p3;

assign zext_ln48_17_fu_1225_p1 = add_ln48_3_fu_1220_p2;

assign zext_ln48_18_fu_1235_p1 = add_ln48_4_fu_1230_p2;

assign zext_ln48_19_fu_1245_p1 = add_ln48_5_fu_1240_p2;

assign zext_ln48_7_fu_959_p1 = or_ln48_7_fu_954_p2;

assign zext_ln48_8_fu_969_p1 = or_ln48_8_fu_964_p2;

assign zext_ln48_9_fu_979_p1 = or_ln48_9_fu_974_p2;

assign zext_ln48_fu_949_p1 = or_ln48_fu_944_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1292[2:0] <= 3'b000;
    state_s_addr_11_reg_1312[4:3] <= 2'b00;
    zext_ln377_reg_1447[3] <= 1'b1;
    zext_ln377_reg_1447[10] <= 1'b0;
    zext_ln383_reg_1504[3] <= 1'b1;
    zext_ln383_reg_1504[5:5] <= 1'b1;
    zext_ln383_reg_1504[8:7] <= 2'b01;
    zext_ln384_reg_1514[3] <= 1'b1;
    zext_ln384_reg_1514[5:5] <= 1'b1;
    zext_ln384_reg_1514[10:7] <= 4'b0001;
    zext_ln477_6_reg_1524[8] <= 1'b0;
    buflen_0_reg_539[3] <= 1'b1;
end

endmodule //pqcrystals_dilithium_13
