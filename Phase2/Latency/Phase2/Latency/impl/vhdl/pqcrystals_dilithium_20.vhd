-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pqcrystals_dilithium_20 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of pqcrystals_dilithium_20 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3802001 : STD_LOGIC_VECTOR (31 downto 0) := "00000011100000000010000000000001";
    constant ap_const_lv55_7FFFFFFF801FFF : STD_LOGIC_VECTOR (54 downto 0) := "1111111111111111111111111111111100000000001111111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";

    signal t_fu_24_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_reg_65 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln19_fu_30_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln19_reg_70 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln19_reg_70_pp0_iter1_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal mul_ln19_fu_37_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal mul_ln19_reg_75 : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln18_fu_20_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln19_fu_37_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln19_8_fu_43_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln19_fu_46_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_fu_51_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal t_9_fu_61_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal a_int_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                a_int_reg <= a;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= t_9_fu_61_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln19_reg_75 <= mul_ln19_fu_37_p2;
                t_reg_65 <= t_fu_24_p2;
                trunc_ln19_reg_70 <= trunc_ln19_fu_30_p1;
                trunc_ln19_reg_70_pp0_iter1_reg <= trunc_ln19_reg_70;
            end if;
        end if;
    end process;
    add_ln19_fu_46_p2 <= std_logic_vector(signed(sext_ln19_8_fu_43_p1) + signed(trunc_ln19_reg_70_pp0_iter1_reg));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(t_9_fu_61_p1, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= t_9_fu_61_p1;
        end if; 
    end process;

    mul_ln19_fu_37_p1 <= t_reg_65;
    mul_ln19_fu_37_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv55_7FFFFFFF801FFF) * signed(mul_ln19_fu_37_p1))), 55));
        sext_ln19_8_fu_43_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln19_reg_75),56));

        t_9_fu_61_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_51_p4),32));

    t_fu_24_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv32_3802001) * signed(trunc_ln18_fu_20_p1))), 32));
    tmp_fu_51_p4 <= add_ln19_fu_46_p2(55 downto 32);
    trunc_ln18_fu_20_p1 <= a_int_reg(32 - 1 downto 0);
    trunc_ln19_fu_30_p1 <= a_int_reg(56 - 1 downto 0);
end behav;
