// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_vec_coeffs_address0,
        v_vec_coeffs_ce0,
        v_vec_coeffs_q0,
        v_vec_coeffs_address1,
        v_vec_coeffs_ce1,
        v_vec_coeffs_we1,
        v_vec_coeffs_d1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v_vec_coeffs_address0;
output   v_vec_coeffs_ce0;
input  [31:0] v_vec_coeffs_q0;
output  [9:0] v_vec_coeffs_address1;
output   v_vec_coeffs_ce1;
output   v_vec_coeffs_we1;
output  [31:0] v_vec_coeffs_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v_vec_coeffs_ce0;
reg v_vec_coeffs_ce1;
reg v_vec_coeffs_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten_reg_75;
reg   [2:0] i_0_reg_86;
reg   [8:0] i_0_i_reg_97;
wire   [0:0] icmp_ln187_fu_108_p2;
reg   [0:0] icmp_ln187_reg_208;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln187_reg_208_pp0_iter1_reg;
wire   [10:0] add_ln187_fu_114_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln188_1_fu_140_p3;
reg   [2:0] select_ln188_1_reg_217;
reg   [9:0] v_vec_coeffs_addr_reg_222;
reg   [9:0] v_vec_coeffs_addr_reg_222_pp0_iter1_reg;
wire   [8:0] i_8_fu_175_p2;
reg   [31:0] v_vec_coeffs_load_reg_233;
reg    ap_enable_reg_pp0_iter1;
reg  signed [8:0] trunc_ln_reg_238;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] ap_phi_mux_i_0_phi_fu_90_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln33_2_fu_170_p1;
wire  signed [31:0] grp_fu_200_p3;
wire   [0:0] icmp_ln32_fu_126_p2;
wire   [2:0] i_fu_120_p2;
wire   [10:0] tmp_fu_148_p3;
wire   [8:0] select_ln188_fu_132_p3;
wire   [11:0] zext_ln33_1_fu_160_p1;
wire   [11:0] zext_ln33_fu_156_p1;
wire   [11:0] add_ln33_fu_164_p2;
wire   [31:0] add_ln36_fu_181_p2;
wire  signed [23:0] grp_fu_200_p1;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

pqcrystals_dilithlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pqcrystals_dilithlbW_U64(
    .din0(trunc_ln_reg_238),
    .din1(grp_fu_200_p1),
    .din2(v_vec_coeffs_load_reg_233),
    .dout(grp_fu_200_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_97 <= i_8_fu_175_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_97 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_reg_208 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_86 <= select_ln188_1_reg_217;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_86 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_75 <= add_ln187_fu_114_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_75 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln187_reg_208 <= icmp_ln187_fu_108_p2;
        icmp_ln187_reg_208_pp0_iter1_reg <= icmp_ln187_reg_208;
        v_vec_coeffs_addr_reg_222_pp0_iter1_reg <= v_vec_coeffs_addr_reg_222;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_fu_108_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln188_1_reg_217 <= select_ln188_1_fu_140_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_reg_208 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln_reg_238 <= {{add_ln36_fu_181_p2[31:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_fu_108_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_vec_coeffs_addr_reg_222 <= zext_ln33_2_fu_170_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln187_reg_208 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_vec_coeffs_load_reg_233 <= v_vec_coeffs_q0;
    end
end

always @ (*) begin
    if ((icmp_ln187_fu_108_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln187_reg_208 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_90_p4 = select_ln188_1_reg_217;
    end else begin
        ap_phi_mux_i_0_phi_fu_90_p4 = i_0_reg_86;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_vec_coeffs_ce0 = 1'b1;
    end else begin
        v_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v_vec_coeffs_ce1 = 1'b1;
    end else begin
        v_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln187_reg_208_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v_vec_coeffs_we1 = 1'b1;
    end else begin
        v_vec_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln187_fu_108_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln187_fu_108_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln187_fu_114_p2 = (indvar_flatten_reg_75 + 11'd1);

assign add_ln33_fu_164_p2 = (zext_ln33_1_fu_160_p1 + zext_ln33_fu_156_p1);

assign add_ln36_fu_181_p2 = (v_vec_coeffs_q0 + 32'd4194304);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_200_p1 = 32'd4286586879;

assign i_8_fu_175_p2 = (select_ln188_fu_132_p3 + 9'd1);

assign i_fu_120_p2 = (ap_phi_mux_i_0_phi_fu_90_p4 + 3'd1);

assign icmp_ln187_fu_108_p2 = ((indvar_flatten_reg_75 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_126_p2 = ((i_0_i_reg_97 == 9'd256) ? 1'b1 : 1'b0);

assign select_ln188_1_fu_140_p3 = ((icmp_ln32_fu_126_p2[0:0] === 1'b1) ? i_fu_120_p2 : ap_phi_mux_i_0_phi_fu_90_p4);

assign select_ln188_fu_132_p3 = ((icmp_ln32_fu_126_p2[0:0] === 1'b1) ? 9'd0 : i_0_i_reg_97);

assign tmp_fu_148_p3 = {{select_ln188_1_fu_140_p3}, {8'd0}};

assign v_vec_coeffs_address0 = zext_ln33_2_fu_170_p1;

assign v_vec_coeffs_address1 = v_vec_coeffs_addr_reg_222_pp0_iter1_reg;

assign v_vec_coeffs_d1 = grp_fu_200_p3;

assign zext_ln33_1_fu_160_p1 = select_ln188_fu_132_p3;

assign zext_ln33_2_fu_170_p1 = add_ln33_fu_164_p2;

assign zext_ln33_fu_156_p1 = tmp_fu_148_p3;

endmodule //pqcrystals_dilithium_3
