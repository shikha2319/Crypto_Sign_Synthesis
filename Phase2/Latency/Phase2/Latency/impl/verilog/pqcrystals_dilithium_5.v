// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_address0,
        r_ce0,
        r_we0,
        r_d0,
        r_address1,
        r_ce1,
        r_we1,
        r_d1,
        w1_vec_coeffs_address0,
        w1_vec_coeffs_ce0,
        w1_vec_coeffs_q0,
        w1_vec_coeffs_address1,
        w1_vec_coeffs_ce1,
        w1_vec_coeffs_q1
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] r_address0;
output   r_ce0;
output   r_we0;
output  [7:0] r_d0;
output  [12:0] r_address1;
output   r_ce1;
output   r_we1;
output  [7:0] r_d1;
output  [9:0] w1_vec_coeffs_address0;
output   w1_vec_coeffs_ce0;
input  [31:0] w1_vec_coeffs_q0;
output  [9:0] w1_vec_coeffs_address1;
output   w1_vec_coeffs_ce1;
input  [31:0] w1_vec_coeffs_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] r_address0;
reg r_ce0;
reg r_we0;
reg[7:0] r_d0;
reg r_ce1;
reg r_we1;
reg[9:0] w1_vec_coeffs_address0;
reg w1_vec_coeffs_ce0;
reg[9:0] w1_vec_coeffs_address1;
reg w1_vec_coeffs_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] i_fu_167_p2;
reg   [2:0] i_reg_464;
wire    ap_CS_fsm_state2;
wire  signed [11:0] sext_ln910_fu_207_p1;
reg  signed [11:0] sext_ln910_reg_469;
wire   [0:0] icmp_ln418_fu_161_p2;
wire   [8:0] zext_ln915_fu_211_p1;
reg   [8:0] zext_ln915_reg_476;
wire    ap_CS_fsm_state3;
wire   [6:0] i_6_fu_221_p2;
reg   [6:0] i_6_reg_484;
wire   [7:0] shl_ln2_fu_231_p3;
reg   [7:0] shl_ln2_reg_489;
wire   [0:0] icmp_ln915_fu_215_p2;
wire  signed [8:0] sub_ln916_fu_280_p2;
reg  signed [8:0] sub_ln916_reg_506;
wire    ap_CS_fsm_state4;
reg   [7:0] trunc_ln8_reg_512;
reg   [2:0] i_0_reg_138;
reg   [6:0] i_0_i_reg_150;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln916_1_fu_249_p1;
wire   [63:0] zext_ln917_fu_268_p1;
wire   [63:0] zext_ln916_2_fu_298_p1;
wire   [63:0] zext_ln919_fu_345_p1;
wire   [63:0] zext_ln921_fu_363_p1;
wire   [63:0] zext_ln918_fu_386_p1;
wire   [63:0] zext_ln920_fu_437_p1;
wire   [7:0] or_ln917_1_fu_315_p2;
wire   [7:0] or_ln919_1_fu_403_p2;
wire   [1:0] trunc_ln419_fu_173_p1;
wire   [9:0] shl_ln_fu_177_p3;
wire   [7:0] shl_ln419_1_fu_189_p3;
wire   [10:0] zext_ln419_fu_185_p1;
wire   [10:0] zext_ln419_1_fu_197_p1;
wire   [10:0] sub_ln419_fu_201_p2;
wire   [5:0] trunc_ln916_fu_227_p1;
wire   [10:0] tmp_6_fu_239_p4;
wire   [7:0] or_ln917_fu_254_p2;
wire   [10:0] tmp_7_fu_260_p3;
wire   [8:0] zext_ln916_fu_273_p1;
wire  signed [11:0] sext_ln916_fu_285_p1;
wire   [11:0] add_ln916_fu_289_p2;
wire  signed [13:0] sext_ln916_1_fu_294_p1;
wire   [1:0] trunc_ln917_fu_303_p1;
wire   [7:0] shl_ln3_fu_307_p3;
wire   [7:0] trunc_ln916_1_fu_276_p1;
wire   [7:0] or_ln919_fu_332_p2;
wire   [10:0] tmp_9_fu_337_p3;
wire   [7:0] or_ln921_fu_350_p2;
wire   [10:0] tmp_s_fu_355_p3;
wire   [8:0] add_ln918_fu_368_p2;
wire  signed [11:0] sext_ln918_fu_373_p1;
wire   [11:0] add_ln918_1_fu_377_p2;
wire  signed [13:0] sext_ln918_1_fu_382_p1;
wire   [3:0] trunc_ln919_fu_391_p1;
wire   [7:0] shl_ln4_fu_395_p3;
wire   [8:0] add_ln920_fu_419_p2;
wire  signed [11:0] sext_ln920_fu_424_p1;
wire   [11:0] add_ln920_1_fu_428_p2;
wire  signed [13:0] sext_ln920_1_fu_433_p1;
wire   [5:0] trunc_ln921_fu_442_p1;
wire   [7:0] shl_ln5_fu_446_p3;
wire   [7:0] trunc_ln9_fu_409_p4;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i_reg_150 <= i_6_reg_484;
    end else if (((icmp_ln418_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_reg_150 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln915_fu_215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_138 <= i_reg_464;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_138 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_6_reg_484 <= i_6_fu_221_p2;
        zext_ln915_reg_476[6 : 0] <= zext_ln915_fu_211_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_464 <= i_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln418_fu_161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln910_reg_469[11 : 6] <= sext_ln910_fu_207_p1[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln915_fu_215_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln2_reg_489[7 : 2] <= shl_ln2_fu_231_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_ln916_reg_506 <= sub_ln916_fu_280_p2;
        trunc_ln8_reg_512 <= {{w1_vec_coeffs_q1[9:2]}};
    end
end

always @ (*) begin
    if ((((icmp_ln418_fu_161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln418_fu_161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_address0 = zext_ln918_fu_386_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_address0 = zext_ln916_2_fu_298_p1;
    end else begin
        r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        r_ce0 = 1'b1;
    end else begin
        r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_ce1 = 1'b1;
    end else begin
        r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_d0 = or_ln919_1_fu_403_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_d0 = or_ln917_1_fu_315_p2;
    end else begin
        r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        r_we0 = 1'b1;
    end else begin
        r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_we1 = 1'b1;
    end else begin
        r_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        w1_vec_coeffs_address0 = zext_ln919_fu_345_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        w1_vec_coeffs_address0 = zext_ln916_1_fu_249_p1;
    end else begin
        w1_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        w1_vec_coeffs_address1 = zext_ln921_fu_363_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        w1_vec_coeffs_address1 = zext_ln917_fu_268_p1;
    end else begin
        w1_vec_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w1_vec_coeffs_ce0 = 1'b1;
    end else begin
        w1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        w1_vec_coeffs_ce1 = 1'b1;
    end else begin
        w1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln418_fu_161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln915_fu_215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln916_fu_289_p2 = ($signed(sext_ln910_reg_469) + $signed(sext_ln916_fu_285_p1));

assign add_ln918_1_fu_377_p2 = ($signed(sext_ln910_reg_469) + $signed(sext_ln918_fu_373_p1));

assign add_ln918_fu_368_p2 = ($signed(9'd1) + $signed(sub_ln916_reg_506));

assign add_ln920_1_fu_428_p2 = ($signed(sext_ln910_reg_469) + $signed(sext_ln920_fu_424_p1));

assign add_ln920_fu_419_p2 = ($signed(9'd2) + $signed(sub_ln916_reg_506));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign i_6_fu_221_p2 = (i_0_i_reg_150 + 7'd1);

assign i_fu_167_p2 = (i_0_reg_138 + 3'd1);

assign icmp_ln418_fu_161_p2 = ((i_0_reg_138 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln915_fu_215_p2 = ((i_0_i_reg_150 == 7'd64) ? 1'b1 : 1'b0);

assign or_ln917_1_fu_315_p2 = (trunc_ln916_1_fu_276_p1 | shl_ln3_fu_307_p3);

assign or_ln917_fu_254_p2 = (shl_ln2_fu_231_p3 | 8'd1);

assign or_ln919_1_fu_403_p2 = (trunc_ln8_reg_512 | shl_ln4_fu_395_p3);

assign or_ln919_fu_332_p2 = (shl_ln2_reg_489 | 8'd2);

assign or_ln921_fu_350_p2 = (shl_ln2_reg_489 | 8'd3);

assign r_address1 = zext_ln920_fu_437_p1;

assign r_d1 = (trunc_ln9_fu_409_p4 | shl_ln5_fu_446_p3);

assign sext_ln910_fu_207_p1 = $signed(sub_ln419_fu_201_p2);

assign sext_ln916_1_fu_294_p1 = $signed(add_ln916_fu_289_p2);

assign sext_ln916_fu_285_p1 = sub_ln916_fu_280_p2;

assign sext_ln918_1_fu_382_p1 = $signed(add_ln918_1_fu_377_p2);

assign sext_ln918_fu_373_p1 = $signed(add_ln918_fu_368_p2);

assign sext_ln920_1_fu_433_p1 = $signed(add_ln920_1_fu_428_p2);

assign sext_ln920_fu_424_p1 = $signed(add_ln920_fu_419_p2);

assign shl_ln2_fu_231_p3 = {{trunc_ln916_fu_227_p1}, {2'd0}};

assign shl_ln3_fu_307_p3 = {{trunc_ln917_fu_303_p1}, {6'd0}};

assign shl_ln419_1_fu_189_p3 = {{trunc_ln419_fu_173_p1}, {6'd0}};

assign shl_ln4_fu_395_p3 = {{trunc_ln919_fu_391_p1}, {4'd0}};

assign shl_ln5_fu_446_p3 = {{trunc_ln921_fu_442_p1}, {2'd0}};

assign shl_ln_fu_177_p3 = {{trunc_ln419_fu_173_p1}, {8'd0}};

assign sub_ln419_fu_201_p2 = (zext_ln419_fu_185_p1 - zext_ln419_1_fu_197_p1);

assign sub_ln916_fu_280_p2 = (zext_ln916_fu_273_p1 - zext_ln915_reg_476);

assign tmp_6_fu_239_p4 = {{{i_0_reg_138}, {trunc_ln916_fu_227_p1}}, {2'd0}};

assign tmp_7_fu_260_p3 = {{i_0_reg_138}, {or_ln917_fu_254_p2}};

assign tmp_9_fu_337_p3 = {{i_0_reg_138}, {or_ln919_fu_332_p2}};

assign tmp_s_fu_355_p3 = {{i_0_reg_138}, {or_ln921_fu_350_p2}};

assign trunc_ln419_fu_173_p1 = i_0_reg_138[1:0];

assign trunc_ln916_1_fu_276_p1 = w1_vec_coeffs_q0[7:0];

assign trunc_ln916_fu_227_p1 = i_0_i_reg_150[5:0];

assign trunc_ln917_fu_303_p1 = w1_vec_coeffs_q1[1:0];

assign trunc_ln919_fu_391_p1 = w1_vec_coeffs_q0[3:0];

assign trunc_ln921_fu_442_p1 = w1_vec_coeffs_q1[5:0];

assign trunc_ln9_fu_409_p4 = {{w1_vec_coeffs_q0[11:4]}};

assign zext_ln419_1_fu_197_p1 = shl_ln419_1_fu_189_p3;

assign zext_ln419_fu_185_p1 = shl_ln_fu_177_p3;

assign zext_ln915_fu_211_p1 = i_0_i_reg_150;

assign zext_ln916_1_fu_249_p1 = tmp_6_fu_239_p4;

assign zext_ln916_2_fu_298_p1 = $unsigned(sext_ln916_1_fu_294_p1);

assign zext_ln916_fu_273_p1 = shl_ln2_reg_489;

assign zext_ln917_fu_268_p1 = tmp_7_fu_260_p3;

assign zext_ln918_fu_386_p1 = $unsigned(sext_ln918_1_fu_382_p1);

assign zext_ln919_fu_345_p1 = tmp_9_fu_337_p3;

assign zext_ln920_fu_437_p1 = $unsigned(sext_ln920_1_fu_433_p1);

assign zext_ln921_fu_363_p1 = tmp_s_fu_355_p3;

always @ (posedge ap_clk) begin
    sext_ln910_reg_469[5:0] <= 6'b000000;
    zext_ln915_reg_476[8:7] <= 2'b00;
    shl_ln2_reg_489[1:0] <= 2'b00;
end

endmodule //pqcrystals_dilithium_5
