// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium_4_HH_
#define _pqcrystals_dilithium_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pqcrystals_dilithlbW.h"

namespace ap_rtl {

struct pqcrystals_dilithium_4 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_out< sc_logic > v_vec_coeffs_we0;
    sc_out< sc_lv<32> > v_vec_coeffs_d0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;


    // Module declarations
    pqcrystals_dilithium_4(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium_4);

    ~pqcrystals_dilithium_4();

    sc_trace_file* mVcdFile;

    pqcrystals_dilithlbW<1,1,9,24,32,32>* pqcrystals_dilithlbW_U56;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_77_p2;
    sc_signal< sc_lv<3> > i_reg_151;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > zext_ln28_fu_91_p1;
    sc_signal< sc_lv<12> > zext_ln28_reg_156;
    sc_signal< sc_lv<1> > icmp_ln187_fu_71_p2;
    sc_signal< sc_lv<9> > i_6_fu_101_p2;
    sc_signal< sc_lv<9> > i_6_reg_164;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > v_vec_coeffs_addr_reg_169;
    sc_signal< sc_lv<1> > icmp_ln32_fu_95_p2;
    sc_signal< sc_lv<32> > v_vec_coeffs_load_reg_174;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > trunc_ln_reg_179;
    sc_signal< sc_lv<3> > i_0_reg_49;
    sc_signal< sc_lv<9> > i_0_i_reg_60;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln33_1_fu_116_p1;
    sc_signal< sc_lv<32> > grp_fu_140_p3;
    sc_signal< sc_lv<11> > tmp_fu_83_p3;
    sc_signal< sc_lv<12> > zext_ln33_fu_107_p1;
    sc_signal< sc_lv<12> > add_ln33_fu_111_p2;
    sc_signal< sc_lv<32> > add_ln36_fu_121_p2;
    sc_signal< sc_lv<24> > grp_fu_140_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_400000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_FF801FFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln33_fu_111_p2();
    void thread_add_ln36_fu_121_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_140_p1();
    void thread_i_6_fu_101_p2();
    void thread_i_fu_77_p2();
    void thread_icmp_ln187_fu_71_p2();
    void thread_icmp_ln32_fu_95_p2();
    void thread_tmp_fu_83_p3();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_ce0();
    void thread_v_vec_coeffs_d0();
    void thread_v_vec_coeffs_we0();
    void thread_zext_ln28_fu_91_p1();
    void thread_zext_ln33_1_fu_116_p1();
    void thread_zext_ln33_fu_107_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
