// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium_9_HH_
#define _pqcrystals_dilithium_9_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pqcrystals_dilithium_9 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > v_vec_coeffs_address0;
    sc_out< sc_logic > v_vec_coeffs_ce0;
    sc_out< sc_logic > v_vec_coeffs_we0;
    sc_out< sc_lv<32> > v_vec_coeffs_d0;
    sc_in< sc_lv<32> > v_vec_coeffs_q0;


    // Module declarations
    pqcrystals_dilithium_9(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium_9);

    ~pqcrystals_dilithium_9();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_75_p2;
    sc_signal< sc_lv<3> > i_reg_145;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > zext_ln46_fu_89_p1;
    sc_signal< sc_lv<12> > zext_ln46_reg_150;
    sc_signal< sc_lv<1> > icmp_ln202_fu_69_p2;
    sc_signal< sc_lv<9> > i_2_fu_99_p2;
    sc_signal< sc_lv<9> > i_2_reg_158;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > v_vec_coeffs_addr_reg_163;
    sc_signal< sc_lv<1> > icmp_ln50_fu_93_p2;
    sc_signal< sc_lv<3> > i_0_reg_47;
    sc_signal< sc_lv<9> > i_0_i_reg_58;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln51_1_fu_114_p1;
    sc_signal< sc_lv<11> > tmp_fu_81_p3;
    sc_signal< sc_lv<12> > zext_ln51_fu_105_p1;
    sc_signal< sc_lv<12> > add_ln51_fu_109_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_119_p3;
    sc_signal< sc_lv<32> > select_ln51_fu_127_p3;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_7FE001;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln51_fu_109_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_2_fu_99_p2();
    void thread_i_fu_75_p2();
    void thread_icmp_ln202_fu_69_p2();
    void thread_icmp_ln50_fu_93_p2();
    void thread_select_ln51_fu_127_p3();
    void thread_tmp_1_fu_119_p3();
    void thread_tmp_fu_81_p3();
    void thread_v_vec_coeffs_address0();
    void thread_v_vec_coeffs_ce0();
    void thread_v_vec_coeffs_d0();
    void thread_v_vec_coeffs_we0();
    void thread_zext_ln46_fu_89_p1();
    void thread_zext_ln51_1_fu_114_p1();
    void thread_zext_ln51_fu_105_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
