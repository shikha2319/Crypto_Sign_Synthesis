// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_dilithium2_ref_HH_
#define _pqcrystals_dilithium2_ref_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pqcrystals_dilithium_20.h"

namespace ap_rtl {

struct pqcrystals_dilithium2_ref : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > sm_address0;
    sc_out< sc_logic > sm_ce0;
    sc_out< sc_logic > sm_we0;
    sc_out< sc_lv<8> > sm_d0;
    sc_in< sc_lv<8> > sm_q0;
    sc_out< sc_lv<13> > sm_address1;
    sc_out< sc_logic > sm_ce1;
    sc_out< sc_logic > sm_we1;
    sc_out< sc_lv<8> > sm_d1;
    sc_in< sc_lv<8> > sm_q1;
    sc_out< sc_lv<64> > smlen;
    sc_out< sc_logic > smlen_ap_vld;
    sc_out< sc_lv<12> > m_address0;
    sc_out< sc_logic > m_ce0;
    sc_in< sc_lv<8> > m_q0;
    sc_in< sc_lv<64> > mlen;
    sc_out< sc_lv<12> > sk_address0;
    sc_out< sc_logic > sk_ce0;
    sc_in< sc_lv<8> > sk_q0;
    sc_out< sc_lv<12> > sk_address1;
    sc_out< sc_logic > sk_ce1;
    sc_in< sc_lv<8> > sk_q1;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    pqcrystals_dilithium2_ref(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_dilithium2_ref);

    ~pqcrystals_dilithium2_ref();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pqcrystals_dilithium_20* grp_pqcrystals_dilithium_20_fu_89;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > add_ln213_fu_106_p2;
    sc_signal< sc_lv<13> > add_ln213_reg_173;
    sc_signal< sc_lv<14> > add_ln213_1_fu_116_p2;
    sc_signal< sc_lv<14> > add_ln213_1_reg_178;
    sc_signal< sc_lv<64> > i_fu_135_p2;
    sc_signal< sc_lv<64> > i_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln212_fu_130_p2;
    sc_signal< sc_lv<14> > sub_ln213_1_fu_151_p2;
    sc_signal< sc_lv<14> > sub_ln213_1_reg_196;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_ap_start;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_ap_done;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_ap_idle;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_ap_ready;
    sc_signal< sc_lv<13> > grp_pqcrystals_dilithium_20_fu_89_sig_address0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sig_ce0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sig_we0;
    sc_signal< sc_lv<8> > grp_pqcrystals_dilithium_20_fu_89_sig_d0;
    sc_signal< sc_lv<13> > grp_pqcrystals_dilithium_20_fu_89_sig_address1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sig_ce1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sig_we1;
    sc_signal< sc_lv<8> > grp_pqcrystals_dilithium_20_fu_89_sig_d1;
    sc_signal< sc_lv<12> > grp_pqcrystals_dilithium_20_fu_89_sk_address0;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sk_ce0;
    sc_signal< sc_lv<12> > grp_pqcrystals_dilithium_20_fu_89_sk_address1;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_sk_ce1;
    sc_signal< sc_lv<64> > i_0_reg_78;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_pqcrystals_dilithium_20_fu_89_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln213_fu_146_p1;
    sc_signal< sc_lv<64> > zext_ln213_1_fu_162_p1;
    sc_signal< sc_lv<13> > trunc_ln213_fu_102_p1;
    sc_signal< sc_lv<14> > trunc_ln213_1_fu_112_p1;
    sc_signal< sc_lv<13> > trunc_ln212_1_fu_126_p1;
    sc_signal< sc_lv<13> > sub_ln213_fu_141_p2;
    sc_signal< sc_lv<14> > trunc_ln212_fu_122_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<13> ap_const_lv13_1FFF;
    static const sc_lv<14> ap_const_lv14_973;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_974;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln213_1_fu_116_p2();
    void thread_add_ln213_fu_106_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_pqcrystals_dilithium_20_fu_89_ap_start();
    void thread_i_fu_135_p2();
    void thread_icmp_ln212_fu_130_p2();
    void thread_m_address0();
    void thread_m_ce0();
    void thread_sk_address0();
    void thread_sk_address1();
    void thread_sk_ce0();
    void thread_sk_ce1();
    void thread_sm_address0();
    void thread_sm_address1();
    void thread_sm_ce0();
    void thread_sm_ce1();
    void thread_sm_d0();
    void thread_sm_d1();
    void thread_sm_we0();
    void thread_sm_we1();
    void thread_smlen();
    void thread_smlen_ap_vld();
    void thread_sub_ln213_1_fu_151_p2();
    void thread_sub_ln213_fu_141_p2();
    void thread_trunc_ln212_1_fu_126_p1();
    void thread_trunc_ln212_fu_122_p1();
    void thread_trunc_ln213_1_fu_112_p1();
    void thread_trunc_ln213_fu_102_p1();
    void thread_zext_ln213_1_fu_162_p1();
    void thread_zext_ln213_fu_146_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
