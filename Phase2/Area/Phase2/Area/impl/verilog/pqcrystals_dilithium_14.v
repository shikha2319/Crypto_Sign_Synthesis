// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_14 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_coeffs_address0,
        c_coeffs_ce0,
        c_coeffs_we0,
        c_coeffs_d0,
        c_coeffs_q0,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] c_coeffs_address0;
output   c_coeffs_ce0;
output   c_coeffs_we0;
output  [31:0] c_coeffs_d0;
input  [31:0] c_coeffs_q0;
output  [12:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [12:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] c_coeffs_address0;
reg c_coeffs_ce0;
reg c_coeffs_we0;
reg[31:0] c_coeffs_d0;
reg[12:0] seed_address0;
reg seed_ce0;
reg[12:0] seed_address1;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_fu_590_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln416_fu_612_p2;
reg   [2:0] add_ln416_reg_1257;
wire    ap_CS_fsm_state3;
wire   [4:0] shl_ln_fu_622_p3;
reg   [4:0] shl_ln_reg_1262;
wire   [0:0] icmp_ln416_fu_606_p2;
reg   [4:0] state_s_addr_6_reg_1282;
reg   [7:0] seed_load_reg_1300;
wire    ap_CS_fsm_state4;
reg   [7:0] seed_load_1_reg_1305;
reg   [7:0] seed_load_2_reg_1320;
wire    ap_CS_fsm_state5;
reg   [7:0] seed_load_3_reg_1325;
reg   [7:0] seed_load_4_reg_1340;
wire    ap_CS_fsm_state6;
reg   [7:0] seed_load_5_reg_1345;
wire   [4:0] add_ln476_fu_747_p2;
reg   [4:0] add_ln476_reg_1363;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln476_fu_741_p2;
wire   [7:0] shl_ln5_fu_758_p3;
reg   [7:0] shl_ln5_reg_1373;
wire    ap_CS_fsm_state12;
reg   [7:0] trunc_ln48_1_reg_1383;
reg   [7:0] trunc_ln48_2_reg_1388;
reg   [7:0] trunc_ln48_3_reg_1393;
reg   [7:0] trunc_ln48_4_reg_1398;
reg   [7:0] trunc_ln48_5_reg_1403;
reg   [7:0] trunc_ln48_6_reg_1408;
wire   [3:0] i_45_fu_924_p2;
reg   [3:0] i_45_reg_1416;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln523_fu_918_p2;
wire   [63:0] signs_fu_961_p2;
wire    ap_CS_fsm_state17;
wire   [8:0] i_46_fu_973_p2;
wire    ap_CS_fsm_state18;
wire   [4:0] add_ln476_1_fu_1002_p2;
reg   [4:0] add_ln476_1_reg_1448;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln476_1_fu_996_p2;
wire   [7:0] shl_ln477_2_fu_1013_p3;
reg   [7:0] shl_ln477_2_reg_1458;
wire    ap_CS_fsm_state23;
reg   [7:0] trunc_ln48_9_reg_1468;
reg   [7:0] trunc_ln48_10_reg_1473;
reg   [7:0] trunc_ln48_11_reg_1478;
reg   [7:0] trunc_ln48_12_reg_1483;
reg   [7:0] trunc_ln48_13_reg_1488;
reg   [7:0] trunc_ln48_14_reg_1493;
wire   [31:0] pos_fu_1173_p2;
reg   [31:0] pos_reg_1498;
wire    ap_CS_fsm_state27;
reg   [7:0] c_coeffs_addr_1_reg_1512;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln537_fu_1188_p2;
wire   [0:0] trunc_ln540_fu_1199_p1;
reg   [0:0] trunc_ln540_reg_1517;
wire   [63:0] signs_3_fu_1213_p1;
reg   [63:0] signs_3_reg_1522;
wire   [8:0] i_47_fu_1222_p2;
reg   [8:0] i_47_reg_1527;
wire    ap_CS_fsm_state29;
reg   [7:0] buf_address0;
reg    buf_ce0;
reg    buf_we0;
reg   [7:0] buf_d0;
wire   [7:0] buf_q0;
reg   [7:0] buf_address1;
reg    buf_ce1;
reg    buf_we1;
reg   [7:0] buf_d1;
wire   [7:0] buf_q1;
reg   [4:0] state_s_address0;
reg    state_s_ce0;
reg    state_s_we0;
reg   [63:0] state_s_d0;
wire   [63:0] state_s_q0;
reg   [4:0] state_s_address1;
reg    state_s_ce1;
reg    state_s_we1;
reg   [63:0] state_s_d1;
wire   [63:0] state_s_q1;
wire    grp_KeccakF1600_StatePer_1_fu_577_ap_start;
wire    grp_KeccakF1600_StatePer_1_fu_577_ap_done;
wire    grp_KeccakF1600_StatePer_1_fu_577_ap_idle;
wire    grp_KeccakF1600_StatePer_1_fu_577_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_577_state_address0;
wire    grp_KeccakF1600_StatePer_1_fu_577_state_ce0;
wire    grp_KeccakF1600_StatePer_1_fu_577_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_577_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_1_fu_577_state_address1;
wire    grp_KeccakF1600_StatePer_1_fu_577_state_ce1;
wire    grp_KeccakF1600_StatePer_1_fu_577_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_1_fu_577_state_d1;
reg   [4:0] i_0_i_i_reg_438;
wire   [0:0] icmp_ln362_fu_584_p2;
reg   [2:0] i_3_i_i_reg_449;
wire    ap_CS_fsm_state7;
reg   [4:0] i_0_i_i12_0_reg_460;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
reg   [3:0] i_0_reg_472;
reg   [63:0] signs_0_reg_484;
reg   [8:0] i_1_reg_496;
wire   [0:0] icmp_ln527_fu_967_p2;
reg   [8:0] i_2_reg_507;
wire    ap_CS_fsm_state30;
reg   [31:0] pos_0_reg_519;
reg   [63:0] signs_1_reg_531;
reg   [31:0] pos_1_reg_542;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln529_fu_984_p2;
reg   [4:0] i_0_i_i8_0_reg_553;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state26;
reg   [31:0] pos_2_reg_565;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln531_fu_990_p2;
reg    grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln363_fu_596_p1;
wire   [63:0] zext_ln417_fu_630_p1;
wire   [63:0] zext_ln31_fu_641_p1;
wire   [63:0] zext_ln416_fu_601_p1;
wire   [63:0] zext_ln31_13_fu_651_p1;
wire   [63:0] zext_ln31_14_fu_661_p1;
wire   [63:0] zext_ln31_15_fu_671_p1;
wire   [63:0] zext_ln31_16_fu_681_p1;
wire   [63:0] zext_ln31_17_fu_691_p1;
wire   [63:0] zext_ln31_18_fu_701_p1;
wire   [63:0] zext_ln477_1_fu_753_p1;
wire   [63:0] zext_ln477_fu_766_p1;
wire   [63:0] zext_ln48_fu_793_p1;
wire   [63:0] zext_ln48_1_fu_863_p1;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln48_2_fu_873_p1;
wire   [63:0] zext_ln48_3_fu_883_p1;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln48_4_fu_893_p1;
wire   [63:0] zext_ln48_5_fu_903_p1;
wire   [63:0] zext_ln48_6_fu_913_p1;
wire   [63:0] zext_ln524_fu_930_p1;
wire   [63:0] zext_ln528_fu_979_p1;
wire   [63:0] zext_ln477_3_fu_1008_p1;
wire   [63:0] zext_ln477_2_fu_1021_p1;
wire   [63:0] zext_ln48_7_fu_1048_p1;
wire   [63:0] zext_ln48_8_fu_1118_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln48_9_fu_1128_p1;
wire   [63:0] zext_ln48_10_fu_1138_p1;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln48_11_fu_1148_p1;
wire   [63:0] zext_ln48_12_fu_1158_p1;
wire   [63:0] zext_ln48_13_fu_1168_p1;
wire   [63:0] zext_ln536_fu_1179_p1;
wire   [63:0] zext_ln539_fu_1194_p1;
wire   [63:0] zext_ln539_1_fu_1217_p1;
wire   [63:0] xor_ln417_fu_720_p2;
wire    ap_CS_fsm_state8;
wire   [63:0] xor_ln450_fu_727_p2;
wire   [63:0] xor_ln451_fu_734_p2;
wire   [7:0] trunc_ln48_fu_771_p1;
wire   [7:0] trunc_ln48_7_fu_1026_p1;
wire  signed [31:0] sext_ln540_fu_1241_p1;
wire   [1:0] trunc_ln417_fu_618_p1;
wire   [4:0] or_ln31_fu_635_p2;
wire   [4:0] or_ln31_1_fu_646_p2;
wire   [4:0] or_ln31_2_fu_656_p2;
wire   [4:0] or_ln31_3_fu_666_p2;
wire   [4:0] or_ln31_4_fu_676_p2;
wire   [4:0] or_ln31_5_fu_686_p2;
wire   [4:0] or_ln31_6_fu_696_p2;
wire   [63:0] r_7_i_fu_706_p9;
wire   [7:0] or_ln48_fu_787_p2;
wire   [7:0] or_ln48_1_fu_858_p2;
wire   [7:0] or_ln48_2_fu_868_p2;
wire   [7:0] or_ln48_3_fu_878_p2;
wire   [7:0] or_ln48_4_fu_888_p2;
wire   [7:0] or_ln48_5_fu_898_p2;
wire   [7:0] or_ln48_6_fu_908_p2;
wire   [2:0] trunc_ln524_fu_939_p1;
wire   [5:0] shl_ln6_fu_943_p3;
wire   [63:0] zext_ln524_1_fu_935_p1;
wire   [63:0] zext_ln524_2_fu_951_p1;
wire   [63:0] shl_ln524_fu_955_p2;
wire   [7:0] or_ln48_7_fu_1042_p2;
wire   [7:0] or_ln48_8_fu_1113_p2;
wire   [7:0] or_ln48_9_fu_1123_p2;
wire   [7:0] or_ln48_10_fu_1133_p2;
wire   [7:0] or_ln48_11_fu_1143_p2;
wire   [7:0] or_ln48_12_fu_1153_p2;
wire   [7:0] or_ln48_13_fu_1163_p2;
wire   [8:0] zext_ln536_1_fu_1184_p1;
wire   [62:0] signs_2_fu_1203_p4;
wire   [1:0] shl_ln7_fu_1228_p3;
wire   [1:0] sub_ln540_fu_1235_p2;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
#0 grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg = 1'b0;
end

pqcrystals_dilithncg #(
    .DataWidth( 8 ),
    .AddressRange( 136 ),
    .AddressWidth( 8 ))
buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_address0),
    .ce0(buf_ce0),
    .we0(buf_we0),
    .d0(buf_d0),
    .q0(buf_q0),
    .address1(buf_address1),
    .ce1(buf_ce1),
    .we1(buf_we1),
    .d1(buf_d1),
    .q1(buf_q1)
);

shake256_state_0_s #(
    .DataWidth( 64 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
state_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(state_s_address0),
    .ce0(state_s_ce0),
    .we0(state_s_we0),
    .d0(state_s_d0),
    .q0(state_s_q0),
    .address1(state_s_address1),
    .ce1(state_s_ce1),
    .we1(state_s_we1),
    .d1(state_s_d1),
    .q1(state_s_q1)
);

KeccakF1600_StatePer_1 grp_KeccakF1600_StatePer_1_fu_577(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_1_fu_577_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_1_fu_577_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_1_fu_577_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_1_fu_577_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_1_fu_577_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_1_fu_577_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_1_fu_577_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_1_fu_577_state_d0),
    .state_q0(state_s_q0),
    .state_address1(grp_KeccakF1600_StatePer_1_fu_577_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_1_fu_577_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_1_fu_577_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_1_fu_577_state_d1),
    .state_q1(state_s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln531_fu_990_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)))) begin
            grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_1_fu_577_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_0_i_i12_0_reg_460 <= add_ln476_reg_1363;
    end else if (((grp_KeccakF1600_StatePer_1_fu_577_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_i12_0_reg_460 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_0_i_i8_0_reg_553 <= add_ln476_1_reg_1448;
    end else if (((grp_KeccakF1600_StatePer_1_fu_577_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        i_0_i_i8_0_reg_553 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_i_reg_438 <= i_fu_590_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_438 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln476_fu_741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_0_reg_472 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_reg_472 <= i_45_reg_1416;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln523_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_1_reg_496 <= 9'd0;
    end else if (((icmp_ln527_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        i_1_reg_496 <= i_46_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln527_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_2_reg_507 <= 9'd217;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_2_reg_507 <= i_47_reg_1527;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_3_i_i_reg_449 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_3_i_i_reg_449 <= add_ln416_reg_1257;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln527_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        pos_0_reg_519 <= 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pos_0_reg_519 <= pos_reg_1498;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln529_fu_984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        pos_1_reg_542 <= pos_0_reg_519;
    end else if (((icmp_ln537_fu_1188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        pos_1_reg_542 <= pos_reg_1498;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln476_1_fu_996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        pos_2_reg_565 <= 32'd0;
    end else if (((icmp_ln531_fu_990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        pos_2_reg_565 <= pos_1_reg_542;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln476_fu_741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        signs_0_reg_484 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        signs_0_reg_484 <= signs_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln527_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        signs_1_reg_531 <= signs_0_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        signs_1_reg_531 <= signs_3_reg_1522;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln416_reg_1257 <= add_ln416_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln476_1_reg_1448 <= add_ln476_1_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln476_reg_1363 <= add_ln476_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln537_fu_1188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_addr_1_reg_1512 <= zext_ln539_fu_1194_p1;
        signs_3_reg_1522[62 : 0] <= signs_3_fu_1213_p1[62 : 0];
        trunc_ln540_reg_1517 <= trunc_ln540_fu_1199_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_45_reg_1416 <= i_45_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_47_reg_1527 <= i_47_fu_1222_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        pos_reg_1498 <= pos_fu_1173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_load_1_reg_1305 <= seed_q1;
        seed_load_reg_1300 <= seed_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_load_2_reg_1320 <= seed_q0;
        seed_load_3_reg_1325 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_load_4_reg_1340 <= seed_q0;
        seed_load_5_reg_1345 <= seed_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        shl_ln477_2_reg_1458[7 : 3] <= shl_ln477_2_fu_1013_p3[7 : 3];
        trunc_ln48_10_reg_1473 <= {{state_s_q0[31:24]}};
        trunc_ln48_11_reg_1478 <= {{state_s_q0[39:32]}};
        trunc_ln48_12_reg_1483 <= {{state_s_q0[47:40]}};
        trunc_ln48_13_reg_1488 <= {{state_s_q0[55:48]}};
        trunc_ln48_14_reg_1493 <= {{state_s_q0[63:56]}};
        trunc_ln48_9_reg_1468 <= {{state_s_q0[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        shl_ln5_reg_1373[7 : 3] <= shl_ln5_fu_758_p3[7 : 3];
        trunc_ln48_1_reg_1383 <= {{state_s_q1[23:16]}};
        trunc_ln48_2_reg_1388 <= {{state_s_q1[31:24]}};
        trunc_ln48_3_reg_1393 <= {{state_s_q1[39:32]}};
        trunc_ln48_4_reg_1398 <= {{state_s_q1[47:40]}};
        trunc_ln48_5_reg_1403 <= {{state_s_q1[55:48]}};
        trunc_ln48_6_reg_1408 <= {{state_s_q1[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_606_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln_reg_1262[4 : 3] <= shl_ln_fu_622_p3[4 : 3];
        state_s_addr_6_reg_1282[2 : 0] <= zext_ln416_fu_601_p1[2 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln529_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln529_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        buf_address0 = zext_ln48_13_fu_1168_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        buf_address0 = zext_ln48_11_fu_1148_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        buf_address0 = zext_ln48_9_fu_1128_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buf_address0 = zext_ln48_7_fu_1048_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_address0 = zext_ln524_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_address0 = zext_ln48_5_fu_903_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_address0 = zext_ln48_3_fu_883_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        buf_address0 = zext_ln48_1_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_address0 = zext_ln477_fu_766_p1;
    end else begin
        buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        buf_address1 = zext_ln536_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        buf_address1 = zext_ln48_12_fu_1158_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        buf_address1 = zext_ln48_10_fu_1138_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        buf_address1 = zext_ln48_8_fu_1118_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buf_address1 = zext_ln477_2_fu_1021_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_address1 = zext_ln48_6_fu_913_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_address1 = zext_ln48_4_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        buf_address1 = zext_ln48_2_fu_873_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_address1 = zext_ln48_fu_793_p1;
    end else begin
        buf_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12))) begin
        buf_ce0 = 1'b1;
    end else begin
        buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12))) begin
        buf_ce1 = 1'b1;
    end else begin
        buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        buf_d0 = trunc_ln48_14_reg_1493;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        buf_d0 = trunc_ln48_12_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        buf_d0 = trunc_ln48_10_reg_1473;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buf_d0 = {{state_s_q0[15:8]}};
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_d0 = trunc_ln48_5_reg_1403;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_d0 = trunc_ln48_3_reg_1393;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        buf_d0 = trunc_ln48_1_reg_1383;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_d0 = trunc_ln48_fu_771_p1;
    end else begin
        buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        buf_d1 = trunc_ln48_13_reg_1488;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        buf_d1 = trunc_ln48_11_reg_1478;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        buf_d1 = trunc_ln48_9_reg_1468;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        buf_d1 = trunc_ln48_7_fu_1026_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        buf_d1 = trunc_ln48_6_reg_1408;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_d1 = trunc_ln48_4_reg_1398;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        buf_d1 = trunc_ln48_2_reg_1388;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buf_d1 = {{state_s_q1[15:8]}};
    end else begin
        buf_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12))) begin
        buf_we0 = 1'b1;
    end else begin
        buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12))) begin
        buf_we1 = 1'b1;
    end else begin
        buf_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        c_coeffs_address0 = c_coeffs_addr_1_reg_1512;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        c_coeffs_address0 = zext_ln539_1_fu_1217_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_coeffs_address0 = zext_ln539_fu_1194_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_address0 = zext_ln528_fu_979_p1;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18))) begin
        c_coeffs_ce0 = 1'b1;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        c_coeffs_d0 = sext_ln540_fu_1241_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        c_coeffs_d0 = c_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c_coeffs_d0 = 32'd0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | ((icmp_ln527_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        c_coeffs_we0 = 1'b1;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address0 = zext_ln31_17_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address0 = zext_ln31_15_fu_671_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address0 = zext_ln31_13_fu_651_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address0 = zext_ln417_fu_630_p1;
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address1 = zext_ln31_18_fu_701_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seed_address1 = zext_ln31_16_fu_681_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        seed_address1 = zext_ln31_14_fu_661_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seed_address1 = zext_ln31_fu_641_p1;
    end else begin
        seed_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        seed_ce0 = 1'b1;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        seed_ce1 = 1'b1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        state_s_address0 = zext_ln477_3_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_address0 = state_s_addr_6_reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_s_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_address0 = zext_ln363_fu_596_p1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_address0 = grp_KeccakF1600_StatePer_1_fu_577_state_address0;
    end else begin
        state_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        state_s_address1 = zext_ln477_1_fu_753_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_s_address1 = state_s_addr_6_reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_s_address1 = 64'd16;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_address1 = grp_KeccakF1600_StatePer_1_fu_577_state_address1;
    end else begin
        state_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22))) begin
        state_s_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_ce0 = grp_KeccakF1600_StatePer_1_fu_577_state_ce0;
    end else begin
        state_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        state_s_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_ce1 = grp_KeccakF1600_StatePer_1_fu_577_state_ce1;
    end else begin
        state_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d0 = xor_ln451_fu_734_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_s_d0 = xor_ln417_fu_720_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_s_d0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_d0 = grp_KeccakF1600_StatePer_1_fu_577_state_d0;
    end else begin
        state_s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_d1 = xor_ln450_fu_727_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_d1 = grp_KeccakF1600_StatePer_1_fu_577_state_d1;
    end else begin
        state_s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((icmp_ln362_fu_584_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        state_s_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_we0 = grp_KeccakF1600_StatePer_1_fu_577_state_we0;
    end else begin
        state_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        state_s_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state10))) begin
        state_s_we1 = grp_KeccakF1600_StatePer_1_fu_577_state_we1;
    end else begin
        state_s_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln362_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln416_fu_606_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_577_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln476_fu_741_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln523_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln527_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln529_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln531_fu_990_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((grp_KeccakF1600_StatePer_1_fu_577_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln476_1_fu_996_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln537_fu_1188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln416_fu_612_p2 = (i_3_i_i_reg_449 + 3'd1);

assign add_ln476_1_fu_1002_p2 = (i_0_i_i8_0_reg_553 + 5'd1);

assign add_ln476_fu_747_p2 = (i_0_i_i12_0_reg_460 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_KeccakF1600_StatePer_1_fu_577_ap_start = grp_KeccakF1600_StatePer_1_fu_577_ap_start_reg;

assign i_45_fu_924_p2 = (i_0_reg_472 + 4'd1);

assign i_46_fu_973_p2 = (i_1_reg_496 + 9'd1);

assign i_47_fu_1222_p2 = (9'd1 + i_2_reg_507);

assign i_fu_590_p2 = (i_0_i_i_reg_438 + 5'd1);

assign icmp_ln362_fu_584_p2 = ((i_0_i_i_reg_438 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_606_p2 = ((i_3_i_i_reg_449 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln476_1_fu_996_p2 = ((i_0_i_i8_0_reg_553 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln476_fu_741_p2 = ((i_0_i_i12_0_reg_460 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln523_fu_918_p2 = ((i_0_reg_472 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln527_fu_967_p2 = ((i_1_reg_496 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln529_fu_984_p2 = ((i_2_reg_507 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln531_fu_990_p2 = ((pos_1_reg_542 > 32'd135) ? 1'b1 : 1'b0);

assign icmp_ln537_fu_1188_p2 = ((zext_ln536_1_fu_1184_p1 > i_2_reg_507) ? 1'b1 : 1'b0);

assign or_ln31_1_fu_646_p2 = (shl_ln_reg_1262 | 5'd2);

assign or_ln31_2_fu_656_p2 = (shl_ln_reg_1262 | 5'd3);

assign or_ln31_3_fu_666_p2 = (shl_ln_reg_1262 | 5'd4);

assign or_ln31_4_fu_676_p2 = (shl_ln_reg_1262 | 5'd5);

assign or_ln31_5_fu_686_p2 = (shl_ln_reg_1262 | 5'd6);

assign or_ln31_6_fu_696_p2 = (shl_ln_reg_1262 | 5'd7);

assign or_ln31_fu_635_p2 = (shl_ln_fu_622_p3 | 5'd1);

assign or_ln48_10_fu_1133_p2 = (shl_ln477_2_reg_1458 | 8'd4);

assign or_ln48_11_fu_1143_p2 = (shl_ln477_2_reg_1458 | 8'd5);

assign or_ln48_12_fu_1153_p2 = (shl_ln477_2_reg_1458 | 8'd6);

assign or_ln48_13_fu_1163_p2 = (shl_ln477_2_reg_1458 | 8'd7);

assign or_ln48_1_fu_858_p2 = (shl_ln5_reg_1373 | 8'd2);

assign or_ln48_2_fu_868_p2 = (shl_ln5_reg_1373 | 8'd3);

assign or_ln48_3_fu_878_p2 = (shl_ln5_reg_1373 | 8'd4);

assign or_ln48_4_fu_888_p2 = (shl_ln5_reg_1373 | 8'd5);

assign or_ln48_5_fu_898_p2 = (shl_ln5_reg_1373 | 8'd6);

assign or_ln48_6_fu_908_p2 = (shl_ln5_reg_1373 | 8'd7);

assign or_ln48_7_fu_1042_p2 = (shl_ln477_2_fu_1013_p3 | 8'd1);

assign or_ln48_8_fu_1113_p2 = (shl_ln477_2_reg_1458 | 8'd2);

assign or_ln48_9_fu_1123_p2 = (shl_ln477_2_reg_1458 | 8'd3);

assign or_ln48_fu_787_p2 = (shl_ln5_fu_758_p3 | 8'd1);

assign pos_fu_1173_p2 = (pos_2_reg_565 + 32'd1);

assign r_7_i_fu_706_p9 = {{{{{{{{seed_q1}, {seed_q0}}, {seed_load_5_reg_1345}}, {seed_load_4_reg_1340}}, {seed_load_3_reg_1325}}, {seed_load_2_reg_1320}}, {seed_load_1_reg_1305}}, {seed_load_reg_1300}};

assign sext_ln540_fu_1241_p1 = $signed(sub_ln540_fu_1235_p2);

assign shl_ln477_2_fu_1013_p3 = {{i_0_i_i8_0_reg_553}, {3'd0}};

assign shl_ln524_fu_955_p2 = zext_ln524_1_fu_935_p1 << zext_ln524_2_fu_951_p1;

assign shl_ln5_fu_758_p3 = {{i_0_i_i12_0_reg_460}, {3'd0}};

assign shl_ln6_fu_943_p3 = {{trunc_ln524_fu_939_p1}, {3'd0}};

assign shl_ln7_fu_1228_p3 = {{trunc_ln540_reg_1517}, {1'd0}};

assign shl_ln_fu_622_p3 = {{trunc_ln417_fu_618_p1}, {3'd0}};

assign signs_2_fu_1203_p4 = {{signs_1_reg_531[63:1]}};

assign signs_3_fu_1213_p1 = signs_2_fu_1203_p4;

assign signs_fu_961_p2 = (signs_0_reg_484 | shl_ln524_fu_955_p2);

assign sub_ln540_fu_1235_p2 = (2'd1 - shl_ln7_fu_1228_p3);

assign trunc_ln417_fu_618_p1 = i_3_i_i_reg_449[1:0];

assign trunc_ln48_7_fu_1026_p1 = state_s_q0[7:0];

assign trunc_ln48_fu_771_p1 = state_s_q1[7:0];

assign trunc_ln524_fu_939_p1 = i_0_reg_472[2:0];

assign trunc_ln540_fu_1199_p1 = signs_1_reg_531[0:0];

assign xor_ln417_fu_720_p2 = (state_s_q1 ^ r_7_i_fu_706_p9);

assign xor_ln450_fu_727_p2 = (state_s_q0 ^ 64'd31);

assign xor_ln451_fu_734_p2 = (state_s_q1 ^ 64'd9223372036854775808);

assign zext_ln31_13_fu_651_p1 = or_ln31_1_fu_646_p2;

assign zext_ln31_14_fu_661_p1 = or_ln31_2_fu_656_p2;

assign zext_ln31_15_fu_671_p1 = or_ln31_3_fu_666_p2;

assign zext_ln31_16_fu_681_p1 = or_ln31_4_fu_676_p2;

assign zext_ln31_17_fu_691_p1 = or_ln31_5_fu_686_p2;

assign zext_ln31_18_fu_701_p1 = or_ln31_6_fu_696_p2;

assign zext_ln31_fu_641_p1 = or_ln31_fu_635_p2;

assign zext_ln363_fu_596_p1 = i_0_i_i_reg_438;

assign zext_ln416_fu_601_p1 = i_3_i_i_reg_449;

assign zext_ln417_fu_630_p1 = shl_ln_fu_622_p3;

assign zext_ln477_1_fu_753_p1 = i_0_i_i12_0_reg_460;

assign zext_ln477_2_fu_1021_p1 = shl_ln477_2_fu_1013_p3;

assign zext_ln477_3_fu_1008_p1 = i_0_i_i8_0_reg_553;

assign zext_ln477_fu_766_p1 = shl_ln5_fu_758_p3;

assign zext_ln48_10_fu_1138_p1 = or_ln48_10_fu_1133_p2;

assign zext_ln48_11_fu_1148_p1 = or_ln48_11_fu_1143_p2;

assign zext_ln48_12_fu_1158_p1 = or_ln48_12_fu_1153_p2;

assign zext_ln48_13_fu_1168_p1 = or_ln48_13_fu_1163_p2;

assign zext_ln48_1_fu_863_p1 = or_ln48_1_fu_858_p2;

assign zext_ln48_2_fu_873_p1 = or_ln48_2_fu_868_p2;

assign zext_ln48_3_fu_883_p1 = or_ln48_3_fu_878_p2;

assign zext_ln48_4_fu_893_p1 = or_ln48_4_fu_888_p2;

assign zext_ln48_5_fu_903_p1 = or_ln48_5_fu_898_p2;

assign zext_ln48_6_fu_913_p1 = or_ln48_6_fu_908_p2;

assign zext_ln48_7_fu_1048_p1 = or_ln48_7_fu_1042_p2;

assign zext_ln48_8_fu_1118_p1 = or_ln48_8_fu_1113_p2;

assign zext_ln48_9_fu_1128_p1 = or_ln48_9_fu_1123_p2;

assign zext_ln48_fu_793_p1 = or_ln48_fu_787_p2;

assign zext_ln524_1_fu_935_p1 = buf_q0;

assign zext_ln524_2_fu_951_p1 = shl_ln6_fu_943_p3;

assign zext_ln524_fu_930_p1 = i_0_reg_472;

assign zext_ln528_fu_979_p1 = i_1_reg_496;

assign zext_ln536_1_fu_1184_p1 = buf_q1;

assign zext_ln536_fu_1179_p1 = pos_2_reg_565;

assign zext_ln539_1_fu_1217_p1 = i_2_reg_507;

assign zext_ln539_fu_1194_p1 = buf_q1;

always @ (posedge ap_clk) begin
    shl_ln_reg_1262[2:0] <= 3'b000;
    state_s_addr_6_reg_1282[4:3] <= 2'b00;
    shl_ln5_reg_1373[2:0] <= 3'b000;
    shl_ln477_2_reg_1458[2:0] <= 3'b000;
    signs_3_reg_1522[63] <= 1'b0;
end

endmodule //pqcrystals_dilithium_14
