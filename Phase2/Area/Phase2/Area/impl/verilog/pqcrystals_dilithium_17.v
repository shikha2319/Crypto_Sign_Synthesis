// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_17 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_offset
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;
input  [31:0] a_q0;
input  [2:0] a_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] a_address0;
reg a_ce0;
reg a_we0;
reg[31:0] a_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] zetas_address0;
reg    zetas_ce0;
wire   [22:0] zetas_q0;
wire   [11:0] zext_ln49_fu_134_p1;
reg   [11:0] zext_ln49_reg_369;
wire   [30:0] zext_ln54_fu_143_p1;
reg   [30:0] zext_ln54_reg_375;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln55_fu_153_p1;
reg   [31:0] zext_ln55_reg_384;
wire    ap_CS_fsm_state3;
wire   [31:0] k_fu_176_p2;
reg   [31:0] k_reg_392;
wire   [0:0] icmp_ln55_fu_167_p2;
wire   [28:0] zext_ln54_1_fu_197_p1;
wire   [31:0] zext_ln57_fu_206_p1;
reg   [31:0] zext_ln57_reg_407;
wire    ap_CS_fsm_state4;
wire   [30:0] zext_ln55_1_fu_232_p1;
reg   [30:0] zext_ln55_1_reg_412;
wire  signed [53:0] sext_ln57_fu_236_p1;
reg  signed [53:0] sext_ln57_reg_417;
reg   [9:0] a_addr11_reg_425;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln57_fu_240_p2;
reg   [9:0] a_addr_reg_430;
wire   [31:0] j_4_fu_283_p2;
reg   [31:0] j_4_reg_435;
wire   [30:0] add_ln55_fu_289_p2;
reg  signed [31:0] a_load_reg_445;
wire    ap_CS_fsm_state6;
wire  signed [53:0] mul_ln58_fu_300_p2;
reg  signed [53:0] mul_ln58_reg_450;
wire    ap_CS_fsm_state7;
wire  signed [31:0] trunc_ln18_fu_305_p1;
reg  signed [31:0] trunc_ln18_reg_455;
wire   [31:0] t_fu_309_p2;
reg   [31:0] t_reg_460;
wire    ap_CS_fsm_state8;
wire   [54:0] mul_ln19_fu_317_p2;
reg   [54:0] mul_ln19_reg_465;
wire    ap_CS_fsm_state9;
wire  signed [31:0] t_15_fu_345_p1;
reg  signed [31:0] t_15_reg_470;
wire    ap_CS_fsm_state10;
reg   [28:0] len_0_reg_93;
reg   [30:0] j_reg_105;
wire   [0:0] icmp_ln54_fu_147_p2;
reg   [31:0] j_0_reg_117;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln56_fu_182_p1;
wire   [63:0] zext_ln58_fu_264_p1;
wire   [63:0] zext_ln59_fu_278_p1;
reg   [31:0] k_2_fu_50;
wire   [31:0] sub_ln59_fu_349_p2;
wire    ap_CS_fsm_state11;
wire   [31:0] add_ln60_fu_356_p2;
wire   [10:0] tmp_fu_126_p3;
wire   [22:0] tmp_23_fu_157_p4;
wire   [27:0] tmp_24_fu_187_p4;
wire   [30:0] add_ln57_fu_201_p2;
wire   [0:0] empty_86_fu_210_p2;
wire   [29:0] trunc_ln55_fu_216_p1;
wire   [29:0] trunc_ln55_1_fu_220_p1;
wire   [29:0] start_fu_224_p3;
wire   [11:0] trunc_ln58_1_fu_249_p1;
wire   [11:0] trunc_ln58_fu_245_p1;
wire   [11:0] add_ln58_fu_253_p2;
wire   [11:0] add_ln58_1_fu_259_p2;
wire   [11:0] trunc_ln59_fu_269_p1;
wire   [11:0] add_ln59_fu_273_p2;
wire  signed [22:0] mul_ln58_fu_300_p0;
wire  signed [31:0] mul_ln58_fu_300_p1;
wire  signed [31:0] mul_ln19_fu_317_p1;
wire  signed [55:0] sext_ln58_1_fu_323_p1;
wire  signed [55:0] sext_ln19_8_fu_326_p1;
wire   [55:0] add_ln19_fu_329_p2;
wire   [23:0] trunc_ln_fu_335_p4;
reg   [11:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

pqcrystals_dilithg8j #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
zetas_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(zetas_address0),
    .ce0(zetas_ce0),
    .q0(zetas_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_117 <= j_4_reg_435;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_117 <= zext_ln55_reg_384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_105 <= 31'd0;
    end else if (((icmp_ln57_fu_240_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_reg_105 <= add_ln55_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_240_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k_2_fu_50 <= k_reg_392;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_2_fu_50 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                len_0_reg_93[7 : 0] <= zext_ln54_1_fu_197_p1[7 : 0];
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                len_0_reg_93[0] <= 1'b0;
        len_0_reg_93[1] <= 1'b0;
        len_0_reg_93[2] <= 1'b0;
        len_0_reg_93[3] <= 1'b0;
        len_0_reg_93[4] <= 1'b0;
        len_0_reg_93[5] <= 1'b0;
        len_0_reg_93[6] <= 1'b0;
        len_0_reg_93[7] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_240_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        a_addr11_reg_425 <= zext_ln58_fu_264_p1;
        a_addr_reg_430 <= zext_ln59_fu_278_p1;
        j_4_reg_435 <= j_4_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_load_reg_445 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_392 <= k_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mul_ln19_reg_465 <= mul_ln19_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln58_reg_450 <= mul_ln58_fu_300_p2;
        trunc_ln18_reg_455 <= trunc_ln18_fu_305_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sext_ln57_reg_417 <= sext_ln57_fu_236_p1;
        zext_ln55_1_reg_412[29 : 0] <= zext_ln55_1_fu_232_p1[29 : 0];
        zext_ln57_reg_407[30 : 0] <= zext_ln57_fu_206_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_15_reg_470 <= t_15_fu_345_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        t_reg_460 <= t_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        zext_ln49_reg_369[10 : 8] <= zext_ln49_fu_134_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln54_reg_375[7 : 0] <= zext_ln54_fu_143_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln55_reg_384[30 : 0] <= zext_ln55_fu_153_p1[30 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address0 = a_addr11_reg_425;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        a_address0 = a_addr_reg_430;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = zext_ln58_fu_264_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        a_d0 = add_ln60_fu_356_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_d0 = sub_ln59_fu_349_p2;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln54_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zetas_ce0 = 1'b1;
    end else begin
        zetas_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln54_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln55_fu_167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln57_fu_240_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_329_p2 = ($signed(sext_ln58_1_fu_323_p1) + $signed(sext_ln19_8_fu_326_p1));

assign add_ln55_fu_289_p2 = (zext_ln54_reg_375 + zext_ln55_1_reg_412);

assign add_ln57_fu_201_p2 = (zext_ln54_reg_375 + j_reg_105);

assign add_ln58_1_fu_259_p2 = (zext_ln49_reg_369 + add_ln58_fu_253_p2);

assign add_ln58_fu_253_p2 = (trunc_ln58_1_fu_249_p1 + trunc_ln58_fu_245_p1);

assign add_ln59_fu_273_p2 = (zext_ln49_reg_369 + trunc_ln59_fu_269_p1);

assign add_ln60_fu_356_p2 = ($signed(t_15_reg_470) + $signed(a_q0));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_86_fu_210_p2 = ((j_reg_105 > add_ln57_fu_201_p2) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_147_p2 = ((len_0_reg_93 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_167_p2 = ((tmp_23_fu_157_p4 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_240_p2 = ((j_0_reg_117 < zext_ln57_reg_407) ? 1'b1 : 1'b0);

assign j_4_fu_283_p2 = (32'd1 + j_0_reg_117);

assign k_fu_176_p2 = (32'd1 + k_2_fu_50);

assign mul_ln19_fu_317_p1 = t_reg_460;

assign mul_ln19_fu_317_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_fu_317_p1));

assign mul_ln58_fu_300_p0 = sext_ln57_reg_417;

assign mul_ln58_fu_300_p1 = a_load_reg_445;

assign mul_ln58_fu_300_p2 = ($signed(mul_ln58_fu_300_p0) * $signed(mul_ln58_fu_300_p1));

assign sext_ln19_8_fu_326_p1 = $signed(mul_ln19_reg_465);

assign sext_ln57_fu_236_p1 = $signed(zetas_q0);

assign sext_ln58_1_fu_323_p1 = mul_ln58_reg_450;

assign start_fu_224_p3 = ((empty_86_fu_210_p2[0:0] === 1'b1) ? trunc_ln55_fu_216_p1 : trunc_ln55_1_fu_220_p1);

assign sub_ln59_fu_349_p2 = ($signed(a_q0) - $signed(t_15_fu_345_p1));

assign t_15_fu_345_p1 = $signed(trunc_ln_fu_335_p4);

assign t_fu_309_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_reg_455));

assign tmp_23_fu_157_p4 = {{j_reg_105[30:8]}};

assign tmp_24_fu_187_p4 = {{len_0_reg_93[28:1]}};

assign tmp_fu_126_p3 = {{a_offset}, {8'd0}};

assign trunc_ln18_fu_305_p1 = mul_ln58_fu_300_p2[31:0];

assign trunc_ln55_1_fu_220_p1 = add_ln57_fu_201_p2[29:0];

assign trunc_ln55_fu_216_p1 = j_reg_105[29:0];

assign trunc_ln58_1_fu_249_p1 = len_0_reg_93[11:0];

assign trunc_ln58_fu_245_p1 = j_0_reg_117[11:0];

assign trunc_ln59_fu_269_p1 = j_0_reg_117[11:0];

assign trunc_ln_fu_335_p4 = {{add_ln19_fu_329_p2[55:32]}};

assign zetas_address0 = zext_ln56_fu_182_p1;

assign zext_ln49_fu_134_p1 = tmp_fu_126_p3;

assign zext_ln54_1_fu_197_p1 = tmp_24_fu_187_p4;

assign zext_ln54_fu_143_p1 = len_0_reg_93;

assign zext_ln55_1_fu_232_p1 = start_fu_224_p3;

assign zext_ln55_fu_153_p1 = j_reg_105;

assign zext_ln56_fu_182_p1 = k_fu_176_p2;

assign zext_ln57_fu_206_p1 = add_ln57_fu_201_p2;

assign zext_ln58_fu_264_p1 = add_ln58_1_fu_259_p2;

assign zext_ln59_fu_278_p1 = add_ln59_fu_273_p2;

always @ (posedge ap_clk) begin
    zext_ln49_reg_369[7:0] <= 8'b00000000;
    zext_ln49_reg_369[11] <= 1'b0;
    zext_ln54_reg_375[30:8] <= 23'b00000000000000000000000;
    zext_ln55_reg_384[31] <= 1'b0;
    zext_ln57_reg_407[31] <= 1'b0;
    zext_ln55_1_reg_412[30] <= 1'b0;
    len_0_reg_93[28:8] <= 21'b000000000000000000000;
end

endmodule //pqcrystals_dilithium_17
