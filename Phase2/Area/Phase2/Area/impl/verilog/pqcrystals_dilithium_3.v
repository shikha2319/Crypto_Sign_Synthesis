// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w_coeffs_address0,
        w_coeffs_ce0,
        w_coeffs_we0,
        w_coeffs_d0,
        w_coeffs_q0,
        w_coeffs_offset,
        u_vec_coeffs_address0,
        u_vec_coeffs_ce0,
        u_vec_coeffs_q0,
        v_vec_coeffs_address0,
        v_vec_coeffs_ce0,
        v_vec_coeffs_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] w_coeffs_address0;
output   w_coeffs_ce0;
output   w_coeffs_we0;
output  [31:0] w_coeffs_d0;
input  [31:0] w_coeffs_q0;
input  [2:0] w_coeffs_offset;
output  [11:0] u_vec_coeffs_address0;
output   u_vec_coeffs_ce0;
input  [22:0] u_vec_coeffs_q0;
output  [9:0] v_vec_coeffs_address0;
output   v_vec_coeffs_ce0;
input  [31:0] v_vec_coeffs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] w_coeffs_address0;
reg w_coeffs_ce0;
reg w_coeffs_we0;
reg[31:0] w_coeffs_d0;
reg[11:0] u_vec_coeffs_address0;
reg u_vec_coeffs_ce0;
reg[9:0] v_vec_coeffs_address0;
reg v_vec_coeffs_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [22:0] reg_193;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_197;
wire   [11:0] zext_ln181_3_fu_209_p1;
reg   [11:0] zext_ln181_3_reg_516;
wire   [5:0] zext_ln181_3_cast_fu_221_p1;
reg   [5:0] zext_ln181_3_cast_reg_522;
wire   [8:0] i_7_fu_231_p2;
reg   [8:0] i_7_reg_530;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln180_fu_225_p2;
wire  signed [54:0] mul_ln181_fu_264_p2;
reg  signed [54:0] mul_ln181_reg_545;
wire    ap_CS_fsm_state4;
wire  signed [31:0] trunc_ln18_fu_270_p1;
reg  signed [31:0] trunc_ln18_reg_550;
wire   [11:0] add_ln181_fu_278_p2;
reg   [11:0] add_ln181_reg_555;
wire    ap_CS_fsm_state5;
wire   [31:0] t_fu_283_p2;
reg   [31:0] t_reg_560;
wire   [54:0] mul_ln19_fu_291_p2;
reg   [54:0] mul_ln19_reg_565;
wire    ap_CS_fsm_state6;
wire   [13:0] tmp_15_cast_fu_343_p3;
reg   [13:0] tmp_15_cast_reg_573;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln137_fu_328_p2;
wire   [11:0] zext_ln176_fu_359_p1;
reg   [11:0] zext_ln176_reg_578;
wire   [8:0] i_8_fu_369_p2;
reg   [8:0] i_8_reg_586;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln180_1_fu_363_p2;
wire  signed [54:0] mul_ln181_1_fu_411_p2;
reg  signed [54:0] mul_ln181_1_reg_601;
wire    ap_CS_fsm_state11;
wire  signed [31:0] trunc_ln18_1_fu_417_p1;
reg  signed [31:0] trunc_ln18_1_reg_606;
wire   [31:0] t_5_fu_421_p2;
reg   [31:0] t_5_reg_611;
wire    ap_CS_fsm_state12;
wire   [54:0] mul_ln19_1_fu_429_p2;
reg   [54:0] mul_ln19_1_reg_616;
wire    ap_CS_fsm_state13;
wire   [8:0] i_9_fu_473_p2;
reg   [8:0] i_9_reg_624;
wire    ap_CS_fsm_state15;
reg   [9:0] w_coeffs_addr_1_reg_629;
wire   [0:0] icmp_ln87_fu_467_p2;
wire   [2:0] i_fu_498_p2;
reg   [7:0] t_coeffs_address0;
reg    t_coeffs_ce0;
reg    t_coeffs_we0;
wire   [31:0] t_coeffs_d0;
wire   [31:0] t_coeffs_q0;
reg   [8:0] i_0_i_reg_146;
wire    ap_CS_fsm_state7;
reg   [2:0] i_0_reg_158;
reg   [8:0] i_0_i1_reg_170;
wire    ap_CS_fsm_state14;
reg   [8:0] i_0_i20_reg_182;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln181_4_fu_251_p1;
wire   [63:0] zext_ln181_fu_237_p1;
wire   [63:0] zext_ln181_6_fu_297_p1;
wire   [63:0] zext_ln181_11_fu_388_p1;
wire   [63:0] zext_ln181_12_fu_398_p1;
wire   [63:0] zext_ln181_1_fu_435_p1;
wire   [63:0] zext_ln88_2_fu_493_p1;
wire   [63:0] zext_ln88_fu_479_p1;
wire  signed [31:0] t_4_fu_323_p1;
wire   [31:0] add_ln88_fu_504_p2;
wire   [10:0] tmp_fu_201_p3;
wire   [4:0] tmp_s_fu_213_p3;
wire   [12:0] tmp_1_fu_242_p4;
wire   [22:0] mul_ln181_fu_264_p0;
wire  signed [31:0] mul_ln181_fu_264_p1;
wire   [11:0] zext_ln181_5_fu_274_p1;
wire  signed [31:0] mul_ln19_fu_291_p1;
wire  signed [55:0] sext_ln181_2_fu_301_p1;
wire  signed [55:0] sext_ln19_2_fu_304_p1;
wire   [55:0] add_ln19_fu_307_p2;
wire   [23:0] tmp_3_fu_313_p4;
wire   [5:0] zext_ln181_8_fu_334_p1;
wire   [5:0] add_ln181_1_fu_338_p2;
wire   [10:0] tmp_2_fu_351_p3;
wire   [13:0] zext_ln181_10_fu_379_p1;
wire   [13:0] add_ln181_2_fu_383_p2;
wire   [11:0] zext_ln181_9_fu_375_p1;
wire   [11:0] add_ln181_3_fu_393_p2;
wire   [22:0] mul_ln181_1_fu_411_p0;
wire  signed [31:0] mul_ln181_1_fu_411_p1;
wire  signed [31:0] mul_ln19_1_fu_429_p1;
wire  signed [55:0] sext_ln181_4_fu_440_p1;
wire  signed [55:0] sext_ln19_5_fu_443_p1;
wire   [55:0] add_ln19_1_fu_446_p2;
wire   [23:0] tmp_4_fu_452_p4;
wire   [11:0] zext_ln88_1_fu_484_p1;
wire   [11:0] add_ln88_1_fu_488_p2;
reg   [15:0] ap_NS_fsm;
wire   [54:0] mul_ln181_1_fu_411_p00;
wire   [54:0] mul_ln181_fu_264_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
end

pqcrystals_dilithkbM #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
t_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_coeffs_address0),
    .ce0(t_coeffs_ce0),
    .we0(t_coeffs_we0),
    .d0(t_coeffs_d0),
    .q0(t_coeffs_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_0_i1_reg_170 <= i_8_reg_586;
    end else if (((icmp_ln137_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_i1_reg_170 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln180_1_fu_363_p2 == 1'd1))) begin
        i_0_i20_reg_182 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i20_reg_182 <= i_9_reg_624;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_i_reg_146 <= i_7_reg_530;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_146 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln180_fu_225_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_158 <= 3'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln87_fu_467_p2 == 1'd1))) begin
        i_0_reg_158 <= i_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln181_reg_555 <= add_ln181_fu_278_p2;
        t_reg_560 <= t_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_7_reg_530 <= i_7_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_8_reg_586 <= i_8_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_9_reg_624 <= i_9_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_ln181_1_reg_601 <= mul_ln181_1_fu_411_p2;
        trunc_ln18_1_reg_606 <= trunc_ln18_1_fu_417_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln181_reg_545 <= mul_ln181_fu_264_p2;
        trunc_ln18_reg_550 <= trunc_ln18_fu_270_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mul_ln19_1_reg_616 <= mul_ln19_1_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln19_reg_565 <= mul_ln19_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_193 <= u_vec_coeffs_q0;
        reg_197 <= v_vec_coeffs_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t_5_reg_611 <= t_5_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln137_fu_328_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_15_cast_reg_573[13 : 8] <= tmp_15_cast_fu_343_p3[13 : 8];
        zext_ln176_reg_578[10 : 8] <= zext_ln176_fu_359_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        w_coeffs_addr_1_reg_629 <= zext_ln88_2_fu_493_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln181_3_cast_reg_522[4 : 2] <= zext_ln181_3_cast_fu_221_p1[4 : 2];
        zext_ln181_3_reg_516[10 : 8] <= zext_ln181_3_fu_209_p1[10 : 8];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln137_fu_328_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln137_fu_328_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_coeffs_address0 = zext_ln88_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        t_coeffs_address0 = zext_ln181_1_fu_435_p1;
    end else begin
        t_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        t_coeffs_ce0 = 1'b1;
    end else begin
        t_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        t_coeffs_we0 = 1'b1;
    end else begin
        t_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        u_vec_coeffs_address0 = zext_ln181_11_fu_388_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        u_vec_coeffs_address0 = zext_ln181_4_fu_251_p1;
    end else begin
        u_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9))) begin
        u_vec_coeffs_ce0 = 1'b1;
    end else begin
        u_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v_vec_coeffs_address0 = zext_ln181_12_fu_398_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        v_vec_coeffs_address0 = zext_ln181_fu_237_p1;
    end else begin
        v_vec_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9))) begin
        v_vec_coeffs_ce0 = 1'b1;
    end else begin
        v_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        w_coeffs_address0 = w_coeffs_addr_1_reg_629;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_coeffs_address0 = zext_ln88_2_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        w_coeffs_address0 = zext_ln181_6_fu_297_p1;
    end else begin
        w_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state15))) begin
        w_coeffs_ce0 = 1'b1;
    end else begin
        w_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        w_coeffs_d0 = add_ln88_fu_504_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        w_coeffs_d0 = t_4_fu_323_p1;
    end else begin
        w_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7))) begin
        w_coeffs_we0 = 1'b1;
    end else begin
        w_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln180_fu_225_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln137_fu_328_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln180_1_fu_363_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln87_fu_467_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln181_1_fu_338_p2 = (zext_ln181_8_fu_334_p1 + zext_ln181_3_cast_reg_522);

assign add_ln181_2_fu_383_p2 = (tmp_15_cast_reg_573 + zext_ln181_10_fu_379_p1);

assign add_ln181_3_fu_393_p2 = (zext_ln176_reg_578 + zext_ln181_9_fu_375_p1);

assign add_ln181_fu_278_p2 = (zext_ln181_3_reg_516 + zext_ln181_5_fu_274_p1);

assign add_ln19_1_fu_446_p2 = ($signed(sext_ln181_4_fu_440_p1) + $signed(sext_ln19_5_fu_443_p1));

assign add_ln19_fu_307_p2 = ($signed(sext_ln181_2_fu_301_p1) + $signed(sext_ln19_2_fu_304_p1));

assign add_ln88_1_fu_488_p2 = (zext_ln181_3_reg_516 + zext_ln88_1_fu_484_p1);

assign add_ln88_fu_504_p2 = (w_coeffs_q0 + t_coeffs_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign i_7_fu_231_p2 = (i_0_i_reg_146 + 9'd1);

assign i_8_fu_369_p2 = (i_0_i1_reg_170 + 9'd1);

assign i_9_fu_473_p2 = (i_0_i20_reg_182 + 9'd1);

assign i_fu_498_p2 = (i_0_reg_158 + 3'd1);

assign icmp_ln137_fu_328_p2 = ((i_0_reg_158 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln180_1_fu_363_p2 = ((i_0_i1_reg_170 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_225_p2 = ((i_0_i_reg_146 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_467_p2 = ((i_0_i20_reg_182 == 9'd256) ? 1'b1 : 1'b0);

assign mul_ln181_1_fu_411_p0 = mul_ln181_1_fu_411_p00;

assign mul_ln181_1_fu_411_p00 = reg_193;

assign mul_ln181_1_fu_411_p1 = reg_197;

assign mul_ln181_1_fu_411_p2 = ($signed({{1'b0}, {mul_ln181_1_fu_411_p0}}) * $signed(mul_ln181_1_fu_411_p1));

assign mul_ln181_fu_264_p0 = mul_ln181_fu_264_p00;

assign mul_ln181_fu_264_p00 = reg_193;

assign mul_ln181_fu_264_p1 = reg_197;

assign mul_ln181_fu_264_p2 = ($signed({{1'b0}, {mul_ln181_fu_264_p0}}) * $signed(mul_ln181_fu_264_p1));

assign mul_ln19_1_fu_429_p1 = t_5_reg_611;

assign mul_ln19_1_fu_429_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_1_fu_429_p1));

assign mul_ln19_fu_291_p1 = t_reg_560;

assign mul_ln19_fu_291_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_fu_291_p1));

assign sext_ln181_2_fu_301_p1 = mul_ln181_reg_545;

assign sext_ln181_4_fu_440_p1 = mul_ln181_1_reg_601;

assign sext_ln19_2_fu_304_p1 = $signed(mul_ln19_reg_565);

assign sext_ln19_5_fu_443_p1 = $signed(mul_ln19_1_reg_616);

assign t_4_fu_323_p1 = $signed(tmp_3_fu_313_p4);

assign t_5_fu_421_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_1_reg_606));

assign t_coeffs_d0 = $signed(tmp_4_fu_452_p4);

assign t_fu_283_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_reg_550));

assign tmp_15_cast_fu_343_p3 = {{add_ln181_1_fu_338_p2}, {8'd0}};

assign tmp_1_fu_242_p4 = {{{w_coeffs_offset}, {1'd0}}, {i_0_i_reg_146}};

assign tmp_2_fu_351_p3 = {{i_0_reg_158}, {8'd0}};

assign tmp_3_fu_313_p4 = {{add_ln19_fu_307_p2[55:32]}};

assign tmp_4_fu_452_p4 = {{add_ln19_1_fu_446_p2[55:32]}};

assign tmp_fu_201_p3 = {{w_coeffs_offset}, {8'd0}};

assign tmp_s_fu_213_p3 = {{w_coeffs_offset}, {2'd0}};

assign trunc_ln18_1_fu_417_p1 = mul_ln181_1_fu_411_p2[31:0];

assign trunc_ln18_fu_270_p1 = mul_ln181_fu_264_p2[31:0];

assign zext_ln176_fu_359_p1 = tmp_2_fu_351_p3;

assign zext_ln181_10_fu_379_p1 = i_0_i1_reg_170;

assign zext_ln181_11_fu_388_p1 = add_ln181_2_fu_383_p2;

assign zext_ln181_12_fu_398_p1 = add_ln181_3_fu_393_p2;

assign zext_ln181_1_fu_435_p1 = i_0_i1_reg_170;

assign zext_ln181_3_cast_fu_221_p1 = tmp_s_fu_213_p3;

assign zext_ln181_3_fu_209_p1 = tmp_fu_201_p3;

assign zext_ln181_4_fu_251_p1 = tmp_1_fu_242_p4;

assign zext_ln181_5_fu_274_p1 = i_0_i_reg_146;

assign zext_ln181_6_fu_297_p1 = add_ln181_reg_555;

assign zext_ln181_8_fu_334_p1 = i_0_reg_158;

assign zext_ln181_9_fu_375_p1 = i_0_i1_reg_170;

assign zext_ln181_fu_237_p1 = i_0_i_reg_146;

assign zext_ln88_1_fu_484_p1 = i_0_i20_reg_182;

assign zext_ln88_2_fu_493_p1 = add_ln88_1_fu_488_p2;

assign zext_ln88_fu_479_p1 = i_0_i20_reg_182;

always @ (posedge ap_clk) begin
    zext_ln181_3_reg_516[7:0] <= 8'b00000000;
    zext_ln181_3_reg_516[11] <= 1'b0;
    zext_ln181_3_cast_reg_522[1:0] <= 2'b00;
    zext_ln181_3_cast_reg_522[5] <= 1'b0;
    tmp_15_cast_reg_573[7:0] <= 8'b00000000;
    zext_ln176_reg_578[7:0] <= 8'b00000000;
    zext_ln176_reg_578[11] <= 1'b0;
end

endmodule //pqcrystals_dilithium_3
