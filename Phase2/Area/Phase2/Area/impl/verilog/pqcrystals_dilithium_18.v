// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium_18 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_we0,
        a_d0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        a_offset
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;
input  [31:0] a_q0;
output  [9:0] a_address1;
output   a_ce1;
input  [31:0] a_q1;
input  [2:0] a_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] a_address0;
reg a_ce0;
reg a_we0;
reg[31:0] a_d0;
reg[9:0] a_address1;
reg a_ce1;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] zetas_address0;
reg    zetas_ce0;
wire   [22:0] zetas_q0;
reg   [31:0] reg_158;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state14;
wire   [11:0] zext_ln77_fu_171_p1;
reg   [11:0] zext_ln77_reg_490;
wire   [9:0] zext_ln83_1_fu_180_p1;
reg   [9:0] zext_ln83_1_reg_497;
wire    ap_CS_fsm_state2;
wire   [31:0] zext_ln84_fu_192_p1;
reg   [31:0] zext_ln84_reg_506;
wire    ap_CS_fsm_state3;
wire   [31:0] k_fu_215_p2;
reg   [31:0] k_reg_514;
wire   [0:0] icmp_ln84_fu_206_p2;
wire   [8:0] len_fu_226_p2;
wire   [31:0] zext_ln86_fu_243_p1;
reg   [31:0] zext_ln86_reg_529;
wire    ap_CS_fsm_state4;
wire   [9:0] zext_ln84_1_fu_271_p1;
reg   [9:0] zext_ln84_1_reg_534;
wire  signed [53:0] sext_ln86_fu_275_p1;
reg  signed [53:0] sext_ln86_reg_539;
reg   [9:0] a_addr_reg_547;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln86_fu_279_p2;
reg   [9:0] a_addr_2_reg_552;
wire   [31:0] j_3_fu_322_p2;
reg   [31:0] j_3_reg_558;
wire   [9:0] add_ln84_fu_328_p2;
wire   [31:0] sub_ln89_fu_343_p2;
reg   [31:0] sub_ln89_reg_568;
wire    ap_CS_fsm_state8;
wire  signed [53:0] mul_ln90_fu_352_p2;
reg  signed [53:0] mul_ln90_reg_573;
wire    ap_CS_fsm_state9;
wire  signed [31:0] trunc_ln18_2_fu_357_p1;
reg  signed [31:0] trunc_ln18_2_reg_578;
wire   [31:0] t_13_fu_361_p2;
reg   [31:0] t_13_reg_583;
wire    ap_CS_fsm_state10;
wire   [54:0] mul_ln19_2_fu_369_p2;
reg   [54:0] mul_ln19_2_reg_588;
wire    ap_CS_fsm_state11;
wire   [8:0] j_2_fu_408_p2;
reg   [8:0] j_2_reg_596;
wire    ap_CS_fsm_state13;
reg   [9:0] a_addr_1_reg_601;
wire   [0:0] icmp_ln95_fu_402_p2;
wire  signed [48:0] mul_ln96_fu_432_p2;
reg  signed [48:0] mul_ln96_reg_607;
wire    ap_CS_fsm_state15;
wire  signed [31:0] trunc_ln18_fu_438_p1;
reg  signed [31:0] trunc_ln18_reg_612;
wire   [31:0] t_11_fu_442_p2;
reg   [31:0] t_11_reg_617;
wire    ap_CS_fsm_state16;
wire   [54:0] mul_ln19_fu_450_p2;
reg   [54:0] mul_ln19_reg_622;
wire    ap_CS_fsm_state17;
reg   [8:0] len_0_reg_114;
reg   [9:0] j_reg_126;
wire   [0:0] tmp_21_fu_184_p3;
reg   [31:0] j_0_reg_138;
wire    ap_CS_fsm_state12;
reg   [8:0] j_1_reg_147;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln85_fu_221_p1;
wire   [63:0] zext_ln87_fu_293_p1;
wire   [63:0] zext_ln88_6_fu_317_p1;
wire   [63:0] zext_ln96_1_fu_423_p1;
reg   [31:0] k_1_fu_58;
wire   [31:0] add_ln88_1_fu_336_p2;
wire    ap_CS_fsm_state7;
wire  signed [31:0] t_14_fu_397_p1;
wire  signed [31:0] t_12_fu_478_p1;
wire   [10:0] tmp_fu_163_p3;
wire   [1:0] tmp_22_fu_196_p4;
wire   [9:0] add_ln86_fu_238_p2;
wire   [8:0] trunc_ln84_fu_253_p1;
wire   [0:0] empty_84_fu_247_p2;
wire   [8:0] add_ln84_1_fu_257_p2;
wire   [8:0] start_fu_263_p3;
wire   [22:0] zeta_fu_232_p2;
wire   [11:0] trunc_ln87_fu_284_p1;
wire   [11:0] add_ln87_fu_288_p2;
wire   [11:0] zext_ln88_fu_302_p1;
wire   [11:0] trunc_ln88_fu_298_p1;
wire   [11:0] add_ln88_fu_306_p2;
wire   [11:0] add_ln88_2_fu_312_p2;
wire  signed [22:0] mul_ln90_fu_352_p0;
wire  signed [31:0] mul_ln90_fu_352_p1;
wire  signed [31:0] mul_ln19_2_fu_369_p1;
wire  signed [55:0] sext_ln90_1_fu_375_p1;
wire  signed [55:0] sext_ln19_8_fu_378_p1;
wire   [55:0] add_ln19_2_fu_381_p2;
wire   [23:0] trunc_ln19_1_fu_387_p4;
wire   [11:0] zext_ln96_fu_414_p1;
wire   [11:0] add_ln96_fu_418_p2;
wire  signed [31:0] sext_ln96_fu_428_p0;
wire  signed [31:0] mul_ln96_fu_432_p1;
wire  signed [31:0] mul_ln19_fu_450_p1;
wire  signed [55:0] sext_ln19_5_fu_459_p1;
wire  signed [55:0] sext_ln96_1_fu_456_p1;
wire   [55:0] add_ln19_fu_462_p2;
wire   [23:0] trunc_ln_fu_468_p4;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

pqcrystals_dilithg8j #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
zetas_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(zetas_address0),
    .ce0(zetas_ce0),
    .q0(zetas_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_138 <= j_3_reg_558;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_138 <= zext_ln84_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_21_fu_184_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_147 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j_1_reg_147 <= j_2_reg_596;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_21_fu_184_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_126 <= 10'd0;
    end else if (((icmp_ln86_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_reg_126 <= add_ln84_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k_1_fu_58 <= k_reg_514;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_1_fu_58 <= 32'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_206_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        len_0_reg_114 <= len_fu_226_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        len_0_reg_114 <= 9'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_158 <= a_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_158 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        a_addr_1_reg_601 <= zext_ln96_1_fu_423_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        a_addr_2_reg_552 <= zext_ln88_6_fu_317_p1;
        a_addr_reg_547 <= zext_ln87_fu_293_p1;
        j_3_reg_558 <= j_3_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_2_reg_596 <= j_2_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_206_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_514 <= k_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_ln19_2_reg_588 <= mul_ln19_2_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_ln19_reg_622 <= mul_ln19_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mul_ln90_reg_573 <= mul_ln90_fu_352_p2;
        trunc_ln18_2_reg_578 <= trunc_ln18_2_fu_357_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_ln96_reg_607 <= mul_ln96_fu_432_p2;
        trunc_ln18_reg_612 <= trunc_ln18_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sext_ln86_reg_539 <= sext_ln86_fu_275_p1;
        zext_ln84_1_reg_534[8 : 0] <= zext_ln84_1_fu_271_p1[8 : 0];
        zext_ln86_reg_529[9 : 0] <= zext_ln86_fu_243_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sub_ln89_reg_568 <= sub_ln89_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_11_reg_617 <= t_11_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_13_reg_583 <= t_13_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln77_reg_490[10 : 8] <= zext_ln77_fu_171_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln83_1_reg_497[8 : 0] <= zext_ln83_1_fu_180_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln84_reg_506[9 : 0] <= zext_ln84_fu_192_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        a_address0 = a_addr_1_reg_601;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_address0 = a_addr_2_reg_552;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = a_addr_reg_547;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = zext_ln87_fu_293_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        a_address1 = zext_ln96_1_fu_423_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address1 = a_addr_2_reg_552;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = zext_ln88_6_fu_317_p1;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        a_d0 = t_12_fu_478_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        a_d0 = t_14_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_d0 = add_ln88_1_fu_336_p2;
    end else begin
        a_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln95_fu_402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln95_fu_402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zetas_ce0 = 1'b1;
    end else begin
        zetas_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_21_fu_184_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln84_fu_206_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln86_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln95_fu_402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_2_fu_381_p2 = ($signed(sext_ln90_1_fu_375_p1) + $signed(sext_ln19_8_fu_378_p1));

assign add_ln19_fu_462_p2 = ($signed(sext_ln19_5_fu_459_p1) + $signed(sext_ln96_1_fu_456_p1));

assign add_ln84_1_fu_257_p2 = (trunc_ln84_fu_253_p1 + len_0_reg_114);

assign add_ln84_fu_328_p2 = (zext_ln84_1_reg_534 + zext_ln83_1_reg_497);

assign add_ln86_fu_238_p2 = (zext_ln83_1_reg_497 + j_reg_126);

assign add_ln87_fu_288_p2 = (zext_ln77_reg_490 + trunc_ln87_fu_284_p1);

assign add_ln88_1_fu_336_p2 = (a_q0 + a_q1);

assign add_ln88_2_fu_312_p2 = (zext_ln77_reg_490 + add_ln88_fu_306_p2);

assign add_ln88_fu_306_p2 = (zext_ln88_fu_302_p1 + trunc_ln88_fu_298_p1);

assign add_ln96_fu_418_p2 = (zext_ln96_fu_414_p1 + zext_ln77_reg_490);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_84_fu_247_p2 = ((j_reg_126 > add_ln86_fu_238_p2) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_206_p2 = ((tmp_22_fu_196_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_279_p2 = ((j_0_reg_138 < zext_ln86_reg_529) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_402_p2 = ((j_1_reg_147 == 9'd256) ? 1'b1 : 1'b0);

assign j_2_fu_408_p2 = (j_1_reg_147 + 9'd1);

assign j_3_fu_322_p2 = (32'd1 + j_0_reg_138);

assign k_fu_215_p2 = ($signed(32'd4294967295) + $signed(k_1_fu_58));

assign len_fu_226_p2 = len_0_reg_114 << 9'd1;

assign mul_ln19_2_fu_369_p1 = t_13_reg_583;

assign mul_ln19_2_fu_369_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_2_fu_369_p1));

assign mul_ln19_fu_450_p1 = t_11_reg_617;

assign mul_ln19_fu_450_p2 = ($signed(55'd36028797010583551) * $signed(mul_ln19_fu_450_p1));

assign mul_ln90_fu_352_p0 = sext_ln86_reg_539;

assign mul_ln90_fu_352_p1 = sub_ln89_reg_568;

assign mul_ln90_fu_352_p2 = ($signed(mul_ln90_fu_352_p0) * $signed(mul_ln90_fu_352_p1));

assign mul_ln96_fu_432_p1 = sext_ln96_fu_428_p0;

assign mul_ln96_fu_432_p2 = ($signed({{1'b0}, {49'd41978}}) * $signed(mul_ln96_fu_432_p1));

assign sext_ln19_5_fu_459_p1 = $signed(mul_ln19_reg_622);

assign sext_ln19_8_fu_378_p1 = $signed(mul_ln19_2_reg_588);

assign sext_ln86_fu_275_p1 = $signed(zeta_fu_232_p2);

assign sext_ln90_1_fu_375_p1 = mul_ln90_reg_573;

assign sext_ln96_1_fu_456_p1 = mul_ln96_reg_607;

assign sext_ln96_fu_428_p0 = reg_158;

assign start_fu_263_p3 = ((empty_84_fu_247_p2[0:0] === 1'b1) ? trunc_ln84_fu_253_p1 : add_ln84_1_fu_257_p2);

assign sub_ln89_fu_343_p2 = (reg_158 - a_q1);

assign t_11_fu_442_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_reg_612));

assign t_12_fu_478_p1 = $signed(trunc_ln_fu_468_p4);

assign t_13_fu_361_p2 = ($signed({{1'b0}, {32'd58728449}}) * $signed(trunc_ln18_2_reg_578));

assign t_14_fu_397_p1 = $signed(trunc_ln19_1_fu_387_p4);

assign tmp_21_fu_184_p3 = len_0_reg_114[32'd8];

assign tmp_22_fu_196_p4 = {{j_reg_126[9:8]}};

assign tmp_fu_163_p3 = {{a_offset}, {8'd0}};

assign trunc_ln18_2_fu_357_p1 = mul_ln90_fu_352_p2[31:0];

assign trunc_ln18_fu_438_p1 = mul_ln96_fu_432_p2[31:0];

assign trunc_ln19_1_fu_387_p4 = {{add_ln19_2_fu_381_p2[55:32]}};

assign trunc_ln84_fu_253_p1 = j_reg_126[8:0];

assign trunc_ln87_fu_284_p1 = j_0_reg_138[11:0];

assign trunc_ln88_fu_298_p1 = j_0_reg_138[11:0];

assign trunc_ln_fu_468_p4 = {{add_ln19_fu_462_p2[55:32]}};

assign zeta_fu_232_p2 = (23'd0 - zetas_q0);

assign zetas_address0 = zext_ln85_fu_221_p1;

assign zext_ln77_fu_171_p1 = tmp_fu_163_p3;

assign zext_ln83_1_fu_180_p1 = len_0_reg_114;

assign zext_ln84_1_fu_271_p1 = start_fu_263_p3;

assign zext_ln84_fu_192_p1 = j_reg_126;

assign zext_ln85_fu_221_p1 = k_fu_215_p2;

assign zext_ln86_fu_243_p1 = add_ln86_fu_238_p2;

assign zext_ln87_fu_293_p1 = add_ln87_fu_288_p2;

assign zext_ln88_6_fu_317_p1 = add_ln88_2_fu_312_p2;

assign zext_ln88_fu_302_p1 = len_0_reg_114;

assign zext_ln96_1_fu_423_p1 = add_ln96_fu_418_p2;

assign zext_ln96_fu_414_p1 = j_1_reg_147;

always @ (posedge ap_clk) begin
    zext_ln77_reg_490[7:0] <= 8'b00000000;
    zext_ln77_reg_490[11] <= 1'b0;
    zext_ln83_1_reg_497[9] <= 1'b0;
    zext_ln84_reg_506[31:10] <= 22'b0000000000000000000000;
    zext_ln86_reg_529[31:10] <= 22'b0000000000000000000000;
    zext_ln84_1_reg_534[9] <= 1'b0;
end

endmodule //pqcrystals_dilithium_18
