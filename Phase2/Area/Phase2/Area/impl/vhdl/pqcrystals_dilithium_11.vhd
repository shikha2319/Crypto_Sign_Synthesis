-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pqcrystals_dilithium_11 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    r_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    r_coeffs_ce0 : OUT STD_LOGIC;
    r_coeffs_we0 : OUT STD_LOGIC;
    r_coeffs_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_coeffs_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    r_coeffs_ce1 : OUT STD_LOGIC;
    r_coeffs_we1 : OUT STD_LOGIC;
    r_coeffs_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_coeffs_offset : IN STD_LOGIC_VECTOR (2 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    a_ce1 : OUT STD_LOGIC;
    a_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_offset : IN STD_LOGIC_VECTOR (32 downto 0) );
end;


architecture behav of pqcrystals_dilithium_11 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln599_fu_205_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln599_reg_661 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_fu_219_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_671 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln599_1_fu_225_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln599_1_reg_676 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln598_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln599_fu_241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln599_reg_682 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_269_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_reg_693 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_28_reg_703 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln18_reg_718 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_reg_723 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln604_fu_472_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln604_reg_728 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln19_reg_733 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_34_reg_738 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_reg_194 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln599_1_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln599_3_fu_284_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln600_1_fu_316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln601_fu_345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln604_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln601_2_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln602_1_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln603_1_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln604_2_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln605_1_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln606_1_fu_622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln608_fu_375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln609_fu_386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln610_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln611_fu_513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln612_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln613_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln614_fu_633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln615_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln599_1_fu_229_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln599_fu_237_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln598_fu_209_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln599_fu_247_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln599_fu_251_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln599_2_fu_261_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_276_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln_fu_289_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln600_fu_303_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_309_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln601_fu_331_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln601_fu_336_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln601_1_fu_340_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln604_fu_350_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln604_fu_355_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln604_1_fu_359_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln599_2_fu_265_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln608_fu_369_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln600_fu_299_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln609_fu_380_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln601_fu_391_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_395_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln601_fu_406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_411_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln17_fu_423_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln602_fu_437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_442_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln601_1_fu_402_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln610_fu_496_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln602_fu_433_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln611_fu_507_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln603_fu_521_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_526_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln1_fu_538_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln604_fu_548_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_553_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln603_fu_518_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln612_fu_565_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln604_1_fu_544_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln613_fu_576_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln605_fu_590_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_595_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln606_fu_610_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_615_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln605_fu_587_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln614_fu_627_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln606_fu_607_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln615_fu_638_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_0_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_0_reg_194 <= i_reg_671;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_194 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_671 <= i_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    shl_ln_reg_693(7 downto 3) <= shl_ln_fu_269_p3(7 downto 3);
                tmp_28_reg_703 <= a_q0(7 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln598_fu_213_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                sub_ln599_reg_682 <= sub_ln599_fu_241_p2;
                trunc_ln599_1_reg_676 <= trunc_ln599_1_fu_225_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_34_reg_738 <= a_q1(7 downto 5);
                tmp_reg_723 <= a_q0(7 downto 7);
                trunc_ln18_reg_718 <= a_q0(6 downto 4);
                trunc_ln19_reg_733 <= a_q1(4 downto 2);
                trunc_ln604_reg_728 <= trunc_ln604_fu_472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                trunc_ln599_reg_661 <= trunc_ln599_fu_205_p1;
            end if;
        end if;
    end process;
    shl_ln_reg_693(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln598_fu_213_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln598_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, zext_ln599_1_fu_256_p1, zext_ln601_fu_345_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_address0 <= zext_ln601_fu_345_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_address0 <= zext_ln599_1_fu_256_p1(12 - 1 downto 0);
        else 
            a_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    a_address1 <= zext_ln604_fu_364_p1(12 - 1 downto 0);

    a_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_ce1 <= ap_const_logic_1;
        else 
            a_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln599_fu_251_p2 <= std_logic_vector(unsigned(trunc_ln599_reg_661) + unsigned(sext_ln599_fu_247_p1));
    add_ln601_1_fu_340_p2 <= std_logic_vector(unsigned(trunc_ln599_reg_661) + unsigned(sext_ln601_fu_336_p1));
    add_ln601_fu_331_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(sub_ln599_reg_682));
    add_ln604_1_fu_359_p2 <= std_logic_vector(unsigned(trunc_ln599_reg_661) + unsigned(sext_ln604_fu_355_p1));
    add_ln604_fu_350_p2 <= std_logic_vector(unsigned(ap_const_lv8_2) + unsigned(sub_ln599_reg_682));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln598_fu_213_p2)
    begin
        if ((((icmp_ln598_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln598_fu_213_p2)
    begin
        if (((icmp_ln598_fu_213_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_219_p2 <= std_logic_vector(unsigned(i_0_reg_194) + unsigned(ap_const_lv6_1));
    icmp_ln598_fu_213_p2 <= "1" when (i_0_reg_194 = ap_const_lv6_20) else "0";
    or_ln1_fu_538_p3 <= (trunc_ln604_reg_728 & tmp_reg_723);
    or_ln600_fu_303_p2 <= (shl_ln_fu_269_p3 or ap_const_lv8_1);
    or_ln601_fu_406_p2 <= (shl_ln_reg_693 or ap_const_lv8_2);
    or_ln602_fu_437_p2 <= (shl_ln_reg_693 or ap_const_lv8_3);
    or_ln603_fu_521_p2 <= (shl_ln_reg_693 or ap_const_lv8_4);
    or_ln604_fu_548_p2 <= (shl_ln_reg_693 or ap_const_lv8_5);
    or_ln605_fu_590_p2 <= (shl_ln_reg_693 or ap_const_lv8_6);
    or_ln606_fu_610_p2 <= (shl_ln_reg_693 or ap_const_lv8_7);
    or_ln_fu_395_p3 <= (trunc_ln601_fu_391_p1 & tmp_28_reg_703);

    r_coeffs_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, zext_ln599_3_fu_284_p1, zext_ln601_2_fu_418_p1, zext_ln603_1_fu_533_p1, ap_CS_fsm_state5, zext_ln605_1_fu_602_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_coeffs_address0 <= zext_ln605_1_fu_602_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_coeffs_address0 <= zext_ln603_1_fu_533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_coeffs_address0 <= zext_ln601_2_fu_418_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_address0 <= zext_ln599_3_fu_284_p1(10 - 1 downto 0);
        else 
            r_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, zext_ln600_1_fu_316_p1, zext_ln602_1_fu_449_p1, ap_CS_fsm_state5, zext_ln604_2_fu_560_p1, zext_ln606_1_fu_622_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_coeffs_address1 <= zext_ln606_1_fu_622_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_coeffs_address1 <= zext_ln604_2_fu_560_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_coeffs_address1 <= zext_ln602_1_fu_449_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_address1 <= zext_ln600_1_fu_316_p1(10 - 1 downto 0);
        else 
            r_coeffs_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            r_coeffs_ce0 <= ap_const_logic_1;
        else 
            r_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_coeffs_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            r_coeffs_ce1 <= ap_const_logic_1;
        else 
            r_coeffs_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_coeffs_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5, sext_ln608_fu_375_p1, sext_ln610_fu_502_p1, sext_ln612_fu_571_p1, sext_ln614_fu_633_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_coeffs_d0 <= sext_ln614_fu_633_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_coeffs_d0 <= sext_ln612_fu_571_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_coeffs_d0 <= sext_ln610_fu_502_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_d0 <= sext_ln608_fu_375_p1;
        else 
            r_coeffs_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_d1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5, sext_ln609_fu_386_p1, sext_ln611_fu_513_p1, sext_ln613_fu_582_p1, sext_ln615_fu_644_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_coeffs_d1 <= sext_ln615_fu_644_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_coeffs_d1 <= sext_ln613_fu_582_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_coeffs_d1 <= sext_ln611_fu_513_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_d1 <= sext_ln609_fu_386_p1;
        else 
            r_coeffs_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            r_coeffs_we0 <= ap_const_logic_1;
        else 
            r_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_coeffs_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            r_coeffs_we1 <= ap_const_logic_1;
        else 
            r_coeffs_we1 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln599_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln599_fu_241_p2),13));

        sext_ln601_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln601_fu_331_p2),13));

        sext_ln604_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln604_fu_350_p2),13));

        sext_ln608_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln608_fu_369_p2),32));

        sext_ln609_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln609_fu_380_p2),32));

        sext_ln610_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln610_fu_496_p2),32));

        sext_ln611_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln611_fu_507_p2),32));

        sext_ln612_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln612_fu_565_p2),32));

        sext_ln613_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln613_fu_576_p2),32));

        sext_ln614_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln614_fu_627_p2),32));

        sext_ln615_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln615_fu_638_p2),32));

    shl_ln599_1_fu_229_p3 <= (trunc_ln599_1_fu_225_p1 & ap_const_lv2_0);
    shl_ln_fu_269_p3 <= (trunc_ln599_1_reg_676 & ap_const_lv3_0);
    sub_ln599_fu_241_p2 <= std_logic_vector(unsigned(zext_ln599_fu_237_p1) - unsigned(zext_ln598_fu_209_p1));
    sub_ln608_fu_369_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln599_2_fu_265_p1));
    sub_ln609_fu_380_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln600_fu_299_p1));
    sub_ln610_fu_496_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln601_1_fu_402_p1));
    sub_ln611_fu_507_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln602_fu_433_p1));
    sub_ln612_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln603_fu_518_p1));
    sub_ln613_fu_576_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln604_1_fu_544_p1));
    sub_ln614_fu_627_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln605_fu_587_p1));
    sub_ln615_fu_638_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(zext_ln606_fu_607_p1));
    tmp_27_fu_309_p3 <= (r_coeffs_offset & or_ln600_fu_303_p2);
    tmp_29_fu_411_p3 <= (r_coeffs_offset & or_ln601_fu_406_p2);
    tmp_30_fu_442_p3 <= (r_coeffs_offset & or_ln602_fu_437_p2);
    tmp_31_fu_526_p3 <= (r_coeffs_offset & or_ln603_fu_521_p2);
    tmp_32_fu_553_p3 <= (r_coeffs_offset & or_ln604_fu_548_p2);
    tmp_33_fu_595_p3 <= (r_coeffs_offset & or_ln605_fu_590_p2);
    tmp_35_fu_615_p3 <= (r_coeffs_offset & or_ln606_fu_610_p2);
    tmp_s_fu_276_p4 <= ((r_coeffs_offset & trunc_ln599_1_reg_676) & ap_const_lv3_0);
    trunc_ln17_fu_423_p4 <= a_q0(3 downto 1);
    trunc_ln599_1_fu_225_p1 <= i_0_reg_194(5 - 1 downto 0);
    trunc_ln599_2_fu_261_p1 <= a_q0(3 - 1 downto 0);
    trunc_ln599_fu_205_p1 <= a_offset(13 - 1 downto 0);
    trunc_ln601_fu_391_p1 <= a_q0(1 - 1 downto 0);
    trunc_ln604_fu_472_p1 <= a_q1(2 - 1 downto 0);
    trunc_ln_fu_289_p4 <= a_q0(5 downto 3);
    zext_ln598_fu_209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_194),8));
    zext_ln599_1_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln599_fu_251_p2),64));
    zext_ln599_2_fu_265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln599_2_fu_261_p1),4));
    zext_ln599_3_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_276_p4),64));
    zext_ln599_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln599_1_fu_229_p3),8));
    zext_ln600_1_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_309_p3),64));
    zext_ln600_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_289_p4),4));
    zext_ln601_1_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_395_p3),4));
    zext_ln601_2_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_411_p3),64));
    zext_ln601_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln601_1_fu_340_p2),64));
    zext_ln602_1_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_442_p3),64));
    zext_ln602_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln17_fu_423_p4),4));
    zext_ln603_1_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_526_p3),64));
    zext_ln603_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln18_reg_718),4));
    zext_ln604_1_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1_fu_538_p3),4));
    zext_ln604_2_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_553_p3),64));
    zext_ln604_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln604_1_fu_359_p2),64));
    zext_ln605_1_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_595_p3),64));
    zext_ln605_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln19_reg_733),4));
    zext_ln606_1_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_615_p3),64));
    zext_ln606_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_reg_738),4));
end behav;
