// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_polyveck_invntt_tomont_Pipeline_VITIS_LOOP_95_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln87,
        v_address0,
        v_ce0,
        v_we0,
        v_d0,
        v_address1,
        v_ce1,
        v_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [9:0] zext_ln87;
output  [9:0] v_address0;
output   v_ce0;
output   v_we0;
output  [31:0] v_d0;
output  [9:0] v_address1;
output   v_ce1;
input  [31:0] v_q1;

reg ap_idle;
reg v_ce0;
reg v_we0;
reg v_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln95_fu_79_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [9:0] v_addr_reg_180;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln96_2_fu_101_p1;
wire    ap_block_pp0_stage0;
reg   [8:0] j_fu_44;
wire   [8:0] add_ln95_fu_85_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_j_14;
wire   [9:0] zext_ln96_fu_91_p1;
wire   [9:0] add_ln96_fu_95_p2;
wire   [16:0] mul_ln96_fu_115_p1;
wire  signed [48:0] mul_ln96_fu_115_p2;
wire  signed [31:0] t_fu_129_p0;
wire   [26:0] t_fu_129_p1;
wire  signed [31:0] t_fu_129_p2;
wire  signed [23:0] mul_ln19_fu_139_p1;
wire   [54:0] mul_ln19_fu_139_p2;
wire  signed [55:0] sext_ln19_14_fu_145_p1;
wire  signed [55:0] sext_ln15_fu_121_p1;
wire   [55:0] add_ln19_fu_149_p2;
wire   [23:0] t_20_fu_155_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

pqcrystals_dilithium2_ref_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U225(
    .din0(v_q1),
    .din1(mul_ln96_fu_115_p1),
    .dout(mul_ln96_fu_115_p2)
);

pqcrystals_dilithium2_ref_mul_32s_27ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_32s_27ns_32_1_1_U226(
    .din0(t_fu_129_p0),
    .din1(t_fu_129_p1),
    .dout(t_fu_129_p2)
);

pqcrystals_dilithium2_ref_mul_32s_24s_55_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 55 ))
mul_32s_24s_55_1_1_U227(
    .din0(t_fu_129_p2),
    .din1(mul_ln19_fu_139_p1),
    .dout(mul_ln19_fu_139_p2)
);

pqcrystals_dilithium2_ref_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln95_fu_79_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_44 <= add_ln95_fu_85_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_44 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_addr_reg_180 <= zext_ln96_2_fu_101_p1;
    end
end

always @ (*) begin
    if (((icmp_ln95_fu_79_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_14 = 9'd0;
    end else begin
        ap_sig_allocacmp_j_14 = j_fu_44;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_ce0 = 1'b1;
    end else begin
        v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_ce1 = 1'b1;
    end else begin
        v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_we0 = 1'b1;
    end else begin
        v_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_149_p2 = ($signed(sext_ln19_14_fu_145_p1) + $signed(sext_ln15_fu_121_p1));

assign add_ln95_fu_85_p2 = (ap_sig_allocacmp_j_14 + 9'd1);

assign add_ln96_fu_95_p2 = (zext_ln87 + zext_ln96_fu_91_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln95_fu_79_p2 = ((ap_sig_allocacmp_j_14 == 9'd256) ? 1'b1 : 1'b0);

assign mul_ln19_fu_139_p1 = 55'd36028797010583551;

assign mul_ln96_fu_115_p1 = 49'd41978;

assign sext_ln15_fu_121_p1 = mul_ln96_fu_115_p2;

assign sext_ln19_14_fu_145_p1 = $signed(mul_ln19_fu_139_p2);

assign t_20_fu_155_p4 = {{add_ln19_fu_149_p2[55:32]}};

assign t_fu_129_p0 = mul_ln96_fu_115_p2[31:0];

assign t_fu_129_p1 = 32'd58728449;

assign v_address0 = v_addr_reg_180;

assign v_address1 = zext_ln96_2_fu_101_p1;

assign v_d0 = $signed(t_20_fu_155_p4);

assign zext_ln96_2_fu_101_p1 = add_ln96_fu_95_p2;

assign zext_ln96_fu_91_p1 = ap_sig_allocacmp_j_14;

endmodule //pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_polyveck_invntt_tomont_Pipeline_VITIS_LOOP_95_4
