// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_325_1_VITIS_LOOP_298_1_1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w0_vec_coeffs_address0,
        w0_vec_coeffs_ce0,
        w0_vec_coeffs_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] w0_vec_coeffs_address0;
output   w0_vec_coeffs_ce0;
input  [31:0] w0_vec_coeffs_q0;
output  [0:0] ap_return;

reg ap_idle;
reg w0_vec_coeffs_ce0;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire   [0:0] icmp_ln303_fu_220_p2;
reg   [0:0] icmp_ln325_reg_265;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] merge_reg_83;
wire   [0:0] icmp_ln325_fu_113_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [10:0] add_ln325_1_fu_119_p2;
reg   [10:0] add_ln325_1_reg_269;
wire   [8:0] select_ln325_fu_143_p3;
reg   [8:0] select_ln325_reg_274;
wire   [2:0] select_ln325_1_fu_151_p3;
reg   [2:0] select_ln325_1_reg_279;
reg   [0:0] ap_phi_mux_merge_phi_fu_87_p4;
wire   [63:0] zext_ln300_1_fu_181_p1;
reg   [8:0] i_fu_58;
wire   [8:0] add_ln298_fu_226_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_load;
reg   [2:0] i_13_fu_62;
reg   [2:0] ap_sig_allocacmp_i_13_load;
reg   [10:0] indvar_flatten104_fu_66;
reg   [10:0] ap_sig_allocacmp_indvar_flatten104_load;
wire   [0:0] icmp_ln298_fu_137_p2;
wire   [2:0] add_ln325_fu_131_p2;
wire   [1:0] trunc_ln300_fu_159_p1;
wire   [9:0] tmp_s_fu_163_p3;
wire   [9:0] zext_ln300_fu_171_p1;
wire   [9:0] add_ln300_fu_175_p2;
wire   [0:0] t_fu_186_p3;
wire   [31:0] shl_ln301_fu_202_p2;
wire   [31:0] select_ln300_fu_194_p3;
wire   [31:0] and_ln301_fu_208_p2;
wire   [31:0] t_10_fu_214_p2;
reg   [0:0] ap_return_preg;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_return_preg = 1'd0;
#0 ap_done_reg = 1'b0;
end

pqcrystals_dilithium2_ref_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln325_reg_265 == 1'd1) | (icmp_ln303_fu_220_p2 == 1'd1)))) begin
            ap_return_preg <= ap_phi_mux_merge_phi_fu_87_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        i_13_fu_62 <= 3'd0;
    end else if (((icmp_ln325_reg_265 == 1'd0) & (icmp_ln303_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_13_fu_62 <= select_ln325_1_reg_279;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        i_fu_58 <= 9'd0;
    end else if (((icmp_ln325_reg_265 == 1'd0) & (icmp_ln303_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_58 <= add_ln298_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        indvar_flatten104_fu_66 <= 11'd0;
    end else if (((icmp_ln325_reg_265 == 1'd0) & (icmp_ln303_fu_220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten104_fu_66 <= add_ln325_1_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_reg_265 == 1'd0) & (icmp_ln303_fu_220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        merge_reg_83 <= 1'd0;
    end else if (((icmp_ln325_fu_113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        merge_reg_83 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        add_ln325_1_reg_269 <= add_ln325_1_fu_119_p2;
        icmp_ln325_reg_265 <= icmp_ln325_fu_113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_113_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        select_ln325_1_reg_279 <= select_ln325_1_fu_151_p3;
        select_ln325_reg_274 <= select_ln325_fu_143_p3;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln325_reg_265 == 1'd1) | (icmp_ln303_fu_220_p2 == 1'd1)))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln325_reg_265 == 1'd0) & (icmp_ln303_fu_220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_phi_mux_merge_phi_fu_87_p4 = 1'd0;
    end else begin
        ap_phi_mux_merge_phi_fu_87_p4 = merge_reg_83;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln325_reg_265 == 1'd1) | (icmp_ln303_fu_220_p2 == 1'd1)))) begin
        ap_return = ap_phi_mux_merge_phi_fu_87_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_13_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_13_load = i_13_fu_62;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_load = 9'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_58;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_indvar_flatten104_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten104_load = indvar_flatten104_fu_66;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        w0_vec_coeffs_ce0 = 1'b1;
    end else begin
        w0_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln298_fu_226_p2 = (select_ln325_reg_274 + 9'd1);

assign add_ln300_fu_175_p2 = (tmp_s_fu_163_p3 + zext_ln300_fu_171_p1);

assign add_ln325_1_fu_119_p2 = (ap_sig_allocacmp_indvar_flatten104_load + 11'd1);

assign add_ln325_fu_131_p2 = (ap_sig_allocacmp_i_13_load + 3'd1);

assign and_ln301_fu_208_p2 = (shl_ln301_fu_202_p2 & select_ln300_fu_194_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign icmp_ln298_fu_137_p2 = ((ap_sig_allocacmp_i_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_220_p2 = (($signed(t_10_fu_214_p2) > $signed(32'd95153)) ? 1'b1 : 1'b0);

assign icmp_ln325_fu_113_p2 = ((ap_sig_allocacmp_indvar_flatten104_load == 11'd1024) ? 1'b1 : 1'b0);

assign select_ln300_fu_194_p3 = ((t_fu_186_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln325_1_fu_151_p3 = ((icmp_ln298_fu_137_p2[0:0] == 1'b1) ? add_ln325_fu_131_p2 : ap_sig_allocacmp_i_13_load);

assign select_ln325_fu_143_p3 = ((icmp_ln298_fu_137_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_i_load);

assign shl_ln301_fu_202_p2 = w0_vec_coeffs_q0 << 32'd1;

assign t_10_fu_214_p2 = (w0_vec_coeffs_q0 - and_ln301_fu_208_p2);

assign t_fu_186_p3 = w0_vec_coeffs_q0[32'd31];

assign tmp_s_fu_163_p3 = {{trunc_ln300_fu_159_p1}, {8'd0}};

assign trunc_ln300_fu_159_p1 = select_ln325_1_fu_151_p3[1:0];

assign w0_vec_coeffs_address0 = zext_ln300_1_fu_181_p1;

assign zext_ln300_1_fu_181_p1 = add_ln300_fu_175_p2;

assign zext_ln300_fu_171_p1 = select_ln325_fu_143_p3;

endmodule //pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_325_1_VITIS_LOOP_298_1_1_1
