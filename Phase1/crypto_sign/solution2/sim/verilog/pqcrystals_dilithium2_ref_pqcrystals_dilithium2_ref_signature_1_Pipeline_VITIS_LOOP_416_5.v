// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_416_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        seedbuf_address0,
        seedbuf_ce0,
        seedbuf_q0,
        seedbuf_address1,
        seedbuf_ce1,
        seedbuf_q1,
        state_s_0_address0,
        state_s_0_ce0,
        state_s_0_we0,
        state_s_0_d0,
        state_s_0_address1,
        state_s_0_ce1,
        state_s_0_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] seedbuf_address0;
output   seedbuf_ce0;
input  [7:0] seedbuf_q0;
output  [7:0] seedbuf_address1;
output   seedbuf_ce1;
input  [7:0] seedbuf_q1;
output  [4:0] state_s_0_address0;
output   state_s_0_ce0;
output   state_s_0_we0;
output  [63:0] state_s_0_d0;
output  [4:0] state_s_0_address1;
output   state_s_0_ce1;
input  [63:0] state_s_0_q1;

reg ap_idle;
reg[7:0] seedbuf_address0;
reg seedbuf_ce0;
reg[7:0] seedbuf_address1;
reg seedbuf_ce1;
reg state_s_0_ce0;
reg state_s_0_we0;
reg state_s_0_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln416_fu_154_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln416_reg_367;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] shl_ln4_fu_171_p3;
reg   [6:0] shl_ln4_reg_371;
reg   [4:0] state_s_0_addr_reg_391;
reg   [7:0] seedbuf_load_reg_397;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] seedbuf_load_1_reg_402;
reg   [63:0] state_s_0_load_reg_417;
reg   [7:0] seedbuf_load_2_reg_422;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [7:0] seedbuf_load_3_reg_427;
reg   [7:0] seedbuf_load_4_reg_442;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] seedbuf_load_5_reg_447;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln31_1_fu_189_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln31_3_fu_210_p1;
wire   [63:0] zext_ln416_fu_166_p1;
wire   [63:0] zext_ln31_5_fu_235_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln31_7_fu_255_p1;
wire   [63:0] zext_ln31_9_fu_275_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln31_11_fu_295_p1;
wire   [63:0] zext_ln31_13_fu_315_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln31_15_fu_335_p1;
reg   [3:0] i_fu_52;
wire   [3:0] i_9_fu_160_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_8;
wire   [7:0] zext_ln31_fu_179_p1;
wire   [7:0] add_ln31_fu_183_p2;
wire   [6:0] or_ln31_fu_194_p2;
wire   [7:0] zext_ln31_2_fu_200_p1;
wire   [7:0] add_ln31_1_fu_204_p2;
wire   [6:0] or_ln31_1_fu_220_p2;
wire   [7:0] zext_ln31_4_fu_225_p1;
wire   [7:0] add_ln31_2_fu_229_p2;
wire   [6:0] or_ln31_2_fu_240_p2;
wire   [7:0] zext_ln31_6_fu_245_p1;
wire   [7:0] add_ln31_3_fu_249_p2;
wire   [6:0] or_ln31_3_fu_260_p2;
wire   [7:0] zext_ln31_8_fu_265_p1;
wire   [7:0] add_ln31_4_fu_269_p2;
wire   [6:0] or_ln31_4_fu_280_p2;
wire   [7:0] zext_ln31_10_fu_285_p1;
wire   [7:0] add_ln31_5_fu_289_p2;
wire   [6:0] or_ln31_5_fu_300_p2;
wire   [7:0] zext_ln31_12_fu_305_p1;
wire   [7:0] add_ln31_6_fu_309_p2;
wire   [6:0] or_ln31_6_fu_320_p2;
wire   [7:0] zext_ln31_14_fu_325_p1;
wire   [7:0] add_ln31_7_fu_329_p2;
wire   [63:0] r_15_7_i_fu_340_p9;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

pqcrystals_dilithium2_ref_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln416_fu_154_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_52 <= i_9_fu_160_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_52 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln416_reg_367 <= icmp_ln416_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_reg_367 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        seedbuf_load_1_reg_402 <= seedbuf_q0;
        seedbuf_load_reg_397 <= seedbuf_q1;
        state_s_0_load_reg_417 <= state_s_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_reg_367 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        seedbuf_load_2_reg_422 <= seedbuf_q1;
        seedbuf_load_3_reg_427 <= seedbuf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_reg_367 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        seedbuf_load_4_reg_442 <= seedbuf_q1;
        seedbuf_load_5_reg_447 <= seedbuf_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln416_fu_154_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shl_ln4_reg_371[6 : 3] <= shl_ln4_fu_171_p3[6 : 3];
        state_s_0_addr_reg_391[3 : 0] <= zext_ln416_fu_166_p1[3 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln416_fu_154_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_8 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_8 = i_fu_52;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            seedbuf_address0 = zext_ln31_15_fu_335_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            seedbuf_address0 = zext_ln31_11_fu_295_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            seedbuf_address0 = zext_ln31_7_fu_255_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            seedbuf_address0 = zext_ln31_3_fu_210_p1;
        end else begin
            seedbuf_address0 = 'bx;
        end
    end else begin
        seedbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            seedbuf_address1 = zext_ln31_13_fu_315_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            seedbuf_address1 = zext_ln31_9_fu_275_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            seedbuf_address1 = zext_ln31_5_fu_235_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            seedbuf_address1 = zext_ln31_1_fu_189_p1;
        end else begin
            seedbuf_address1 = 'bx;
        end
    end else begin
        seedbuf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        seedbuf_ce0 = 1'b1;
    end else begin
        seedbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        seedbuf_ce1 = 1'b1;
    end else begin
        seedbuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_0_ce0 = 1'b1;
    end else begin
        state_s_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_0_ce1 = 1'b1;
    end else begin
        state_s_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        state_s_0_we0 = 1'b1;
    end else begin
        state_s_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_1_fu_204_p2 = (zext_ln31_2_fu_200_p1 + 8'd80);

assign add_ln31_2_fu_229_p2 = (zext_ln31_4_fu_225_p1 + 8'd80);

assign add_ln31_3_fu_249_p2 = (zext_ln31_6_fu_245_p1 + 8'd80);

assign add_ln31_4_fu_269_p2 = (zext_ln31_8_fu_265_p1 + 8'd80);

assign add_ln31_5_fu_289_p2 = (zext_ln31_10_fu_285_p1 + 8'd80);

assign add_ln31_6_fu_309_p2 = (zext_ln31_12_fu_305_p1 + 8'd80);

assign add_ln31_7_fu_329_p2 = (zext_ln31_14_fu_325_p1 + 8'd80);

assign add_ln31_fu_183_p2 = (zext_ln31_fu_179_p1 + 8'd80);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign i_9_fu_160_p2 = (ap_sig_allocacmp_i_8 + 4'd1);

assign icmp_ln416_fu_154_p2 = ((ap_sig_allocacmp_i_8 == 4'd10) ? 1'b1 : 1'b0);

assign or_ln31_1_fu_220_p2 = (shl_ln4_reg_371 | 7'd2);

assign or_ln31_2_fu_240_p2 = (shl_ln4_reg_371 | 7'd3);

assign or_ln31_3_fu_260_p2 = (shl_ln4_reg_371 | 7'd4);

assign or_ln31_4_fu_280_p2 = (shl_ln4_reg_371 | 7'd5);

assign or_ln31_5_fu_300_p2 = (shl_ln4_reg_371 | 7'd6);

assign or_ln31_6_fu_320_p2 = (shl_ln4_reg_371 | 7'd7);

assign or_ln31_fu_194_p2 = (shl_ln4_fu_171_p3 | 7'd1);

assign r_15_7_i_fu_340_p9 = {{{{{{{{seedbuf_q0}, {seedbuf_q1}}, {seedbuf_load_5_reg_447}}, {seedbuf_load_4_reg_442}}, {seedbuf_load_3_reg_427}}, {seedbuf_load_2_reg_422}}, {seedbuf_load_1_reg_402}}, {seedbuf_load_reg_397}};

assign shl_ln4_fu_171_p3 = {{ap_sig_allocacmp_i_8}, {3'd0}};

assign state_s_0_address0 = state_s_0_addr_reg_391;

assign state_s_0_address1 = zext_ln416_fu_166_p1;

assign state_s_0_d0 = (state_s_0_load_reg_417 ^ r_15_7_i_fu_340_p9);

assign zext_ln31_10_fu_285_p1 = or_ln31_4_fu_280_p2;

assign zext_ln31_11_fu_295_p1 = add_ln31_5_fu_289_p2;

assign zext_ln31_12_fu_305_p1 = or_ln31_5_fu_300_p2;

assign zext_ln31_13_fu_315_p1 = add_ln31_6_fu_309_p2;

assign zext_ln31_14_fu_325_p1 = or_ln31_6_fu_320_p2;

assign zext_ln31_15_fu_335_p1 = add_ln31_7_fu_329_p2;

assign zext_ln31_1_fu_189_p1 = add_ln31_fu_183_p2;

assign zext_ln31_2_fu_200_p1 = or_ln31_fu_194_p2;

assign zext_ln31_3_fu_210_p1 = add_ln31_1_fu_204_p2;

assign zext_ln31_4_fu_225_p1 = or_ln31_1_fu_220_p2;

assign zext_ln31_5_fu_235_p1 = add_ln31_2_fu_229_p2;

assign zext_ln31_6_fu_245_p1 = or_ln31_2_fu_240_p2;

assign zext_ln31_7_fu_255_p1 = add_ln31_3_fu_249_p2;

assign zext_ln31_8_fu_265_p1 = or_ln31_3_fu_260_p2;

assign zext_ln31_9_fu_275_p1 = add_ln31_4_fu_269_p2;

assign zext_ln31_fu_179_p1 = shl_ln4_fu_171_p3;

assign zext_ln416_fu_166_p1 = ap_sig_allocacmp_i_8;

always @ (posedge ap_clk) begin
    shl_ln4_reg_371[2:0] <= 3'b000;
    state_s_0_addr_reg_391[4] <= 1'b0;
end

endmodule //pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_416_5
