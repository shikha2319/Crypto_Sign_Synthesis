// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium2_ref_keccak_squeeze_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sm_address0,
        sm_ce0,
        sm_we0,
        sm_d0,
        sm_address1,
        sm_ce1,
        sm_we1,
        sm_d1,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] sm_address0;
output   sm_ce0;
output   sm_we0;
output  [7:0] sm_d0;
output  [12:0] sm_address1;
output   sm_ce1;
output   sm_we1;
output  [7:0] sm_d1;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[12:0] sm_address0;
reg sm_ce0;
reg sm_we0;
reg[7:0] sm_d0;
reg[12:0] sm_address1;
reg sm_ce1;
reg sm_we1;
reg[7:0] sm_d1;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg s_ce1;
reg s_we1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln540_fu_193_p2;
wire   [1:0] trunc_ln541_1_fu_205_p1;
reg   [1:0] trunc_ln541_1_reg_388;
wire   [4:0] shl_ln_fu_219_p3;
reg   [4:0] shl_ln_reg_393;
wire    ap_CS_fsm_state4;
reg   [7:0] trunc_ln13_reg_403;
reg   [7:0] trunc_ln14_reg_408;
reg   [7:0] trunc_ln15_reg_413;
reg   [7:0] trunc_ln16_reg_418;
reg   [7:0] trunc_ln17_reg_423;
reg   [7:0] trunc_ln18_reg_428;
wire    grp_KeccakF1600_StatePermute_fu_172_ap_start;
wire    grp_KeccakF1600_StatePermute_fu_172_ap_done;
wire    grp_KeccakF1600_StatePermute_fu_172_ap_idle;
wire    grp_KeccakF1600_StatePermute_fu_172_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePermute_fu_172_state_address0;
wire    grp_KeccakF1600_StatePermute_fu_172_state_ce0;
wire    grp_KeccakF1600_StatePermute_fu_172_state_we0;
wire   [63:0] grp_KeccakF1600_StatePermute_fu_172_state_d0;
wire   [4:0] grp_KeccakF1600_StatePermute_fu_172_state_address1;
wire    grp_KeccakF1600_StatePermute_fu_172_state_ce1;
wire    grp_KeccakF1600_StatePermute_fu_172_state_we1;
wire   [63:0] grp_KeccakF1600_StatePermute_fu_172_state_d1;
reg    grp_KeccakF1600_StatePermute_fu_172_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln540_fu_188_p1;
wire   [63:0] zext_ln541_fu_226_p1;
wire   [63:0] zext_ln542_fu_248_p1;
wire   [63:0] zext_ln543_fu_318_p1;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln544_fu_328_p1;
wire   [63:0] zext_ln545_fu_338_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln546_fu_348_p1;
wire   [63:0] zext_ln547_fu_358_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln548_fu_368_p1;
reg   [2:0] i_fu_82;
wire   [2:0] add_ln540_fu_199_p2;
wire   [7:0] trunc_ln541_fu_214_p1;
wire   [4:0] or_ln542_fu_242_p2;
wire   [4:0] or_ln543_fu_313_p2;
wire   [4:0] or_ln544_fu_323_p2;
wire   [4:0] or_ln545_fu_333_p2;
wire   [4:0] or_ln546_fu_343_p2;
wire   [4:0] or_ln547_fu_353_p2;
wire   [4:0] or_ln548_fu_363_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_KeccakF1600_StatePermute_fu_172_ap_start_reg = 1'b0;
end

pqcrystals_dilithium2_ref_KeccakF1600_StatePermute grp_KeccakF1600_StatePermute_fu_172(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePermute_fu_172_ap_start),
    .ap_done(grp_KeccakF1600_StatePermute_fu_172_ap_done),
    .ap_idle(grp_KeccakF1600_StatePermute_fu_172_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePermute_fu_172_ap_ready),
    .state_address0(grp_KeccakF1600_StatePermute_fu_172_state_address0),
    .state_ce0(grp_KeccakF1600_StatePermute_fu_172_state_ce0),
    .state_we0(grp_KeccakF1600_StatePermute_fu_172_state_we0),
    .state_d0(grp_KeccakF1600_StatePermute_fu_172_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePermute_fu_172_state_address1),
    .state_ce1(grp_KeccakF1600_StatePermute_fu_172_state_ce1),
    .state_we1(grp_KeccakF1600_StatePermute_fu_172_state_we1),
    .state_d1(grp_KeccakF1600_StatePermute_fu_172_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePermute_fu_172_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_KeccakF1600_StatePermute_fu_172_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePermute_fu_172_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePermute_fu_172_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_82 <= 3'd0;
    end else if (((icmp_ln540_fu_193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_fu_82 <= add_ln540_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        shl_ln_reg_393[4 : 3] <= shl_ln_fu_219_p3[4 : 3];
        trunc_ln13_reg_403 <= {{s_q0[23:16]}};
        trunc_ln14_reg_408 <= {{s_q0[31:24]}};
        trunc_ln15_reg_413 <= {{s_q0[39:32]}};
        trunc_ln16_reg_418 <= {{s_q0[47:40]}};
        trunc_ln17_reg_423 <= {{s_q0[55:48]}};
        trunc_ln18_reg_428 <= {{s_q0[63:56]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln540_fu_193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        trunc_ln541_1_reg_388 <= trunc_ln541_1_fu_205_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_KeccakF1600_StatePermute_fu_172_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln540_fu_193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln540_fu_193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s_address0 = zext_ln540_fu_188_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_address0 = grp_KeccakF1600_StatePermute_fu_172_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_ce0 = grp_KeccakF1600_StatePermute_fu_172_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        s_ce1 = grp_KeccakF1600_StatePermute_fu_172_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        s_we0 = grp_KeccakF1600_StatePermute_fu_172_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        s_we1 = grp_KeccakF1600_StatePermute_fu_172_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sm_address0 = zext_ln548_fu_368_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sm_address0 = zext_ln546_fu_348_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sm_address0 = zext_ln544_fu_328_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sm_address0 = zext_ln542_fu_248_p1;
    end else begin
        sm_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sm_address1 = zext_ln547_fu_358_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sm_address1 = zext_ln545_fu_338_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sm_address1 = zext_ln543_fu_318_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sm_address1 = zext_ln541_fu_226_p1;
    end else begin
        sm_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sm_ce0 = 1'b1;
    end else begin
        sm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sm_ce1 = 1'b1;
    end else begin
        sm_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sm_d0 = trunc_ln18_reg_428;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sm_d0 = trunc_ln16_reg_418;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sm_d0 = trunc_ln14_reg_408;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sm_d0 = {{s_q0[15:8]}};
    end else begin
        sm_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sm_d1 = trunc_ln17_reg_423;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sm_d1 = trunc_ln15_reg_413;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sm_d1 = trunc_ln13_reg_403;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sm_d1 = trunc_ln541_fu_214_p1;
    end else begin
        sm_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sm_we0 = 1'b1;
    end else begin
        sm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        sm_we1 = 1'b1;
    end else begin
        sm_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_KeccakF1600_StatePermute_fu_172_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln540_fu_193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln540_fu_199_p2 = (i_fu_82 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign grp_KeccakF1600_StatePermute_fu_172_ap_start = grp_KeccakF1600_StatePermute_fu_172_ap_start_reg;

assign icmp_ln540_fu_193_p2 = ((i_fu_82 == 3'd4) ? 1'b1 : 1'b0);

assign or_ln542_fu_242_p2 = (shl_ln_fu_219_p3 | 5'd1);

assign or_ln543_fu_313_p2 = (shl_ln_reg_393 | 5'd2);

assign or_ln544_fu_323_p2 = (shl_ln_reg_393 | 5'd3);

assign or_ln545_fu_333_p2 = (shl_ln_reg_393 | 5'd4);

assign or_ln546_fu_343_p2 = (shl_ln_reg_393 | 5'd5);

assign or_ln547_fu_353_p2 = (shl_ln_reg_393 | 5'd6);

assign or_ln548_fu_363_p2 = (shl_ln_reg_393 | 5'd7);

assign s_address1 = grp_KeccakF1600_StatePermute_fu_172_state_address1;

assign s_d0 = grp_KeccakF1600_StatePermute_fu_172_state_d0;

assign s_d1 = grp_KeccakF1600_StatePermute_fu_172_state_d1;

assign shl_ln_fu_219_p3 = {{trunc_ln541_1_reg_388}, {3'd0}};

assign trunc_ln541_1_fu_205_p1 = i_fu_82[1:0];

assign trunc_ln541_fu_214_p1 = s_q0[7:0];

assign zext_ln540_fu_188_p1 = i_fu_82;

assign zext_ln541_fu_226_p1 = shl_ln_fu_219_p3;

assign zext_ln542_fu_248_p1 = or_ln542_fu_242_p2;

assign zext_ln543_fu_318_p1 = or_ln543_fu_313_p2;

assign zext_ln544_fu_328_p1 = or_ln544_fu_323_p2;

assign zext_ln545_fu_338_p1 = or_ln545_fu_333_p2;

assign zext_ln546_fu_348_p1 = or_ln546_fu_343_p2;

assign zext_ln547_fu_358_p1 = or_ln547_fu_353_p2;

assign zext_ln548_fu_368_p1 = or_ln548_fu_363_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_393[2:0] <= 3'b000;
end

endmodule //pqcrystals_dilithium2_ref_keccak_squeeze_1
