// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_371_1_VITIS_LOOP_225_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w1_vec_coeffs_address0,
        w1_vec_coeffs_ce0,
        w1_vec_coeffs_we0,
        w1_vec_coeffs_d0,
        w1_vec_coeffs_address1,
        w1_vec_coeffs_ce1,
        w1_vec_coeffs_q1,
        w0_vec_coeffs_address0,
        w0_vec_coeffs_ce0,
        w0_vec_coeffs_we0,
        w0_vec_coeffs_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] w1_vec_coeffs_address0;
output   w1_vec_coeffs_ce0;
output   w1_vec_coeffs_we0;
output  [31:0] w1_vec_coeffs_d0;
output  [9:0] w1_vec_coeffs_address1;
output   w1_vec_coeffs_ce1;
input  [31:0] w1_vec_coeffs_q1;
output  [9:0] w0_vec_coeffs_address0;
output   w0_vec_coeffs_ce0;
output   w0_vec_coeffs_we0;
output  [31:0] w0_vec_coeffs_d0;

reg ap_idle;
reg w1_vec_coeffs_ce0;
reg w1_vec_coeffs_we0;
reg w1_vec_coeffs_ce1;
reg w0_vec_coeffs_ce0;
reg w0_vec_coeffs_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln371_fu_140_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln226_1_fu_208_p1;
reg   [63:0] zext_ln226_1_reg_380;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter1_reg;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter2_reg;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter3_reg;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter4_reg;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter5_reg;
reg   [63:0] zext_ln226_1_reg_380_pp0_iter6_reg;
reg   [9:0] w1_vec_coeffs_addr_reg_385;
reg   [9:0] w1_vec_coeffs_addr_reg_385_pp0_iter1_reg;
reg   [9:0] w1_vec_coeffs_addr_reg_385_pp0_iter2_reg;
reg   [9:0] w1_vec_coeffs_addr_reg_385_pp0_iter3_reg;
reg   [31:0] w1_vec_coeffs_load_reg_391;
reg   [31:0] w1_vec_coeffs_load_reg_391_pp0_iter2_reg;
reg   [31:0] w1_vec_coeffs_load_reg_391_pp0_iter3_reg;
reg   [31:0] w1_vec_coeffs_load_reg_391_pp0_iter4_reg;
reg  signed [31:0] w1_vec_coeffs_load_reg_391_pp0_iter5_reg;
wire    ap_block_pp0_stage0;
reg   [8:0] i_fu_80;
wire   [8:0] add_ln225_fu_213_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_load;
reg   [2:0] i_11_fu_84;
wire   [2:0] select_ln371_1_fu_178_p3;
reg   [2:0] ap_sig_allocacmp_i_11_load;
reg   [10:0] indvar_flatten41_fu_88;
wire   [10:0] add_ln371_1_fu_146_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten41_load;
wire   [0:0] icmp_ln225_fu_164_p2;
wire   [2:0] add_ln371_fu_158_p2;
wire   [1:0] trunc_ln226_fu_186_p1;
wire   [8:0] select_ln371_fu_170_p3;
wire   [9:0] tmp_s_fu_190_p3;
wire   [9:0] zext_ln226_fu_198_p1;
wire   [9:0] add_ln226_fu_202_p2;
wire   [31:0] add_ln42_fu_234_p2;
wire  signed [24:0] a1_fu_240_p4;
wire  signed [31:0] a1_1_fu_254_p1;
wire   [31:0] grp_fu_337_p3;
wire  signed [7:0] a1_1_fu_254_p4;
wire  signed [8:0] sext_ln40_fu_263_p1;
wire   [8:0] sub_ln48_fu_267_p2;
wire   [0:0] tmp_fu_273_p3;
wire   [0:0] xor_ln48_fu_281_p2;
wire   [7:0] select_ln48_fu_287_p3;
wire  signed [7:0] a1_2_fu_295_p2;
wire  signed [31:0] grp_fu_346_p3;
(* use_dsp48 = "no" *) wire   [31:0] sub_ln52_fu_310_p2;
wire   [0:0] tmp_1_fu_315_p3;
wire   [31:0] select_ln52_fu_323_p3;
wire   [13:0] grp_fu_337_p1;
wire   [23:0] grp_fu_337_p2;
wire  signed [18:0] grp_fu_346_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

pqcrystals_dilithium2_ref_mac_muladd_25s_14ns_24ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 32 ))
mac_muladd_25s_14ns_24ns_32_4_1_U234(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a1_fu_240_p4),
    .din1(grp_fu_337_p1),
    .din2(grp_fu_337_p2),
    .ce(1'b1),
    .dout(grp_fu_337_p3)
);

pqcrystals_dilithium2_ref_mac_muladd_8s_19s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 19 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_8s_19s_32s_32_4_1_U235(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a1_2_fu_295_p2),
    .din1(grp_fu_346_p1),
    .din2(w1_vec_coeffs_load_reg_391_pp0_iter5_reg),
    .ce(1'b1),
    .dout(grp_fu_346_p3)
);

pqcrystals_dilithium2_ref_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln371_fu_140_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_11_fu_84 <= select_ln371_1_fu_178_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_11_fu_84 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln371_fu_140_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_80 <= add_ln225_fu_213_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln371_fu_140_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten41_fu_88 <= add_ln371_1_fu_146_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten41_fu_88 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        w1_vec_coeffs_addr_reg_385_pp0_iter1_reg <= w1_vec_coeffs_addr_reg_385;
        zext_ln226_1_reg_380_pp0_iter1_reg[9 : 0] <= zext_ln226_1_reg_380[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        w1_vec_coeffs_addr_reg_385_pp0_iter2_reg <= w1_vec_coeffs_addr_reg_385_pp0_iter1_reg;
        w1_vec_coeffs_addr_reg_385_pp0_iter3_reg <= w1_vec_coeffs_addr_reg_385_pp0_iter2_reg;
        w1_vec_coeffs_load_reg_391_pp0_iter2_reg <= w1_vec_coeffs_load_reg_391;
        w1_vec_coeffs_load_reg_391_pp0_iter3_reg <= w1_vec_coeffs_load_reg_391_pp0_iter2_reg;
        w1_vec_coeffs_load_reg_391_pp0_iter4_reg <= w1_vec_coeffs_load_reg_391_pp0_iter3_reg;
        w1_vec_coeffs_load_reg_391_pp0_iter5_reg <= w1_vec_coeffs_load_reg_391_pp0_iter4_reg;
        zext_ln226_1_reg_380_pp0_iter2_reg[9 : 0] <= zext_ln226_1_reg_380_pp0_iter1_reg[9 : 0];
        zext_ln226_1_reg_380_pp0_iter3_reg[9 : 0] <= zext_ln226_1_reg_380_pp0_iter2_reg[9 : 0];
        zext_ln226_1_reg_380_pp0_iter4_reg[9 : 0] <= zext_ln226_1_reg_380_pp0_iter3_reg[9 : 0];
        zext_ln226_1_reg_380_pp0_iter5_reg[9 : 0] <= zext_ln226_1_reg_380_pp0_iter4_reg[9 : 0];
        zext_ln226_1_reg_380_pp0_iter6_reg[9 : 0] <= zext_ln226_1_reg_380_pp0_iter5_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln371_fu_140_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_vec_coeffs_addr_reg_385 <= zext_ln226_1_fu_208_p1;
        zext_ln226_1_reg_380[9 : 0] <= zext_ln226_1_fu_208_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_vec_coeffs_load_reg_391 <= w1_vec_coeffs_q1;
    end
end

always @ (*) begin
    if (((icmp_ln371_fu_140_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_11_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_11_load = i_11_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 9'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten41_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten41_load = indvar_flatten41_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        w0_vec_coeffs_ce0 = 1'b1;
    end else begin
        w0_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        w0_vec_coeffs_we0 = 1'b1;
    end else begin
        w0_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        w1_vec_coeffs_ce0 = 1'b1;
    end else begin
        w1_vec_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w1_vec_coeffs_ce1 = 1'b1;
    end else begin
        w1_vec_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        w1_vec_coeffs_we0 = 1'b1;
    end else begin
        w1_vec_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_1_fu_254_p1 = grp_fu_337_p3;

assign a1_1_fu_254_p4 = {{a1_1_fu_254_p1[31:24]}};

assign a1_2_fu_295_p2 = (select_ln48_fu_287_p3 & a1_1_fu_254_p4);

assign a1_fu_240_p4 = {{add_ln42_fu_234_p2[31:7]}};

assign add_ln225_fu_213_p2 = (select_ln371_fu_170_p3 + 9'd1);

assign add_ln226_fu_202_p2 = (tmp_s_fu_190_p3 + zext_ln226_fu_198_p1);

assign add_ln371_1_fu_146_p2 = (ap_sig_allocacmp_indvar_flatten41_load + 11'd1);

assign add_ln371_fu_158_p2 = (ap_sig_allocacmp_i_11_load + 3'd1);

assign add_ln42_fu_234_p2 = (w1_vec_coeffs_q1 + 32'd127);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_337_p1 = 32'd11275;

assign grp_fu_337_p2 = 32'd8388608;

assign grp_fu_346_p1 = 27'd134027264;

assign icmp_ln225_fu_164_p2 = ((ap_sig_allocacmp_i_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln371_fu_140_p2 = ((ap_sig_allocacmp_indvar_flatten41_load == 11'd1024) ? 1'b1 : 1'b0);

assign select_ln371_1_fu_178_p3 = ((icmp_ln225_fu_164_p2[0:0] == 1'b1) ? add_ln371_fu_158_p2 : ap_sig_allocacmp_i_11_load);

assign select_ln371_fu_170_p3 = ((icmp_ln225_fu_164_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_i_load);

assign select_ln48_fu_287_p3 = ((xor_ln48_fu_281_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln52_fu_323_p3 = ((tmp_1_fu_315_p3[0:0] == 1'b1) ? 32'd8380417 : 32'd0);

assign sext_ln40_fu_263_p1 = a1_1_fu_254_p4;

assign sub_ln48_fu_267_p2 = ($signed(9'd43) - $signed(sext_ln40_fu_263_p1));

assign sub_ln52_fu_310_p2 = ($signed(32'd4190208) - $signed(grp_fu_346_p3));

assign tmp_1_fu_315_p3 = sub_ln52_fu_310_p2[32'd31];

assign tmp_fu_273_p3 = sub_ln48_fu_267_p2[32'd8];

assign tmp_s_fu_190_p3 = {{trunc_ln226_fu_186_p1}, {8'd0}};

assign trunc_ln226_fu_186_p1 = select_ln371_1_fu_178_p3[1:0];

assign w0_vec_coeffs_address0 = zext_ln226_1_reg_380_pp0_iter6_reg;

assign w0_vec_coeffs_d0 = ($signed(grp_fu_346_p3) - $signed(select_ln52_fu_323_p3));

assign w1_vec_coeffs_address0 = w1_vec_coeffs_addr_reg_385_pp0_iter3_reg;

assign w1_vec_coeffs_address1 = zext_ln226_1_fu_208_p1;

assign w1_vec_coeffs_d0 = $signed(a1_2_fu_295_p2);

assign xor_ln48_fu_281_p2 = (tmp_fu_273_p3 ^ 1'd1);

assign zext_ln226_1_fu_208_p1 = add_ln226_fu_202_p2;

assign zext_ln226_fu_198_p1 = select_ln371_fu_170_p3;

always @ (posedge ap_clk) begin
    zext_ln226_1_reg_380[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln226_1_reg_380_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //pqcrystals_dilithium2_ref_pqcrystals_dilithium2_ref_signature_1_Pipeline_VITIS_LOOP_371_1_VITIS_LOOP_225_1
